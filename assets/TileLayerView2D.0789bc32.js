import{fJ as w,fK as y,fL as I,fM as V,cE as H,cg as v,G as o,aU as u,n as T,aa as n,ab as g,ac as q}from"./index.7eb0daf2.js";import"./colorUtils.085072a2.js";import"./GeometryUtils.c6f9b045.js";import"./UpdateTracking2D.571bdffb.js";import"./enums.abef80de.js";import"./definitions.a3a54ed1.js";import"./defaults.e5a1167a.js";import"./OverrideHelper.b5d99b26.js";import"./floatRGBA.133c49be.js";import"./Container.461c0161.js";import"./WGLContainer.a2728de7.js";import"./Texture.7423fe29.js";import"./enums.8929356b.js";import"./Program.9a92c5ff.js";import"./LabelMetric.267a8b18.js";import"./StyleDefinition.e031dcf6.js";import"./enums.7f54e43a.js";import"./MagnifierPrograms.0333d37a.js";import"./pbf.72af564e.js";import"./FeatureCommandQueue.f16cbaa3.js";import"./PieChartMeshWriter.c11791d1.js";import"./renderState.19e0eaae.js";import"./interfaces.98cd2ad6.js";import"./testSVGPremultipliedAlpha.3be788db.js";import{V as U}from"./GraphicsView2D.73f18369.js";import"./earcut.dc9d94eb.js";import"./vec3f32.788be850.js";import{r as b,o as f,n as d}from"./imageUtils.aef0a6e4.js";import{f as C,y as Q}from"./LayerView.649e11dc.js";import{h as S}from"./HighlightGraphicContainer.653a10a6.js";import{i as L}from"./RefreshableLayerView.6a9401d3.js";import{U as P,_ as $,r as G}from"./drapedUtils.49438b18.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./BidiEngine.5f10619c.js";import"./OptimizedFeature.32c00f5f.js";import"./utils.dbb84a38.js";import"./Rect.ab45bd96.js";import"./BindType.597c7f67.js";import"./Util.00c6201e.js";import"./highlightReasons.c3e7cabb.js";import"./defaultsJSON.ba72df2f.js";import"./quantizationUtils.fe6b1e6e.js";import"./ProgramTemplate.7599c672.js";import"./VertexElementDescriptor.c76e1b24.js";import"./config.8224a140.js";import"./featureConversionUtils.c6dfa488.js";import"./OptimizedFeatureSet.6fd3bcb1.js";import"./CircularArray.0c40a6a8.js";import"./AttributeStore.38266bd6.js";import"./labelUtils.37b9d8d8.js";import"./FieldsIndex.333d0734.js";import"./UnknownTimeZone.4756be49.js";import"./TimeOnly.5d28261e.js";import"./timeSupport.393bd0ba.js";import"./json.20588c22.js";import"./diffUtils.080c04bc.js";import"./constants.344a1358.js";import"./TurboLine.af583914.js";import"./basicInterfaces.0f925dcd.js";import"./normalizeUtilsSync.71a1cb90.js";import"./Bitmap.62f36779.js";import"./TileContainer.419fd15d.js";import"./layerViewUtils.8a0a28d0.js";import"./AGraphicContainer.c019acec.js";import"./TechniqueInstance.254dd815.js";import"./scaleUtils.24a7f96d.js";import"./floorFilterUtils.1e9a5f1e.js";import"./sublayerUtils.9912a6d8.js";import"./popupUtils.c8d8e4fb.js";const k=[0,0];let a=class extends L(b(C(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(r,h)=>G(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):H()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return v(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(k,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!o(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const c=new u(m),_=await this.fetchTile(c,{...i,resamplingLevel:h+1});return d(this._tileInfoView,_,c,t)}}throw s}const l=new u(0,0,0,0);let p;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,l,{signal:r}),l.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(l,r)}catch(s){if(o(s))throw s;p=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,p,l,t):p}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){o(i)||T.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([g()],a.prototype,"resampling",null),n([g()],a.prototype,"tilemapCache",null),a=n([q("esri.views.2d.layers.TileLayerView2D")],a);const Yt=a;export{Yt as default};
