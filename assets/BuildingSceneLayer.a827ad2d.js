import{aJ as ue,aa as t,ab as r,ed as x,dX as de,ac as l,d$ as Y,e0 as ee,n as F,U as te,c1 as ce,fX as he,s as I,d7 as me,cz as ge,bz as re,f0 as fe,ef as ve,eG as ie,aT as be,c7 as v,cP as Se,iZ as we,dW as m,e as d,i_ as $e,iS as Oe,e5 as Fe,gu as Ie,e7 as xe,cM as Le,iX as je,dJ as Te}from"./index.7eb0daf2.js";import{m as Be,S as Ae}from"./MultiOriginJSONSupport.b5976a45.js";import"./UniqueValueRenderer.8069ab57.js";import{u as Ee}from"./jsonUtils.93554317.js";import se from"./FeatureLayer.aed98d1b.js";import{c as _,s as Pe,b as _e,y as qe,d as Ne}from"./commonProperties.a37169f8.js";import{s as Re}from"./capabilities.f230e665.js";import{s as Me}from"./fieldProperties.80f53b4c.js";import{Z as ke}from"./FieldsIndex.333d0734.js";import{r as Ue,L as Qe,C as Z}from"./SceneService.086725df.js";import{p as Ce,a as Ke,y as De,m as Ve}from"./I3SLayerDefinitions.39e9ab42.js";import{p as Ze}from"./popupUtils.f17e95f0.js";import{$ as Je}from"./I3SUtil.ba9513ba.js";import{n as He,p as Xe}from"./popupUtils.c8d8e4fb.js";import{i as ze}from"./APIKeyMixin.a389fc6d.js";import{l as Ge}from"./ArcGISService.c7559039.js";import{e as We}from"./CustomParametersMixin.b4d39f07.js";import{b as Ye}from"./OperationalLayer.33897364.js";import{j as et}from"./PortalLayer.5cf51695.js";import{s as tt}from"./associatedFeatureServiceUtils.f808dfcb.js";import{$ as J,Z as rt,w as it}from"./elevationInfoUtils.42c7dcc4.js";import"./ColorStop.aa8650af.js";import"./diffUtils.080c04bc.js";import"./colorRamps.272b71a1.js";import"./sizeVariableUtils.34255976.js";import"./visualVariableUtils.12ee1cdb.js";import"./jsonUtils.185b82ae.js";import"./defaults.e5a1167a.js";import"./defaultsJSON.ba72df2f.js";import"./styleUtils.7f2b22b0.js";import"./LRUCache.6f8863ed.js";import"./Version.856e86b2.js";import"./OverrideHelper.b5d99b26.js";import"./colorUtils.085072a2.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./utils.dbb84a38.js";import"./quantizationUtils.fe6b1e6e.js";import"./heatmapUtils.b763e953.js";import"./FeatureLayerBase.dd6763e4.js";import"./featureLayerUtils.1828d741.js";import"./RelationshipQuery.a9d69ee6.js";import"./LayerFloorInfo.164b006f.js";import"./Relationship.ee67ec43.js";import"./serviceCapabilitiesUtils.21de2819.js";import"./editsZScale.3b0b1c90.js";import"./queryZScale.835a340e.js";import"./FeatureSet.78257171.js";import"./EditBusLayer.979b288a.js";import"./FeatureEffectLayer.11729363.js";import"./FeatureEffect.00e4e7d7.js";import"./FeatureReductionLayer.8358918b.js";import"./FeatureReductionSelection.49649196.js";import"./labelingInfo.41bbc735.js";import"./labelUtils.37b9d8d8.js";import"./MD5.f6d873db.js";import"./OrderedLayer.7fae9ad1.js";import"./OrderByInfo.b53e85dd.js";import"./RefreshableLayer.908b9ff1.js";import"./TemporalLayer.859e579f.js";import"./TimeInfo.d882fe8e.js";import"./FeatureTemplate.7907b31e.js";import"./FeatureType.f4c0cb30.js";import"./versionUtils.9e2a095a.js";import"./styleUtils.f0558e3a.js";import"./TopFeaturesQuery.0af13513.js";import"./interfaces.c34ab3ac.js";import"./UnknownTimeZone.4756be49.js";import"./portalItemUtils.761d02ba.js";import"./originUtils.4db9de46.js";import"./multiOriginJSONSupportUtils.e5f3496a.js";import"./jsonContext.a8ec6dbb.js";import"./resourceUtils.292f7e89.js";import"./resourceUtils.e46436d7.js";import"./saveAPIKeyUtils.47a3a270.js";import"./saveUtils.056b2dea.js";import"./mat4f64.a89cc140.js";import"./spatialReferenceEllipsoidUtils.54dfd023.js";import"./sphere.701721ad.js";import"./plane.23059d6d.js";import"./mat3f64.4564d6a3.js";import"./quatf64.bcd5b590.js";import"./I3SBinaryReader.79100f56.js";import"./VertexAttribute.53a8dea2.js";import"./floatRGBA.133c49be.js";import"./NormalAttribute.glsl.519bff8e.js";import"./interfaces.98cd2ad6.js";import"./BindType.597c7f67.js";import"./orientedBoundingBox.ee8aaba9.js";import"./quat.2c7c64ba.js";import"./computeTranslationToOriginAndRotation.4860e3ef.js";let p=class extends ue(Be){constructor(e){super(e),this.title="",this.id=-1,this.modelName=null,this.isEmpty=null,this.legendEnabled=!0,this.visible=!0,this.opacity=1}readTitle(e,i){return typeof i.alias=="string"?i.alias:typeof i.name=="string"?i.name:""}readIdOnlyOnce(e){return this.id!==-1?this.id:typeof e=="number"?e:-1}};t([r({type:String,json:{origins:{"web-scene":{write:!0},"portal-item":{write:!0}}}})],p.prototype,"title",void 0),t([x("service","title",["alias","name"])],p.prototype,"readTitle",null),t([r()],p.prototype,"layer",void 0),t([r({type:de,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0}}})],p.prototype,"id",void 0),t([x("service","id")],p.prototype,"readIdOnlyOnce",null),t([r(_(String))],p.prototype,"modelName",void 0),t([r(_(Boolean))],p.prototype,"isEmpty",void 0),t([r({type:Boolean,nonNullable:!0})],p.prototype,"legendEnabled",void 0),t([r({type:Boolean,json:{name:"visibility",write:!0}})],p.prototype,"visible",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"opacity",void 0),p=t([l("esri.layers.buildingSublayers.BuildingSublayer")],p);const oe=p,H=Me();let o=class extends Y.LoadableMixin(ee(oe)){constructor(e){super(e),this.type="building-component",this.nodePages=null,this.materialDefinitions=[],this.textureSetDefinitions=[],this.geometryDefinitions=[],this.indexInfo=null,this.serviceUpdateTimeStamp=null,this.store=null,this.attributeStorageInfo=[],this.fields=[],this.associatedLayer=null,this.outFields=null,this.listMode="show",this.renderer=null,this.definitionExpression=null,this.popupEnabled=!0,this.popupTemplate=null,this.layerType="3d-object"}get parsedUrl(){return this.layer?{path:`${this.layer.parsedUrl?.path}/sublayers/${this.id}`,query:this.layer.parsedUrl?.query}:{path:""}}get fieldsIndex(){return new ke(this.fields)}readAssociatedLayer(e,i){const s=this.layer.associatedFeatureServiceItem,a=i.associatedLayerID;return s!=null&&typeof a=="number"?new se({portalItem:s,customParameters:this.customParameters,layerId:a}):null}get objectIdField(){if(this.fields!=null){for(const e of this.fields)if(e.type==="oid")return e.name}return null}get displayField(){return this.associatedLayer!=null?this.associatedLayer.displayField:void 0}get apiKey(){return this.layer.apiKey}get customParameters(){return this.layer.customParameters}get fullExtent(){return this.layer.fullExtent}get spatialReference(){return this.layer.spatialReference}get version(){return this.layer.version}get elevationInfo(){return this.layer.elevationInfo}get minScale(){return this.layer.minScale}get maxScale(){return this.layer.maxScale}get effectiveScaleRange(){return this.layer.effectiveScaleRange}get defaultPopupTemplate(){return this.createPopupTemplate()}load(e){const i=e!=null?e.signal:null,s=this._fetchService(i).then(()=>{this.indexInfo=Ue(this.parsedUrl.path,this.rootNode,this.nodePages,this.customParameters,this.apiKey,F.getLogger(this),i)});return this.addResolvingPromise(s),Promise.resolve(this)}createPopupTemplate(e){return Ze(this,e)}async _fetchService(e){const i=(await te(this.parsedUrl.path,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(i,{origin:"service",url:this.parsedUrl})}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,i){const s=this.getFeatureType(i?.feature)?.domains?.[e];return s&&s.type!=="inherited"?s:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer!=null?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer!=null?this.associatedLayer.types??[]:[]}get typeIdField(){return this.associatedLayer!=null?this.associatedLayer.typeIdField:null}get geometryType(){return this.layerType==="3d-object"?"mesh":"point"}get profile(){return this.layerType==="3d-object"?"mesh-pyramids":"points"}get capabilities(){const e=this.associatedLayer!=null&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:Re,{query:i,data:{supportsZ:s,supportsM:a,isVersioned:y}}=e;return{query:i,data:{supportsZ:s,supportsM:a,isVersioned:y}}}createQuery(){const e=new ce;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,i){return this._getAssociatedLayerForQuery().then(s=>s.queryExtent(e||this.createQuery(),i))}queryFeatureCount(e,i){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatureCount(e||this.createQuery(),i))}queryFeatures(e,i){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatures(e||this.createQuery(),i)).then(s=>{if(s?.features)for(const a of s.features)a.layer=this.layer,a.sourceLayer=this;return s})}queryObjectIds(e,i){return this._getAssociatedLayerForQuery().then(s=>s.queryObjectIds(e||this.createQuery(),i))}async queryCachedAttributes(e,i){const s=he(this.fieldsIndex,await He(this,Xe(this)));return Je(this.parsedUrl.path,this.attributeStorageInfo,e,i,s,this.apiKey,this.customParameters)}async queryCachedFeature(e,i){const s=await this.queryCachedAttributes(e,[i]);if(!s||s.length===0)throw new I("scenelayer:feature-not-in-cached-data","Feature not found in cached data");return new me({attributes:s[0],layer:this,sourceLayer:this})}getFieldUsageInfo(e){return this.fieldsIndex.has(e)?{supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1}:{supportsLabelingInfo:!1,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:this.associatedLayer!=null}}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),this.associatedLayer==null)throw new I("buildingscenelayer:query-not-available","BuildingSceneLayer component layer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new I("buildingscenelayer:query-not-available","BuildingSceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}};t([r({readOnly:!0})],o.prototype,"parsedUrl",null),t([r({type:Ce,readOnly:!0})],o.prototype,"nodePages",void 0),t([r({type:[Ke],readOnly:!0})],o.prototype,"materialDefinitions",void 0),t([r({type:[De],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),t([r({type:[Ve],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),t([r({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),t([r({readOnly:!0})],o.prototype,"store",void 0),t([r({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],o.prototype,"rootNode",void 0),t([r({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),t([r(H.fields)],o.prototype,"fields",void 0),t([r({readOnly:!0})],o.prototype,"fieldsIndex",null),t([r({readOnly:!0,type:se})],o.prototype,"associatedLayer",void 0),t([x("service","associatedLayer",["associatedLayerID"])],o.prototype,"readAssociatedLayer",null),t([r(H.outFields)],o.prototype,"outFields",void 0),t([r({type:String,readOnly:!0})],o.prototype,"objectIdField",null),t([r({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),t([r({readOnly:!0,type:String})],o.prototype,"apiKey",null),t([r({readOnly:!0,type:String})],o.prototype,"customParameters",null),t([r({readOnly:!0,type:ge})],o.prototype,"fullExtent",null),t([r({readOnly:!0,type:re})],o.prototype,"spatialReference",null),t([r({readOnly:!0})],o.prototype,"version",null),t([r({readOnly:!0,type:fe})],o.prototype,"elevationInfo",null),t([r({readOnly:!0,type:Number})],o.prototype,"minScale",null),t([r({readOnly:!0,type:Number})],o.prototype,"maxScale",null),t([r({readOnly:!0,type:Number})],o.prototype,"effectiveScaleRange",null),t([r({type:["hide","show"],json:{write:!0}})],o.prototype,"listMode",void 0),t([r({types:Ee,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",void 0),t([r({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),t([r(Pe)],o.prototype,"popupEnabled",void 0),t([r({type:ve,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],o.prototype,"popupTemplate",void 0),t([r({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),t([r({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),t([r()],o.prototype,"types",null),t([r()],o.prototype,"typeIdField",null),t([r({json:{write:!1}}),ie(new be({"3DObject":"3d-object",Point:"point"}))],o.prototype,"layerType",void 0),t([r()],o.prototype,"geometryType",null),t([r()],o.prototype,"profile",null),t([r({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),t([r({readOnly:!0})],o.prototype,"statisticsInfo",void 0),o=t([l("esri.layers.buildingSublayers.BuildingComponentSublayer")],o);const q=o;var N;const X={type:v,readOnly:!0,json:{origins:{service:{read:{source:"sublayers",reader:ae}}},read:!1}};function ae(e,i,s){if(e&&Array.isArray(e))return new v(e.map(a=>{const y=st(a);if(y){const b=new y;return b.read(a,s),b}return s?.messages&&a&&s.messages.push(new Se("building-scene-layer:unsupported-sublayer-type","Building scene sublayer of type '"+(a.type||"unknown")+"' are not supported",{definition:a,context:s})),null}))}let h=N=class extends oe{constructor(e){super(e),this.type="building-group",this.listMode="show",this.sublayers=null}loadAll(){return we(this,e=>N.forEachSublayer(this.sublayers,i=>{i.type!=="building-group"&&e(i)}))}};function st(e){return e.layerType==="group"?h:q}t([r({type:["hide","show","hide-children"],json:{write:!0}})],h.prototype,"listMode",void 0),t([r(X)],h.prototype,"sublayers",void 0),h=N=t([l("esri.layers.buildingSublayers.BuildingGroupSublayer")],h),function(e){function i(s,a){s.forEach(y=>{a(y),y.type==="building-group"&&i(y.sublayers,a)})}e.sublayersProperty=X,e.readSublayers=ae,e.forEachSublayer=i}(h||(h={}));const g=h;let L=class extends m{constructor(){super(...arguments),this.type=null}};t([r({type:String,readOnly:!0,json:{write:!0}})],L.prototype,"type",void 0),L=t([l("esri.layers.support.BuildingFilterAuthoringInfo")],L);const ne=L;var R;let S=R=class extends m{constructor(){super(...arguments),this.filterType=null,this.filterValues=null}clone(){return new R({filterType:this.filterType,filterValues:d(this.filterValues)})}};t([r({type:String,json:{write:!0}})],S.prototype,"filterType",void 0),t([r({type:[String],json:{write:!0}})],S.prototype,"filterValues",void 0),S=R=t([l("esri.layers.support.BuildingFilterAuthoringInfoType")],S);const ot=S;var M;const at=v.ofType(ot);let j=M=class extends m{clone(){return new M({filterTypes:d(this.filterTypes)})}};t([r({type:at,json:{write:!0}})],j.prototype,"filterTypes",void 0),j=M=t([l("esri.layers.support.BuildingFilterAuthoringInfoBlock")],j);const nt=j;var k;const lt=v.ofType(nt);let w=k=class extends ne{constructor(){super(...arguments),this.type="checkbox"}clone(){return new k({filterBlocks:d(this.filterBlocks)})}};t([r({type:["checkbox"]})],w.prototype,"type",void 0),t([r({type:lt,json:{write:!0}})],w.prototype,"filterBlocks",void 0),w=k=t([l("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")],w);const z=w;let T=class extends m{};t([r({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=t([l("esri.layers.support.BuildingFilterMode")],T);const E=T;var U;let B=U=class extends E{constructor(){super(...arguments),this.type="solid"}clone(){return new U}};t([r({type:["solid"],readOnly:!0,json:{write:!0}})],B.prototype,"type",void 0),B=U=t([l("esri.layers.support.BuildingFilterModeSolid")],B);const Q=B;var C;let $=C=class extends E{constructor(){super(...arguments),this.type="wire-frame",this.edges=null}clone(){return new C({edges:d(this.edges)})}};t([ie({wireFrame:"wire-frame"})],$.prototype,"type",void 0),t([r($e)],$.prototype,"edges",void 0),$=C=t([l("esri.layers.support.BuildingFilterModeWireFrame")],$);const G=$;var K;let A=K=class extends E{constructor(){super(...arguments),this.type="x-ray"}clone(){return new K}};t([r({type:["x-ray"],readOnly:!0,json:{write:!0}})],A.prototype,"type",void 0),A=K=t([l("esri.layers.support.BuildingFilterModeXRay")],A);const W=A;var D;const pt={nonNullable:!0,types:{key:"type",base:E,typeMap:{solid:Q,"wire-frame":G,"x-ray":W}},json:{read:e=>{switch(e?.type){case"solid":return Q.fromJSON(e);case"wireFrame":return G.fromJSON(e);case"x-ray":return W.fromJSON(e);default:return}},write:{enabled:!0,isRequired:!0}}};let f=D=class extends m{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new Q,this.title=""}clone(){return new D({filterExpression:this.filterExpression,filterMode:d(this.filterMode),title:this.title})}};t([r({type:String,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"filterExpression",void 0),t([r(pt)],f.prototype,"filterMode",void 0),t([r({type:String,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"title",void 0),f=D=t([l("esri.layers.support.BuildingFilterBlock")],f);const yt=f;var V;const ut=v.ofType(yt);let c=V=class extends m{constructor(){super(...arguments),this.description=null,this.filterBlocks=null,this.id=Oe(),this.name=null}clone(){return new V({description:this.description,filterBlocks:d(this.filterBlocks),id:this.id,name:this.name,filterAuthoringInfo:d(this.filterAuthoringInfo)})}};t([r({type:String,json:{write:!0}})],c.prototype,"description",void 0),t([r({type:ut,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"filterBlocks",void 0),t([r({types:{key:"type",base:ne,typeMap:{checkbox:z}},json:{read:e=>e?.type==="checkbox"?z.fromJSON(e):null,write:!0}})],c.prototype,"filterAuthoringInfo",void 0),t([r({type:String,constructOnly:!0,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"id",void 0),t([r({type:String,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"name",void 0),c=V=t([l("esri.layers.support.BuildingFilter")],c);const dt=c;let u=class extends m{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};t([r({type:String})],u.prototype,"fieldName",void 0),t([r({type:String})],u.prototype,"modelName",void 0),t([r({type:String})],u.prototype,"label",void 0),t([r({type:Number})],u.prototype,"min",void 0),t([r({type:Number})],u.prototype,"max",void 0),t([r({json:{read:e=>Array.isArray(e)&&(e.every(i=>typeof i=="string")||e.every(i=>typeof i=="number"))?e.slice():null}})],u.prototype,"mostFrequentValues",void 0),t([r({type:[Number]})],u.prototype,"subLayerIds",void 0),u=t([l("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")],u);let O=class extends Y.LoadableMixin(ee(m)){constructor(){super(...arguments),this.url=null}get fields(){return this.loaded||this.loadStatus==="loading"?this._get("fields"):(F.getLogger(this).error("building summary statistics are not loaded"),null)}load(e){const i=e!=null?e.signal:null;return this.addResolvingPromise(this._fetchService(i)),Promise.resolve(this)}async _fetchService(e){const i=(await te(this.url,{query:{f:"json"},responseType:"json",signal:e})).data;this.read(i,{origin:"service"})}};t([r({constructOnly:!0,type:String})],O.prototype,"url",void 0),t([r({readOnly:!0,type:[u],json:{read:{source:"summary"}}})],O.prototype,"fields",null),O=t([l("esri.layers.support.BuildingSummaryStatistics")],O);const le=O,pe=v.ofType(dt),ye=d(g.sublayersProperty),P=ye.json?.origins;P&&(P["web-scene"]={type:[q],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},P["portal-item"]={type:[q],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}});let n=class extends Qe(Ge(Ye(et(Fe(Ae(We(ze(Te)))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new Ie({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.type==="building-group"?i.sublayers:null}),this.sublayers=null,this._sublayerOverrides=null,this.filters=new pe,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.legendEnabled=!0,this.type="building-scene"}normalizeCtorArgs(e){return typeof e=="string"?{url:e}:e??{}}destroy(){this.allSublayers.destroy()}readSublayers(e,i,s){const a=g.readSublayers(e,i,s);return g.forEachSublayer(a,y=>y.layer=this),this._sublayerOverrides&&(this.applySublayerOverrides(a,this._sublayerOverrides),this._sublayerOverrides=null),a}applySublayerOverrides(e,{overrides:i,context:s}){g.forEachSublayer(e,a=>a.read(i.get(a.id),s))}readSublayerOverrides(e,i){const s=new Map;for(const a of e)a!=null&&typeof a=="object"&&typeof a.id=="number"?s.set(a.id,a):i.messages?.push(new I("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:a}));return{overrides:s,context:i}}writeSublayerOverrides(e,i,s){const a=[];g.forEachSublayer(this.sublayers,y=>{const b=y.write({},s);Object.keys(b).length>1&&a.push(b)}),a.length>0&&(i.sublayers=a)}writeUnappliedOverrides(e,i){i.sublayers=[],e.overrides.forEach(s=>{i.sublayers.push(d(s))})}write(e,i){return e=super.write(e,i),!i||i.origin!=="web-scene"&&i.origin!=="portal-item"||(this.sublayers?this.writeSublayerOverrides(this.sublayers,e,i):this._sublayerOverrides&&this.writeUnappliedOverrides(this._sublayerOverrides,e)),e}read(e,i){if(super.read(e,i),i&&(i.origin==="web-scene"||i.origin==="portal-item")&&e!=null&&Array.isArray(e.sublayers)){const s=this.readSublayerOverrides(e.sublayers,i);this.sublayers?this.applySublayerOverrides(this.sublayers,s):this._sublayerOverrides=s}}readSummaryStatistics(e,i){if(typeof i.statisticsHRef=="string"){const s=xe(this.parsedUrl?.path,i.statisticsHRef);return new le({url:s})}return null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}load(e){const i=e!=null?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Le).then(()=>this._fetchService(i)).then(()=>this._fetchAssociatedFeatureService(i));return this.addResolvingPromise(s),Promise.resolve(this)}loadAll(){return je(this,e=>{g.forEachSublayer(this.sublayers,i=>{i.type!=="building-group"&&e(i)}),this.summaryStatistics&&e(this.summaryStatistics)})}async saveAs(e,i){return this._debouncedSaveOperations(Z.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"};return this._debouncedSaveOperations(Z.SAVE,e)}validateLayer(e){if(!e.layerType||e.layerType!=="Building")throw new I("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}async _fetchAssociatedFeatureService(e){try{const{portalItem:i}=await tt(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e});this.associatedFeatureServiceItem=i}catch(i){F.getLogger(this).warn("Associated feature service item could not be loaded",i)}}_validateElevationInfo(){const e=this.elevationInfo,i="Building scene layers";J(F.getLogger(this),rt(i,"absolute-height",e)),J(F.getLogger(this),it(i,e))}};t([r({type:["BuildingSceneLayer"]})],n.prototype,"operationalLayerType",void 0),t([r({readOnly:!0})],n.prototype,"allSublayers",void 0),t([r(ye)],n.prototype,"sublayers",void 0),t([x("service","sublayers")],n.prototype,"readSublayers",null),t([r({type:pe,nonNullable:!0,json:{write:!0}})],n.prototype,"filters",void 0),t([r({type:String,json:{write:!0}})],n.prototype,"activeFilterId",void 0),t([r({readOnly:!0,type:le})],n.prototype,"summaryStatistics",void 0),t([x("summaryStatistics",["statisticsHRef"])],n.prototype,"readSummaryStatistics",null),t([r({type:[String],json:{read:!1}})],n.prototype,"outFields",void 0),t([r(_e)],n.prototype,"fullExtent",void 0),t([r(qe)],n.prototype,"legendEnabled",void 0),t([r({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),t([r(_(re))],n.prototype,"spatialReference",void 0),t([r(Ne)],n.prototype,"elevationInfo",null),t([r({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([r()],n.prototype,"associatedFeatureServiceItem",void 0),n=t([l("esri.layers.BuildingSceneLayer")],n);const zr=n;export{zr as default};
