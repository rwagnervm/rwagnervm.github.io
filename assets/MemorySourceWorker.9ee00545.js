import{s as I,gY as Q,gW as Z,bl as A,bm as $,ay as b,cr as S,bx as v}from"./index.7eb0daf2.js";import{e as O,n as k,t as C}from"./featureConversionUtils.c6dfa488.js";import{t as P,n as G}from"./objectIdUtils.df266b78.js";import{m as L}from"./FeatureStore.a6527479.js";import{x as E,j as _}from"./timeSupport.393bd0ba.js";import{$ as W}from"./QueryEngine.b9df2d2a.js";import{i as z,o as B,c as H}from"./clientSideDefaults.e011af70.js";import{j as N,f as g,p as T,d as j,y as w}from"./sourceUtils.62033bd7.js";import{Z as D}from"./FieldsIndex.333d0734.js";import"./OptimizedFeature.32c00f5f.js";import"./OptimizedFeatureSet.6fd3bcb1.js";import"./BoundsStore.ae8d78e2.js";import"./PooledRBush.0bbb795a.js";import"./json.20588c22.js";import"./LRUCache.6f8863ed.js";import"./WhereClause.b007a323.js";import"./TimeOnly.5d28261e.js";import"./UnknownTimeZone.4756be49.js";import"./QueryEngineCapabilities.a12653c7.js";import"./quantizationUtils.fe6b1e6e.js";import"./utils.235d7b4d.js";import"./heatmapUtils.b763e953.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./utils.26a12d83.js";import"./utils.f2d50388.js";import"./ClassBreaksDefinition.427c0bbe.js";import"./defaultsJSON.ba72df2f.js";import"./date.9883f6ae.js";const U=S,J={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:S},K={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function V(h){return v(h)?h.z!=null:!!h.hasZ}function Y(h){return v(h)?h.m!=null:!!h.hasM}class Oe{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const s=[],{features:a}=e,r=this._inferLayerProperties(a,e.fields),l=e.fields||[],u=e.hasM!=null?e.hasM:!!r.hasM,c=e.hasZ!=null?e.hasZ:!!r.hasZ,p=!e.spatialReference&&!r.spatialReference,d=p?U:e.spatialReference||r.spatialReference,y=p?J:null,f=e.geometryType||r.geometryType,o=!f;let t=e.objectIdField||r.objectIdField,n=e.timeInfo;const m=new D(l);if(!o&&(p&&s.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!f))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(r.objectIdField&&t!==r.objectIdField&&(s.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${r.objectIdField}", found in the provided fields`}),t=r.objectIdField),t&&!r.objectIdField){const i=m.get(t);i?(t=i.name,i.type="esriFieldTypeOID",i.editable=!1,i.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const i of l){if(i.name==null&&(i.name=i.alias),i.alias==null&&(i.alias=i.name),!i.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:i});if(i.name===t&&(i.type="esriFieldTypeOID"),!Q.jsonValues.includes(i.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${i.name}"`,{field:i});i.length==null&&(i.length=Z(i))}const F={};for(const i of l)if(i.type!=="esriFieldTypeOID"&&i.type!=="esriFieldTypeGlobalID"){const q=A(i);q!==void 0&&(F[i.name]=q)}if(n){if(n.startTimeField){const i=m.get(n.startTimeField);i?(n.startTimeField=i.name,i.type="esriFieldTypeDate"):n.startTimeField=null}if(n.endTimeField){const i=m.get(n.endTimeField);i?(n.endTimeField=i.name,i.type="esriFieldTypeDate"):n.endTimeField=null}if(n.trackIdField){const i=m.get(n.trackIdField);i?n.trackIdField=i.name:(n.trackIdField=null,s.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:n}}))}n.startTimeField||n.endTimeField||(s.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:n}}),n=null)}const x=m.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??$}:null;this._createDefaultAttributes=z(F,t);const R={warnings:s,featureErrors:[],layerDefinition:{...K,drawingInfo:B(f),templates:H(F),extent:y,geometryType:f,objectIdField:t,fields:l,hasZ:c,hasM:u,timeInfo:n,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new W({fieldsIndex:D.fromLayerJSON({fields:l,timeInfo:n,dateFieldsTimeReference:x}),geometryType:f,hasM:u,hasZ:c,objectIdField:t,spatialReference:d,featureStore:new L({geometryType:f,hasM:u,hasZ:c}),timeInfo:n,cacheSpatialQueries:!0}),!a?.length)return this._nextObjectId=P,R;const M=G(t,a);return this._nextObjectId=M+1,await E(a,d),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:s,geometryType:a}=this._queryEngine;return await Promise.all([N(s,a),E(e.adds,s),E(e.updates,s)]),this._applyEdits(e)}queryFeatures(e,s={}){return this._queryEngine.executeQuery(e,s.signal)}queryFeatureCount(e,s={}){return this._queryEngine.executeQueryForCount(e,s.signal)}queryObjectIds(e,s={}){return this._queryEngine.executeQueryForIds(e,s.signal)}queryExtent(e,s={}){return this._queryEngine.executeQueryForExtent(e,s.signal)}querySnapping(e,s={}){return this._queryEngine.executeQueryForSnapping(e,s.signal)}_inferLayerProperties(e,s){let a,r,l=null,u=null,c=null;for(const p of e){const d=p.geometry;if(d!=null&&(l||(l=b(d)),u||(u=d.spatialReference),a==null&&(a=V(d)),r==null&&(r=Y(d)),l&&u&&a!=null&&r!=null))break}if(s&&s.length){let p=null;s.some(d=>{const y=d.type==="esriFieldTypeOID",f=!d.type&&d.name&&d.name.toLowerCase()==="objectid";return p=d,y||f})&&(c=p.name)}return{geometryType:l,spatialReference:u,objectIdField:c,hasM:r,hasZ:a}}async _loadInitialFeatures(e,s){const{geometryType:a,hasM:r,hasZ:l,objectIdField:u,spatialReference:c,featureStore:p,fieldsIndex:d}=this._queryEngine,y=[];for(const t of s){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==b(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const n=this._createDefaultAttributes(),m=T(d,n,t.attributes,!0);m?e.featureErrors.push(m):(this._assignObjectId(n,t.attributes,!0),t.attributes=n,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[u]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}p.addMany(O([],y,a,l,r,u));const{fullExtent:f,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,o){const{start:t,end:n}=o;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}async _applyEdits(e){const{adds:s,updates:a,deletes:r}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(s?.length&&this._applyAddEdits(l,s),a?.length&&this._applyUpdateEdits(l,a),r?.length){for(const p of r)l.deleteResults.push(j(p));this._queryEngine.featureStore.removeManyById(r)}const{fullExtent:u,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:u,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,s){const{addResults:a}=e,{geometryType:r,hasM:l,hasZ:u,objectIdField:c,spatialReference:p,featureStore:d,fieldsIndex:y}=this._queryEngine,f=[];for(const o of s){if(o.geometry&&r!==b(o.geometry)){a.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=T(y,t,o.attributes);if(n)a.push(n);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,o.uid!=null){const m=o.attributes[c];e.uidToObjectId[o.uid]=m}if(o.geometry!=null){const m=o.geometry.spatialReference??p;o.geometry=_(w(o.geometry,m),m,p)}f.push(o),a.push(j(o.attributes[c]))}}d.addMany(O([],f,r,u,l,c))}_applyUpdateEdits({updateResults:e},s){const{geometryType:a,hasM:r,hasZ:l,objectIdField:u,spatialReference:c,featureStore:p,fieldsIndex:d}=this._queryEngine;for(const y of s){const{attributes:f,geometry:o}=y,t=f?.[u];if(t==null){e.push(g(`Identifier field ${u} missing`));continue}if(!p.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const n=k(p.getFeature(t),a,l,r);if(o!=null){if(a!==b(o)){e.push(g("Incorrect geometry type."));continue}const m=o.spatialReference??c;n.geometry=_(w(o,m),m,c)}if(f){const m=T(d,n.attributes,f);if(m){e.push(m);continue}}p.add(C(n,a,l,r,u)),e.push(j(t))}}_assignObjectId(e,s,a=!1){const r=this._queryEngine.objectIdField;a&&s&&isFinite(s[r])?e[r]=s[r]:e[r]=this._nextObjectId++}}export{Oe as default};
