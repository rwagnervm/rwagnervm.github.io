import{e4 as b,e5 as w,c7 as y,cM as T,s as g,eU as h,eY as _,n as c,eR as S,eX as D,eS as M,jr as L,bp as v,aa as r,ab as n,ed as E,dY as A,ac as N,iS as R,e7 as k,dJ as I}from"./index.7eb0daf2.js";import{S as C}from"./MultiOriginJSONSupport.b5976a45.js";import{a as l,M as G,T as $,E as O}from"./KnowledgeGraphSublayer.92b05f99.js";import{l as U}from"./ArcGISService.c7559039.js";import{e as j}from"./CustomParametersMixin.b4d39f07.js";import{b as z}from"./OperationalLayer.33897364.js";import{j as P}from"./PortalLayer.5cf51695.js";import{f as F}from"./RefreshableLayer.908b9ff1.js";import{p as K}from"./commonProperties.a37169f8.js";import{R as x}from"./knowledgeGraphService.9a99595e.js";import"./UniqueValueRenderer.8069ab57.js";import"./ColorStop.aa8650af.js";import"./diffUtils.080c04bc.js";import"./colorRamps.272b71a1.js";import"./sizeVariableUtils.34255976.js";import"./visualVariableUtils.12ee1cdb.js";import"./jsonUtils.185b82ae.js";import"./defaults.e5a1167a.js";import"./defaultsJSON.ba72df2f.js";import"./styleUtils.7f2b22b0.js";import"./jsonUtils.93554317.js";import"./LRUCache.6f8863ed.js";import"./Version.856e86b2.js";import"./FieldsIndex.333d0734.js";import"./UnknownTimeZone.4756be49.js";import"./OverrideHelper.b5d99b26.js";import"./colorUtils.085072a2.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./utils.dbb84a38.js";import"./quantizationUtils.fe6b1e6e.js";import"./heatmapUtils.b763e953.js";import"./FeatureStore.a6527479.js";import"./featureConversionUtils.c6dfa488.js";import"./OptimizedFeature.32c00f5f.js";import"./OptimizedFeatureSet.6fd3bcb1.js";import"./BoundsStore.ae8d78e2.js";import"./PooledRBush.0bbb795a.js";import"./timeSupport.393bd0ba.js";import"./json.20588c22.js";import"./QueryEngine.b9df2d2a.js";import"./WhereClause.b007a323.js";import"./TimeOnly.5d28261e.js";import"./QueryEngineCapabilities.a12653c7.js";import"./utils.235d7b4d.js";import"./utils.26a12d83.js";import"./utils.f2d50388.js";import"./ClassBreaksDefinition.427c0bbe.js";import"./clientSideDefaults.e011af70.js";import"./GraphQueryStreaming.04edabe4.js";import"./fieldProperties.80f53b4c.js";import"./FeatureEffectLayer.11729363.js";import"./FeatureEffect.00e4e7d7.js";import"./FeatureReductionLayer.8358918b.js";import"./FeatureReductionSelection.49649196.js";import"./featureLayerUtils.1828d741.js";import"./RelationshipQuery.a9d69ee6.js";import"./labelingInfo.41bbc735.js";import"./labelUtils.37b9d8d8.js";import"./MD5.f6d873db.js";import"./OrderedLayer.7fae9ad1.js";import"./OrderByInfo.b53e85dd.js";import"./TemporalLayer.859e579f.js";import"./TimeInfo.d882fe8e.js";import"./FeatureSet.78257171.js";import"./popupUtils.f17e95f0.js";import"./portalItemUtils.761d02ba.js";let s=class extends b(w(F(U(z(P(C(j(I)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(y.ofType(l)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(y.ofType(l)),this.type="knowledge-graph",this.url=null}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){T(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache()}async _fetchMetadata(){if(!this.url)throw new g("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await x(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===h.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new G({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await $(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,_(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if(t?.size>0)t.forEach((i,o)=>{const a=this._graphTypeLookup.get(o);if(!a)return c.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(o);a.type!=="relationship"&&a.type!=="entity"&&(c.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(o))});else if(!e.generateAllSublayers)throw new g("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){let e=[],t=[];const{inclusionModeDefinition:i}=this,o=i?.namedTypeDefinitions;!i||i.generateAllSublayers?(e=this.knowledgeGraph.dataModel?.entityTypes??[],t=this.knowledgeGraph.dataModel?.relationshipTypes??[]):o&&o.size>0&&o.forEach((a,d)=>{const p=this._graphTypeLookup.get(d);switch(p?.type){case"relationship":t.push(p);break;case"entity":e.push(p)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){[...this.knowledgeGraph.dataModel?.entityTypes??[],...this.knowledgeGraph.dataModel?.relationshipTypes??[]].forEach(t=>{e(t)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const o=this._graphTypeLookup.get(i);!o||(this._addSublayer(o).title=i,o.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(o=>{const a=this._createSublayer(o);i(a)&&t.push(a),this._updateSublayerCaches(o)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new l({objectType:e,parentCompositeLayer:this,graphType:e.type,title:e.name})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const o=e.find(a=>a.type===i.graphType&&a.name===i.graphTypeName);o&&(i.objectType=o,i.read({title:o.name},{origin:"service"}),this._updateSublayerCaches(o))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,o){e[t]="<pending>",i.pendingOperations.push(Y(this.inclusionModeDefinition).then(a=>{const d=V(o);e[t]=d.itemRelativeUrl,i.toAdd.push({resource:d,content:{type:"blob",blob:a},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}readDefinitionSetMap(e,t,i){return S(e,i)}writeDefinitionSetMap(e,t,i,o){const a=o?.portalItem,d=o?.resources,p=D(o?.origin);if(!a||!d||p==null)return void(e&&(t[i]=M(e,o)));const{inclusionModeDefinition:u}=this;if(!u||this._displaysAllRecords(u))return void(this.definitionSetMap=null);const m=this.originIdOf("inclusionModeDefinition");if(m===h.USER||this._namedTypesModified||p<m)this._saveUrlAsNewResource(t,i,d,a);else if(p===m&&e){const f=M(e,o);L(f)?this._saveUrlAsNewResource(t,i,d,a):t[i]=f}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):c.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===h.DEFAULTS?this._createSublayers(e,this.layers,t=>!!t.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===h.DEFAULTS?this._createSublayers(e,this.tables,t=>!t.geometryType):this._updateSublayers(e,this.tables),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t,i)=>{const o=v(this.sublayerIdsCache,i,()=>new Set);t.members?.forEach(a=>{o.add(a.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){const t=[];for(const i of e)this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(i.typeName)?.useAllData===!1&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(i.typeName)?.members?.has(i.id)&&t.push(i);this.dataManager.removeFromLayer(t);for(const i of t)this.sublayerIdsCache.get(i.typeName)?.delete(i.id);return this._refreshNamedTypes(),t}};r([n()],s.prototype,"dataManager",void 0),r([n({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],s.prototype,"definitionSetMap",void 0),r([E("definitionSetMap")],s.prototype,"readDefinitionSetMap",null),r([A("definitionSetMap")],s.prototype,"writeDefinitionSetMap",null),r([n()],s.prototype,"inclusionModeDefinition",null),r([n()],s.prototype,"knowledgeGraph",void 0),r([n({type:y.ofType(l),json:{write:{ignoreOrigin:!0}}})],s.prototype,"layers",void 0),r([n()],s.prototype,"memberEntityTypes",void 0),r([n()],s.prototype,"memberRelationshipTypes",void 0),r([n({type:["KnowledgeGraphLayer"]})],s.prototype,"operationalLayerType",void 0),r([n()],s.prototype,"sublayerIdsCache",void 0),r([n({type:y.ofType(l),json:{write:{ignoreOrigin:!0}}})],s.prototype,"tables",void 0),r([n({json:{read:!1}})],s.prototype,"type",void 0),r([n(K)],s.prototype,"url",void 0),s=r([N("esri.layers.KnowledgeGraphLayer")],s);const st=s;async function Y(e){const t=await O(e);return new Blob([t],{type:"application/x-protobuf"})}function V(e){const t=`definitionSetMap-${R()}.dat`,i=k("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{st as default};
