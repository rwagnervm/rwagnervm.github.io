import{d$ as Z,e0 as z,s as f,cz as U,bK as H,e1 as B,d as K,n as T,e2 as q,aa as s,e3 as Y,d7 as R,dZ as X,ab as a,ac as E,c7 as L,a9 as ee,e4 as te,e5 as re,dw as ie,bz as se,dx as oe,cM as ae,e6 as I,cI as ne,e7 as x,e8 as P,e9 as le,cF as ue,ea as pe,cW as de,$ as G,eb as ye,c1 as ce,U as he,ec as me,ed as d,ee as fe,d_ as ge,dY as $,e as D,ef as be,d6 as we,dJ as ve,eg as Se}from"./index.7eb0daf2.js";import"./UniqueValueRenderer.8069ab57.js";import{o as _e,m as Fe,u as Te}from"./jsonUtils.93554317.js";import{S as Ie}from"./MultiOriginJSONSupport.b5976a45.js";import{g as Ee,l as $e,a as A,f as De,y as Oe,v as je,s as Ce,t as Le}from"./commonProperties.a37169f8.js";import{R as Me,V as qe}from"./FeatureLayerBase.dd6763e4.js";import{i as Re}from"./editsZScale.3b0b1c90.js";import{t as N}from"./queryZScale.835a340e.js";import{d as k}from"./FeatureSet.78257171.js";import{i as xe}from"./APIKeyMixin.a389fc6d.js";import{l as Pe}from"./ArcGISService.c7559039.js";import{e as Ge}from"./CustomParametersMixin.b4d39f07.js";import{F as Ae}from"./EditBusLayer.979b288a.js";import{c as Ne}from"./FeatureEffectLayer.11729363.js";import{c as Je}from"./FeatureReductionLayer.8358918b.js";import{b as Ve}from"./OperationalLayer.33897364.js";import{p as ke}from"./OrderedLayer.7fae9ad1.js";import{j as We}from"./PortalLayer.5cf51695.js";import{f as Qe}from"./RefreshableLayer.908b9ff1.js";import{l as Ze}from"./TemporalLayer.859e579f.js";import{T as ze,v as Ue,R as He,M as Be,U as Ke,m as Ye,w as Xe,b as et,g as tt,x as rt,j as it,I as st,N as ot,L as at,q as nt,F as lt,A as ut,O as pt,P as dt,S as yt,E as ct,y as J}from"./featureLayerUtils.1828d741.js";import{p as W}from"./FeatureTemplate.7907b31e.js";import{n as Q}from"./FeatureType.f4c0cb30.js";import{s as ht}from"./fieldProperties.80f53b4c.js";import{C as mt,l as O}from"./labelingInfo.41bbc735.js";import{a as ft}from"./serviceCapabilitiesUtils.21de2819.js";import{d as gt}from"./TimeInfo.d882fe8e.js";import{t as bt}from"./versionUtils.9e2a095a.js";import{t as wt}from"./styleUtils.f0558e3a.js";import{S}from"./TopFeaturesQuery.0af13513.js";import{p as vt}from"./popupUtils.f17e95f0.js";import{A as _}from"./interfaces.c34ab3ac.js";import"./ColorStop.aa8650af.js";import"./diffUtils.080c04bc.js";import"./colorRamps.272b71a1.js";import"./sizeVariableUtils.34255976.js";import"./visualVariableUtils.12ee1cdb.js";import"./jsonUtils.185b82ae.js";import"./defaults.e5a1167a.js";import"./defaultsJSON.ba72df2f.js";import"./styleUtils.7f2b22b0.js";import"./LRUCache.6f8863ed.js";import"./Version.856e86b2.js";import"./FieldsIndex.333d0734.js";import"./UnknownTimeZone.4756be49.js";import"./OverrideHelper.b5d99b26.js";import"./colorUtils.085072a2.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./utils.dbb84a38.js";import"./quantizationUtils.fe6b1e6e.js";import"./heatmapUtils.b763e953.js";import"./LayerFloorInfo.164b006f.js";import"./Relationship.ee67ec43.js";import"./FeatureEffect.00e4e7d7.js";import"./FeatureReductionSelection.49649196.js";import"./MD5.f6d873db.js";import"./OrderByInfo.b53e85dd.js";import"./portalItemUtils.761d02ba.js";import"./RelationshipQuery.a9d69ee6.js";import"./labelUtils.37b9d8d8.js";let St=0,g=class extends Z.LoadableMixin(z(L)){constructor(e){super(e),this._idToClientGraphic=null,this.type="memory"}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}get _workerGeometryType(){const e=this.layer?.geometryType;return e?this._geometryTypeRequiresClientGraphicMapping(e)?"polygon":e:null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);N(e,this.layer.spatialReference,r);const i=k.fromJSON(r);if(!this._requiresClientGraphicMapping())return i;const n=this.layer.objectIdField;for(const l of i.features){const p=l.attributes[n],y=this._idToClientGraphic.get(p);y&&(l.geometry=y.geometry)}return i.geometryType=this.layer.geometryType,i}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new f("query-features-json:unsupported","Cannot query in JSON format for client only geometry types (mesh and extent)");await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return N(e,this.layer.spatialReference,r),r}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(r=>({count:r.count,extent:U.fromJSON(r.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async _applyEdits(e){if(!this._connection)throw new f("feature-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField;let r=null;const i=[],n=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const l=u=>"objectId"in u&&u.objectId!=null?u.objectId:"attributes"in u&&u.attributes[t]!=null?u.attributes[t]:null;if(e.addFeatures&&(r=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const u of e.deleteFeatures){const m=l(u);m!=null&&i.push(m)}const p=e.updateFeatures&&this._idToClientGraphic?new Map:null;if(e.updateFeatures){for(const u of e.updateFeatures)if(n.push(this._serializeFeature(u)),p){const m=l(u);m!=null&&p.set(m,u)}}Re(r?r.features:null,n,this.layer.spatialReference);const{fullExtent:y,featureEditResults:h}=await this._connection.invoke("applyEdits",{adds:r?r.features:[],updates:n,deletes:i});return this.fullExtent=y,r&&r.finish(h.uidToObjectId),this._updateClientGraphicIds(p,h),this._createEditsResult(h)}async _prepareClientMapping(e,t){if(this._layerOrSourceGeometryType!=="mesh"||e==null)return;const r=[];for(const{geometry:i}of e)i==null||i.type!=="mesh"||i.hasExtent||i.loaded||r.push(i.load({signal:t}));r.length&&await Promise.all(r)}_updateClientGraphicIds(e,t){if(this._idToClientGraphic){if(e)for(const r of t.updateResults){if(!r.success)continue;const i=e.get(r.objectId);i!=null&&this._addIdToClientGraphic(i)}for(const r of t.deleteResults)r.success&&this._idToClientGraphic.delete(r.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new f("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,r=new Array(e.length);let i=null;for(let l=0;l<e.length;l++){const p=e[l],y=this._serializeFeature(p);i||p.geometry==null||(i=p.geometry.type),r[l]=y,t.set(`${y.uid}`,p)}const n=this;return{features:r,inferredGeometryType:i,finish(l){const p=n.sourceJSON.objectIdField;for(const y in l){const h=l[y],u=t.get(y);u&&(u.attributes||(u.attributes={}),h===-1?delete u.attributes[p]:u.attributes[p]=h,n._addIdToClientGraphic(u))}}}}_addIdToClientGraphic(e){if(!this._idToClientGraphic)return;const t=this.sourceJSON.objectIdField,r=e.attributes?.[t];r!=null&&this._idToClientGraphic.set(r,e)}get _layerOrSourceGeometryType(){return this.layer?.geometryType??this.sourceJSON?.geometryType}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return e==="mesh"||e==="multipatch"||e==="extent"}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e),i=(St++).toString();return r?{uid:i,geometry:r.toJSON(),attributes:t}:{uid:i,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:this._geometryRequiresClientGraphicMapping(t)?t.extent?H.fromExtent(t.extent):null:t}async _startWorker(e){this._connection=await B("MemorySourceWorker",{strategy:K("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,objectIdField:i,hasM:n,hasZ:l,timeInfo:p,dateFieldsTimeZone:y}=this.layer,h=this.layer.originOf("spatialReference")==="defaults";await this._prepareClientMapping(this.items,e);const u=this._prepareAddFeatures(this.items);this.addHandles(this.on("before-changes",w=>{T.getLogger(this).error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"),w.preventDefault()}));const m={features:u.features,fields:t?.map(w=>w.toJSON()),geometryType:q.toJSON(this._workerGeometryType),hasM:this._layerOrSourceGeometryType!=="mesh"&&n,hasZ:this._layerOrSourceGeometryType==="mesh"||l,objectIdField:i,spatialReference:h?null:r&&r.toJSON(),timeInfo:p?.toJSON()??null,dateFieldsTimeZone:y},b=await this._connection.invoke("load",m,{signal:e});for(const w of b.warnings)T.getLogger(this.layer).warn("#load()",`${w.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:w});b.featureErrors.length&&T.getLogger(this.layer).warn("#load()",`Encountered ${b.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:b.featureErrors});const M=b.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(u.inferredGeometryType)&&(M.geometryType=q.toJSON(u.inferredGeometryType)),this.sourceJSON=M,this._requiresClientGraphicMapping()&&(this._idToClientGraphic=new Map),u.finish(b.assignedObjectIds)}};s([Y({Type:R,ensureType:X(R)})],g.prototype,"itemType",void 0),s([a()],g.prototype,"type",void 0),s([a({constructOnly:!0})],g.prototype,"layer",void 0),s([a({readOnly:!0})],g.prototype,"_workerGeometryType",null),s([a()],g.prototype,"sourceJSON",void 0),g=s([E("esri.layers.graphics.sources.MemorySource")],g);let v=class extends ee{constructor(){super(...arguments),this.updating=!1,this.status="unknown"}};s([a()],v.prototype,"updating",void 0),s([a()],v.prototype,"status",void 0),v=s([E("esri.layers.support.PublishingInfo")],v);const _t=v,Ft=Symbol(),Tt=e=>{var t;let r=class extends e{constructor(){super(...arguments),this[t]=!0}get publishingInfo(){if(this.destroyed)return null;const i=this._get("publishingInfo");if(i)return i;const n=new _t;return this._checkPublishingStatus(n),n}_checkPublishingStatus(i){let p=0;const y=async u=>{let m;i.updating=!0;try{m=await this.fetchPublishingStatus()}catch{m="unavailable"}m!=="published"&&m!=="unavailable"||(i.status==="publishing"&&this.refresh(),h.remove()),i.status=m,i.updating=!1,h.removed||(p=setTimeout(y,u,u+125))},h={removed:!1,remove(){this.removed=!0,clearTimeout(p)}};this.when().catch(()=>h.remove()),y(250),this.addHandles(h)}};return t=Ft,s([a({readOnly:!0,clonable:!1})],r.prototype,"publishingInfo",null),r=s([E("esri.layers.mixins.PublishableLayer")],r),r},c="FeatureLayer";function F(e,t){return new f("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function V(e){return e&&e instanceof L}const j=ht();function C(e,t,r){const i=!!r?.writeLayerSchema;return{enabled:i,ignoreOrigin:i}}let o=class extends Me(Je(Ne(Tt(Ae(te(ke(Ze(re(Qe(Pe(Ve(We(Ie(Ge(xe(ie(ve))))))))))))))))){constructor(...e){super(...e),this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=se.WGS84,this.subtypeCode=null,this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=oe(async(t,r,i)=>{const{save:n,saveAs:l}=await G(()=>import("./featureLayerUtils.c17330d9.js"),["assets/featureLayerUtils.c17330d9.js","assets/index.7eb0daf2.js","assets/index.d3b4073e.css","assets/originUtils.4db9de46.js","assets/multiOriginJSONSupportUtils.e5f3496a.js","assets/utils.a325433b.js","assets/jsonContext.a8ec6dbb.js","assets/portalItemUtils.761d02ba.js","assets/saveAPIKeyUtils.47a3a270.js","assets/saveUtils.056b2dea.js","assets/fetchService.e99559bf.js"]);switch(t){case _.SAVE:return n(this,r);case _.SAVE_AS:return l(this,i,r)}})}destroy(){this.source?.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then(i=>this.initLayerProperties(i))),Promise.resolve(this);const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(ae).then(async()=>{if(this.url&&this.layerId==null&&/FeatureServer|MapServer\/*$/i.test(this.url)){const i=await this._fetchFirstValidLayerId(t);i!=null&&(this.layerId=i)}if(!this.url&&!this._hasMemorySource())throw new f("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))}).then(()=>ze(this,"load",e));return this.addResolvingPromise(r),Promise.resolve(this)}readCapabilities(e,t){return t=t.layerDefinition||t,ft(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return!(this.loaded&&!this.capabilities?.operations.supportsEditing)&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}get effectiveEditingEnabled(){return Ue(this)}readIsTable(e,t){return(t=t?.layerDefinition??t).type==="Table"||!t.geometryType}writeIsTable(e,t,r,i){i?.writeLayerSchema&&I(r,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return He(t.layerDefinition||t)}readObjectIdField(e,t){return Be(t.layerDefinition||t)}get parsedUrl(){const e=ne(this.url);return e!=null&&(this.dynamicDataSource!=null?e.path=x(e.path,"dynamicLayer"):this.layerId!=null&&(e.path=x(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){P(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){t=t.layerDefinition||t;const i=t.drawingInfo?.renderer;if(i){const n=_e(i,t,r)??void 0;return n||T.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),n}return Ke(t,r)}set source(e){const t=this._get("source");t!==e&&(V(t)&&this._resetMemorySource(t),V(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof L?new g({layer:this,items:e}):e:null}readSource(e,t){const r=k.fromJSON(t.featureSet);return new g({layer:this,items:r?.features??[]})}readTemplates(e,t){const r=t.editFieldsInfo,i=r?.creatorField,n=r?.editorField;return e=e?.map(l=>W.fromJSON(l)),this._fixTemplates(e,i),this._fixTemplates(e,n),e}readTitle(e,t){const r=t.layerDefinition?.name??t.name,i=t.title||t.layerDefinition?.title;if(r){const n=this.portalItem?.title;if(this.sublayerTitleMode==="item-title")return this.url?le(this.url,r):r;let l=r;if(!l&&this.url){const p=ue(this.url);p!=null&&(l=p.title)}return l?(this.sublayerTitleMode==="item-title-and-service-name"&&n&&n!==l&&(l=n+" - "+l),pe(l)):void 0}if(this.sublayerTitleMode==="item-title"&&i)return i}readTitleFromWebMap(e,t){return t.title||t.layerDefinition?.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find(n=>n.name.toLowerCase()===r);i&&(r=i.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r?.creatorField,n=r?.editorField;return e?.map(l=>(l=Q.fromJSON(l),this._fixTemplates(l.templates,i),this._fixTemplates(l.templates,n),l))}readVisible(e,t){return t.layerDefinition?.defaultVisibility!=null?!!t.layerDefinition.defaultVisibility:t.visibility!=null?!!t.visibility:void 0}async addAttachment(e,t){return Ye(this,e,t,c)}async updateAttachment(e,t,r){return Xe(this,e,t,r,c)}async applyEdits(e,t){return et(this,e,t)}async uploadAssets(e,t){return tt(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return vt(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await de(G(()=>import("./FeatureLayerSource.ce1e4c1a.js"),["assets/FeatureLayerSource.ce1e4c1a.js","assets/index.7eb0daf2.js","assets/index.d3b4073e.css","assets/MeshLocalVertexSpace.82c9e8da.js","assets/meshVertexSpaceUtils.5f97af5a.js","assets/MeshTransform.97c24ed3.js","assets/infoFor3D.8ecd2df8.js","assets/mat4f64.a89cc140.js","assets/quat.2c7c64ba.js","assets/mat3f64.4564d6a3.js","assets/quatf64.bcd5b590.js","assets/vec42.faaf2b1c.js","assets/vec4f64.7b667e97.js","assets/editingSupport.b9997e05.js","assets/EditBusLayer.979b288a.js","assets/clientSideDefaults.e011af70.js","assets/QueryEngineCapabilities.a12653c7.js","assets/defaultsJSON.ba72df2f.js","assets/QueryTask.20e8c8fd.js","assets/executeForIds.dd0800ec.js","assets/query.702fc5fe.js","assets/pbfQueryUtils.52d7ad7f.js","assets/pbf.72af564e.js","assets/OptimizedFeature.32c00f5f.js","assets/OptimizedFeatureSet.6fd3bcb1.js","assets/queryZScale.835a340e.js","assets/executeQueryJSON.b781982b.js","assets/FeatureSet.78257171.js","assets/executeQueryPBF.76577f66.js","assets/featureConversionUtils.c6dfa488.js","assets/featureLayerUtils.1828d741.js","assets/jsonUtils.93554317.js","assets/UniqueValueRenderer.8069ab57.js","assets/ColorStop.aa8650af.js","assets/diffUtils.080c04bc.js","assets/colorRamps.272b71a1.js","assets/sizeVariableUtils.34255976.js","assets/visualVariableUtils.12ee1cdb.js","assets/jsonUtils.185b82ae.js","assets/defaults.e5a1167a.js","assets/styleUtils.7f2b22b0.js","assets/LRUCache.6f8863ed.js","assets/Version.856e86b2.js","assets/FieldsIndex.333d0734.js","assets/UnknownTimeZone.4756be49.js","assets/OverrideHelper.b5d99b26.js","assets/colorUtils.085072a2.js","assets/utils.dbb84a38.js","assets/quantizationUtils.fe6b1e6e.js","assets/heatmapUtils.b763e953.js","assets/RelationshipQuery.a9d69ee6.js","assets/editsZScale.3b0b1c90.js"]),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=rt(this);e.dynamicDataSource=this.dynamicDataSource;const t=this.subtypeCode!=null?`${this.subtypeField} = ${this.subtypeCode}`:null,r=ye(this.definitionExpression,t);return e.where=r||"1=1",e}async deleteAttachments(e,t){return it(this,e,t,c)}async fetchRecomputedExtents(e){return st(this,e,c)}getFeatureType(e){return ot(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=t?.feature,i=at(this,r);if(i){const l=i.domains?.[e];return l?.type==="inherited"?this._getLayerDomain(e):l}const n=this.getFeatureType(r);if(n){const l=n.domains&&n.domains[e];if(l&&l.type!=="inherited")return l}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,t){return nt(this,e,t,c)}async queryFeatures(e,t){const r=await this.load(),i=await r.source.queryFeatures(ce.from(e)??r.createQuery(),t);if(i?.features)for(const n of i.features)n.layer=n.sourceLayer=r;return i}async queryObjectIds(e,t){return lt(this,e,t,c)}async queryFeatureCount(e,t){return ut(this,e,t,c)}async queryExtent(e,t){return pt(this,e,t,c)}async queryRelatedFeatures(e,t){return dt(this,e,t,c)}async queryRelatedFeaturesCount(e,t){return yt(this,e,t,c)}async queryTopFeatures(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopFeatures||!i?.query?.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryTopFeatures capability");const n=await r.queryTopFeatures(S.from(e),t);if(n?.features)for(const l of n.features)l.layer=l.sourceLayer=this;return n}async queryTopObjectIds(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopObjectIds||!i?.query.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryTopObjectIds capability");return r.queryTopObjectIds(S.from(e),t)}async queryTopFeaturesExtent(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopExtents||!i?.query?.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryTopExtents capability");return r.queryTopExtents(S.from(e),t)}async queryTopFeatureCount(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopCount||!i?.query?.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryFeatureCount capability");return r.queryTopCount(S.from(e),t)}read(e,t){const r=e.featureCollection;if((r||e.type==="Feature Collection")&&(this.resourceInfo=e),r){const i=r.layers;i&&i.length===1&&(super.read(i[0],t),r.showLegend!=null&&super.read({showLegend:r.showLegend},t))}super.read(e,t),t&&t.origin==="service"&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:t?.origin??void 0,writeLayerSchema:t?.writeLayerSchema??this._hasMemorySource()};const{origin:r,layerContainerType:i,messages:n}=t;if(this.dynamicDataSource)return n?.push(F(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if((r==="web-map"||r==="web-scene")&&i!=="tables")return n?.push(F(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return n?.push(F(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&(r==="web-map"||r==="web-scene")&&i==="tables")return n?.push(F(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new f(c,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){return!!this.loaded&&(this.source?.type==="memory"||bt(this,e))}async save(e){return this._debouncedSaveOperations(_.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(_.SAVE_AS,t,e)}_readEditingEnabled(e,t,r){let i=e.layerDefinition?.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,t&&r?.origin==="web-map"&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map(t=>t.trim()).includes("editing")}_writeEditingEnabled(e,t,r,i){if(!e){const n=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query";I("layerDefinition.capabilities",n,t),r&&!i?.writeLayerSchema&&(t.capabilities=n)}}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}_fetchFirstValidLayerId(e){return he(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t=>{const r=t.data;if(r)return this.findFirstValidLayerId(r)})}async initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),P(this.renderer,this.fieldsIndex),me(this.timeInfo,this.fieldsIndex),wt(this,{origin:"service"})}async hasDataChanged(){return ct(this)}async fetchPublishingStatus(){const e=this.source;return e?.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||e.search(/\/FeatureServer\//i)!==-1||this.fields?.some(t=>t.type==="geometry")||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach(r=>{const i=r.prototype?.attributes;i&&t&&delete i[t]})}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new f("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new f("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach(t=>{t.layer=this,t.sourceLayer=this}),this.addHandles([e.on("after-add",t=>{t.item.layer=this,t.item.sourceLayer=this}),e.on("after-remove",t=>{t.item.layer=null,t.item.sourceLayer=null})],"fl-source")}_resetMemorySource(e){e.forEach(t=>{t.layer=null,t.sourceLayer=null}),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};s([d("service","capabilities")],o.prototype,"readCapabilities",null),s([a({json:{origins:{"web-scene":{write:!1}},write:!0}})],o.prototype,"charts",void 0),s([a({readOnly:!0})],o.prototype,"createQueryVersion",null),s([a({json:{read:{source:"layerDefinition.copyrightText"}}})],o.prototype,"copyright",void 0),s([a({json:{read:{source:"layerDefinition.displayField"}}})],o.prototype,"displayField",void 0),s([a({types:fe,readOnly:!0})],o.prototype,"defaultSymbol",void 0),s([a({type:ge})],o.prototype,"dynamicDataSource",void 0),s([a({type:Boolean})],o.prototype,"editingEnabled",null),s([d(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],o.prototype,"readEditingEnabled",null),s([d("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],o.prototype,"readEditingEnabledFromWebMap",null),s([$(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabled",null),s([$("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabledToWebMap",null),s([a({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),s([a({...j.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:C}}}}})],o.prototype,"fields",void 0),s([a(j.fieldsIndex)],o.prototype,"fieldsIndex",void 0),s([a({type:qe,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"formTemplate",void 0),s([a({json:{read:{source:"layerDefinition.extent"}}})],o.prototype,"fullExtent",void 0),s([a({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:C,writer(e,t,r){const i=e?J.toJSON(e):null;i&&I(r,i,t)}}}},read:{source:"layerDefinition.geometryType",reader:J.read}}})],o.prototype,"geometryType",void 0),s([a({json:{read:{source:"layerDefinition.hasM"}}})],o.prototype,"hasM",void 0),s([a({json:{read:{source:"layerDefinition.hasZ"}}})],o.prototype,"hasZ",void 0),s([a(Ee)],o.prototype,"id",void 0),s([a({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],o.prototype,"infoFor3D",void 0),s([a({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],o.prototype,"isTable",void 0),s([d("service","isTable",["type","geometryType"]),d("isTable",["layerDefinition.type","layerDefinition.geometryType"])],o.prototype,"readIsTable",null),s([$("web-map","isTable")],o.prototype,"writeIsTable",null),s([a($e)],o.prototype,"labelsVisible",void 0),s([a({type:[mt],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:O,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:{enabled:!0,layerContainerTypes:A}}},name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:!0}})],o.prototype,"labelingInfo",void 0),s([a((()=>{const e=D(De);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(t,r,i){I(i,Se(t),r)}}},e})())],o.prototype,"opacity",void 0),s([a(Oe)],o.prototype,"legendEnabled",void 0),s([a({type:["show","hide"],json:(()=>{const e=D(je.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],o.prototype,"listMode",void 0),s([d("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],o.prototype,"readGlobalIdField",null),s([a({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:C}}}}})],o.prototype,"objectIdField",void 0),s([d("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],o.prototype,"readObjectIdField",null),s([a({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],o.prototype,"operationalLayerType",void 0),s([a(j.outFields)],o.prototype,"outFields",void 0),s([a({readOnly:!0})],o.prototype,"parsedUrl",null),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([a(Ce)],o.prototype,"popupEnabled",void 0),s([a({type:be,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),s([a({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),s([a({types:Fe,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:Te,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:A,overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema})}}})],o.prototype,"renderer",null),s([d("service","renderer",["drawingInfo.renderer","defaultSymbol"]),d("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],o.prototype,"readRenderer",null),s([a()],o.prototype,"resourceInfo",void 0),s([a((()=>{const e=D(Le);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],o.prototype,"screenSizePerspectiveEnabled",void 0),s([a({clonable:!1})],o.prototype,"source",null),s([we("source")],o.prototype,"castSource",null),s([d("portal-item","source",["featureSet"]),d("web-map","source",["featureSet"])],o.prototype,"readSource",null),s([a({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],o.prototype,"spatialReference",void 0),s([a({type:Number})],o.prototype,"subtypeCode",void 0),s([a({type:[W]})],o.prototype,"templates",void 0),s([d("templates",["editFieldsInfo","creatorField","editorField","templates"])],o.prototype,"readTemplates",null),s([a({type:gt})],o.prototype,"timeInfo",void 0),s([a()],o.prototype,"title",void 0),s([d("service","title",["name"]),d("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],o.prototype,"readTitle",null),s([d("web-map","title",["layerDefinition.name","title"])],o.prototype,"readTitleFromWebMap",null),s([a({type:String})],o.prototype,"sublayerTitleMode",void 0),s([a({json:{read:!1}})],o.prototype,"type",void 0),s([a({type:String})],o.prototype,"typeIdField",void 0),s([d("service","typeIdField"),d("typeIdField",["layerDefinition.typeIdField"])],o.prototype,"readTypeIdField",null),s([a({type:[Q]})],o.prototype,"types",void 0),s([d("service","types",["types"]),d("types",["layerDefinition.types"])],o.prototype,"readTypes",null),s([a({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],o.prototype,"visible",void 0),s([d("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],o.prototype,"readVisible",null),o=s([E("esri.layers.FeatureLayer")],o);const Lr=o;export{Lr as default};
