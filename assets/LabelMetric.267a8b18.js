import{s as g,n as N,b2 as U,b1 as b,l as Y}from"./index.7eb0daf2.js";import"./enums.abef80de.js";import{s as L,f as B,c as R}from"./Texture.7423fe29.js";import{U as u,C as h}from"./enums.8929356b.js";import"./Program.9a92c5ff.js";import{t as H}from"./VertexElementDescriptor.c76e1b24.js";class f{constructor(t,e,n,s,i,a,o){this.instanceId=t,this.textureKey=e,this.indexStart=n,this.indexCount=s,this.vertexStart=i,this.vertexCount=a,this.overlaps=o}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new f(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,e,n,s,i,a,o,c){t.push(e),t.push(n),t.push(s),t.push(i),t.push(a),t.push(o),t.push(c)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const e=t.readInt32(),n=t.readInt32(),s=t.readInt32(),i=t.readInt32(),a=t.readInt32(),o=t.readInt32(),c=t.readInt32();return new f(e,n,s,i,a,o,c)}}f.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function I(r,t){if(t!==null){r.push(t.length);for(const e of t)e.serialize(r);return r}r.push(0)}function S(r,t,e){const n=r.readInt32(),s=new Array(n);for(let i=0;i<s.length;i++)s[i]=t.deserialize(r,e);return s}class y{constructor(t,e){this.id=t,this.sortKey=e,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),I(t,this.records),t}static deserialize(t){const e=t.readInt32(),n=t.readF32(),s=new y(e,n);return s.records=S(t,f)??[],s}}y.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+f.byteSizeHint;const x=()=>N.getLogger("esri.views.2d.engine.webgl.Utils");function j(r){switch(r){case u.UNSIGNED_BYTE:return 1;case u.UNSIGNED_SHORT_4_4_4_4:return 2;case u.FLOAT:return 4;default:return void x().error(new g("webgl-utils",`Unable to handle type ${r}`))}}function V(r){switch(r){case u.UNSIGNED_BYTE:return Uint8Array;case u.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case u.FLOAT:return Float32Array;default:return void x().error(new g("webgl-utils",`Unable to handle type ${r}`))}}function P(r){const t={};for(const e in r){const n=r[e];let s=0;t[e]=n.map(i=>{const a=new H(i.name,i.count,i.type,s,0,i.normalized||!1);return s+=i.count*L(i.type),a}),t[e]?.forEach(i=>i.stride=s)}return t}const k=r=>{const t=new Map;for(const e in r)for(const n of r[e])t.set(n.name,n.location);return t},v=r=>{const t={};for(const e in r){const n=r[e];t[e]=n?.length?n[0].stride:0}return t},p=new Map,J=(r,t)=>{if(!p.has(r)){const e=P(t),n={strides:v(e),bufferLayouts:e,attributes:k(t)};p.set(r,n)}return p.get(r)},Q=r=>r.includes("data:image/svg+xml");function Z(r){const t=[];for(let e=0;e<r.length;e++)t.push(r.charCodeAt(e));return t}function tt(r,t,e){const n=new B(t.width,t.height);return n.dataType=t.dataType,t.depth&&(n.depth=t.depth),t.flipped&&(n.flipped=t.flipped),t.hasMipmap&&(n.hasMipmap=t.hasMipmap),n.internalFormat=t.internalFormat,t.isImmutable&&(n.isImmutable=t.isImmutable),t.isOpaque&&(n.isOpaque=t.isOpaque),t.maxAnisotropy&&(n.maxAnisotropy=t.maxAnisotropy),n.pixelFormat=t.pixelFormat,t.preMultiplyAlpha&&(n.preMultiplyAlpha=t.preMultiplyAlpha),t.samplingMode&&(n.samplingMode=t.samplingMode),t.target&&(n.target=t.target),n.uniform=t.uniform,t.unpackAlignment&&(n.unpackAlignment=t.unpackAlignment),t.wrapMode&&(n.wrapMode=t.wrapMode),new R(r,n,e)}function et(r){return"url"in r&&"urlHash"in r?{...r,url:""}:r}class d{constructor(t,e,n,s){this.computedX=0,this.computedY=0,this.center=U(t,e),this.centerT=b(),this.halfWidth=n/2,this.halfHeight=s/2,this.width=n,this.height=s}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(t){this.center[0]=t}set y(t){this.center[1]=t}clone(){return new d(this.x,this.y,this.width,this.height)}serialize(t){return t.writeF32(this.center[0]),t.writeF32(this.center[1]),t.push(this.width),t.push(this.height),t}findCollisionDelta(t,e=4){const n=Math.abs(t.centerT[0]-this.centerT[0]),s=Math.abs(t.centerT[1]-this.centerT[1]),i=(t.halfWidth+this.halfWidth+e)/n,a=(t.halfHeight+this.halfHeight+e)/s,o=Math.min(i,a);return Math.log2(o)}extend(t){const e=Math.min(this.xmin,t.xmin),n=Math.min(this.ymin,t.ymin),s=Math.max(this.xmax,t.xmax)-e,i=Math.max(this.ymax,t.ymax)-n,a=e+s/2,o=n+i/2;this.width=s,this.height=i,this.halfWidth=s/2,this.halfHeight=i/2,this.x=a,this.y=o}static deserialize(t){const e=t.readF32(),n=t.readF32(),s=t.readInt32(),i=t.readInt32();return new d(e,n,s,i)}}const F=new Float32Array(1),C=new Uint32Array(F.buffer);function z(r){return F[0]=r,C[0]}function nt(r,t){return 65535&r|t<<16}function m(r){const t=z(r),e=t>>>31;let n=t>>>23&255,s=8388607&t;return n-=127,n>15?e<<15|31744:n<-25?0:(n<-14&&(s+=8388608,s/=2**(-14-n),n=-15),n+=15,s/=8192,s=O(s,1023),e<<15|n<<10|s)}function O(r,t){const e=Math.floor(r),n=r-e;return e<t&&(n>.5||n===.5&&e%2==1)?e+1:e}function T(r){let t=r>>>15,e=r>>10&31,n=1023&r;return t=t?-1:1,e-=15,n/=1024,e>-15?n+=1:e=-14,t*2**e*n}function rt(r){const t=r.map(({name:e,count:n,type:s})=>`${e}.${n}.${s}`).join(",");return Y(t)}function l(r,t,e,n,s,i,a){if(r.primitiveName===t){for(const o in r)if(o===e){let c=n?.readWithDefault(s,i,r[o]&&a);return r.type==="text"&&(c=c.toString()),void(r[o]=c)}}if("type"in r&&r.type!=null)switch(r.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(r.symbolLayers)for(const o of r.symbolLayers)l(o,t,e,n,s,i,a);break;case"CIMHatchFill":r.lineSymbol&&l(r.lineSymbol,t,e,n,s,i,a);break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(r.type==="CIMVectorMarker"&&r.markerGraphics)for(const o of r.markerGraphics)l(o,t,e,n,s,i,a),l(o.symbol,t,e,n,s,i,a)}}const D=400;function st(r){const t=r.width;return r.effects!=null?D:Math.max(1.25*t,8)}function it(r,t,e,n){const s=e.packPrecisionFactor??1;switch(e.type){case h.BYTE:if(e.count===1)r.setInt8(n+e.offset,t*s);else for(let i=0;i<e.count;i++){const a=i*Int8Array.BYTES_PER_ELEMENT;r.setInt8(n+e.offset+a,t[i]*s)}break;case h.UNSIGNED_BYTE:if(e.count===1)r.setUint8(n+e.offset,t*s);else for(let i=0;i<e.count;i++){const a=i*Uint8Array.BYTES_PER_ELEMENT;r.setUint8(n+e.offset+a,t[i]*s)}break;case h.SHORT:if(e.count===1)r.setInt16(n+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Int16Array.BYTES_PER_ELEMENT;r.setInt16(n+e.offset+a,t[i]*s,!0)}break;case h.UNSIGNED_SHORT:if(e.count===1)r.setUint16(n+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Uint16Array.BYTES_PER_ELEMENT;r.setUint16(n+e.offset+a,t[i]*s,!0)}break;case h.INT:if(e.count===1)r.setInt32(n+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Int32Array.BYTES_PER_ELEMENT;r.setInt32(n+e.offset+a,t[i]*s,!0)}break;case h.UNSIGNED_INT:if(e.count===1)r.setUint32(n+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Uint32Array.BYTES_PER_ELEMENT;r.setUint32(n+e.offset+a,t[i]*s,!0)}break;case h.FLOAT:if(e.count===1)r.setFloat32(n+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Float32Array.BYTES_PER_ELEMENT;r.setFloat32(n+e.offset+a,t[i]*s,!0)}break;case h.HALF_FLOAT:if(e.count===1)r.setUint16(n+e.offset,m(t*s),!0);else for(let i=0;i<e.count;i++){const a=i*Uint16Array.BYTES_PER_ELEMENT;r.setUint16(n+e.offset+a,m(t[i]*s),!0)}}}function at(r,t,e){switch(t.type){case h.BYTE:{if(t.count===1)return r.getInt8(e+t.offset);const n=[];for(let s=0;s<t.count;s++){const i=s*Int8Array.BYTES_PER_ELEMENT;n.push(r.getInt8(e+t.offset+i))}return n}case h.UNSIGNED_BYTE:{if(t.count===1)return r.getUint8(e+t.offset);const n=[];for(let s=0;s<t.count;s++){const i=s*Uint8Array.BYTES_PER_ELEMENT;n.push(r.getUint8(e+t.offset+i))}return n}case h.SHORT:{if(t.count===1)return r.getInt16(e+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Int16Array.BYTES_PER_ELEMENT;n.push(r.getInt16(e+t.offset+i,!0))}return n}case h.UNSIGNED_SHORT:{if(t.count===1)return r.getUint16(e+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Uint16Array.BYTES_PER_ELEMENT;n.push(r.getUint16(e+t.offset+i,!0))}return n}case h.INT:{if(t.count===1)return r.getInt32(e+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Int32Array.BYTES_PER_ELEMENT;n.push(r.getInt32(e+t.offset+i,!0))}return n}case h.UNSIGNED_INT:{if(t.count===1)return r.getUint32(e+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Uint32Array.BYTES_PER_ELEMENT;n.push(r.getUint32(e+t.offset+i,!0))}return n}case h.FLOAT:{if(t.count===1)return r.getFloat32(e+t.offset,!0);const n=[];for(let s=0;s<t.count;s++){const i=s*Float32Array.BYTES_PER_ELEMENT;n.push(r.getFloat32(e+t.offset+i,!0))}return n}case h.HALF_FLOAT:{if(t.count===1)return T(r.getUint16(e+t.offset,!0));const n=[];for(let s=0;s<t.count;s++){const i=s*Uint16Array.BYTES_PER_ELEMENT;n.push(T(r.getUint16(e+t.offset+i,!0)))}return n}}}class M{constructor(t,e,n,s,i,a,o,c,E=[]){this.entityTexel=t,this.anchorX=e,this.anchorY=n,this.directionX=s,this.directionY=i,this.maxScale=a,this.minScale=o,this.referenceBounds=c,this.bounds=E}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds===null?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),I(t,this.bounds)}static deserialize(t){const e=t.readInt32(),n=t.readF32(),s=t.readF32(),i=t.readF32(),a=t.readF32(),o=t.readF32(),c=t.readF32(),E=t.readF32(),w=t.readF32(),_=t.readF32(),A=S(t,d)??[];return new M(e,n,s,i,a,o,c,{size:E,offsetX:w,offsetY:_},A)}}export{et as M,tt as T,nt as a,J as b,y as c,f as d,V as e,it as f,st as g,j as h,d as i,Z as j,S as n,l as o,M as r,at as s,rt as t,Q as y};
