import{aa as q,ab as X,d6 as Dt,ac as Rt,dW as Lt,s as Nt,e as Et,n as Z,aT as jt,d as nt,F as Ot,b5 as vt,aH as Gt,cz as Wt,z as qt}from"./index.7eb0daf2.js";class Ut{constructor(e=null,n=null,l=null){this.minValue=e,this.maxValue=n,this.noDataValue=l}}const zt=9999999e31,Xt=2e-7,Jt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function ht(t){return Jt[t]??[-34028234663852886e22,34028234663852886e22]}function xe(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function we(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function ye(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:l,statistics:a,pixelType:i}=t,o=l[0].length,c=t.bandMasks??[],h=t.mask??new Uint8Array(o).fill(255),r=i==="f32"||i==="f64",s=ht(i);let u=!1;for(let p=0;p<l.length;p++){const f=typeof e=="number"?e:e[p];if(f==null)continue;const d=a?.[p]?.minValue??s[0],m=a?.[p]?.maxValue??s[1];if(d>f+Number.EPSILON||m<f-Number.EPSILON)continue;const g=c[p]||h.slice(),y=l[p],M=n?.customFloatTolerance;if(r&&M!==0){let w=M;w||(w=Math.abs(f)>=zt?Xt*Math.abs(f):i==="f32"?2**-23:Number.EPSILON);for(let k=0;k<y.length;k++)g[k]&&Math.abs(y[k]-f)<w&&(y[k]=0,g[k]=0,h[k]=0,u=!0)}else for(let w=0;w<y.length;w++)g[w]&&y[w]===f&&(y[w]=0,g[w]=0,h[w]=0,u=!0);c[p]=g}u&&(t.bandMasks=t.bandMasks||t.pixels.length>1?c:null,t.mask=h),u&&"updateStatistics"in t&&t.updateStatistics()}var K;let O=K=class extends Lt{static createEmptyBand(t,e){return new(K.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let l=0;l<t.length;l++){const a=t[l];for(let i=0;i<e;i++)a[i]||(n[i]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Nt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new Ut)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>Ht(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=ht(t),l=this.pixels,a=this.width*this.height,i=l.length;let o,c,h;const r=[];for(let s=0;s<i;s++){h=K.createEmptyBand(t,a),o=l[s];for(let u=0;u<a;u++)c=o[u],h[u]=c>n?n:c<e?e:c;r.push(h)}this.pixels=r,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const l=e.length,a=t.some(u=>u>=e.length),i=l===t.length&&!t.some((u,p)=>u!==p);if(a||i)return this;const o=this.bandMasks?.length===l?t.map(u=>this.bandMasks[u]):void 0;let{mask:c,validPixelCount:h}=this;const{width:r,height:s}=this;return o?.length&&(c=K.combineBandMasks(o),h=c.filter(u=>!!u).length),new K({pixelType:this.pixelType,width:r,height:s,mask:c,bandMasks:o,validPixelCount:h,maskIsAlpha:this.maskIsAlpha,pixels:t.map(u=>e[u]),statistics:n&&t.map(u=>n[u])})}clone(){const t=new K({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(l=>new Uint8Array(l)));const n=K.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const l=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=l?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Et(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:l,pixels:a}=this;if(!t||!a?.length)return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let i,o,c,h;i=o=c=a[0],a.length>=3?(o=a[1],c=a[2]):a.length===2&&(o=a[1]);const r=new Uint32Array(t),s=this.width*this.height;if(i.length===s)if(e!=null&&e.length===s)if(n)for(h=0;h<s;h++){const u=e[h];if(u){const p=u/255;r[h]=l?u<<24|c[h]*p<<16|o[h]*p<<8|i[h]*p:u<<24|c[h]<<16|o[h]<<8|i[h]}}else for(h=0;h<s;h++)e[h]&&(r[h]=255<<24|c[h]<<16|o[h]<<8|i[h]);else for(h=0;h<s;h++)r[h]=255<<24|c[h]<<16|o[h]<<8|i[h];else Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:l}=this;if(!t||!e?.length)return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const a=this.pixelType;let i=1,o=0,c=1;if(l&&l.length>0){for(const m of l)if(m.minValue!=null&&(o=Math.min(o,m.minValue)),m.maxValue!=null&&m.minValue!=null){const g=m.maxValue-m.minValue;c=Math.max(c,g)}i=255/c}else{let m=255;a==="s8"?(o=-128,m=127):a==="u16"?m=65535:a==="s16"?(o=-32768,m=32767):a==="u32"?m=4294967295:a==="s32"?(o=-2147483648,m=2147483647):a==="f32"?(o=-34e38,m=34e38):a==="f64"&&(o=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-o)}const h=new Uint32Array(t),r=this.width*this.height;let s,u,p,f,d;if(s=u=p=e[0],s.length!==r)return Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===r)for(f=0;f<r;f++)n[f]&&(h[f]=255<<24|(p[f]-o)*i<<16|(u[f]-o)*i<<8|(s[f]-o)*i);else for(f=0;f<r;f++)h[f]=255<<24|(p[f]-o)*i<<16|(u[f]-o)*i<<8|(s[f]-o)*i;else if(n!=null&&n.length===r)for(f=0;f<r;f++)d=(s[f]-o)*i,n[f]&&(h[f]=255<<24|d<<16|d<<8|d);else for(f=0;f<r;f++)d=(s[f]-o)*i,h[f]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let l,a,i,o;l=a=i=e[0],e.length>=3?(a=e[1],i=e[2]):e.length===2&&(a=e[1]);const c=this.width*this.height;if(l.length!==c)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(n!=null&&n.length===c)for(o=0;o<c;o++)t[h++]=l[o],t[h++]=a[o],t[h++]=i[o],t[h++]=1&n[o];else for(o=0;o<c;o++)t[h++]=l[o],t[h++]=a[o],t[h++]=i[o],t[h++]=1}};function Ht(t,e){let n=1/0,l=-1/0;const a=t.length;let i,o=0;if(e!=null)for(i=0;i<a;i++)e[i]&&(o=t[i],n=o<n?o:n,l=o>l?o:l);else for(i=0;i<a;i++)o=t[i],n=o<n?o:n,l=o>l?o:l;return new Ut(n,l)}q([X({json:{write:!0}})],O.prototype,"width",void 0),q([X({json:{write:!0}})],O.prototype,"height",void 0),q([X({json:{write:!0}})],O.prototype,"pixelType",void 0),q([Dt("pixelType")],O.prototype,"castPixelType",null),q([X({json:{write:!0}})],O.prototype,"validPixelCount",void 0),q([X({json:{write:!0}})],O.prototype,"mask",void 0),q([X({json:{write:!0}})],O.prototype,"maskIsAlpha",void 0),q([X({json:{write:!0}})],O.prototype,"pixels",void 0),q([X()],O.prototype,"premultiplyAlpha",void 0),q([X({json:{write:!0}})],O.prototype,"statistics",void 0),q([X({json:{write:!0}})],O.prototype,"depthCount",void 0),q([X({json:{write:!0}})],O.prototype,"noDataValues",void 0),q([X({json:{write:!0}})],O.prototype,"bandMasks",void 0),O=K=q([Rt("esri.layers.support.PixelBlock")],O);const _=O;var gt,xt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(gt||(gt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(xt||(xt={}));const ke=6;function R(t){return t!=null&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function Me(t){if(!t?.length||t.some(s=>!R(s)))return null;if(t.length===1)return t[0]?.clone()??null;const e=t,{width:n,height:l,pixelType:a}=e[0];if(e.some(s=>s.width!==n||s.height!==l))return null;const i=e.map(({mask:s})=>s).filter(s=>s!=null);let o=null;i.length&&(o=new Uint8Array(n*l),o.set(i[0]),i.length>1&&$t(i.slice(1),o));const c=[];e.forEach(({pixels:s})=>c.push(...s));const h=e.map(({statistics:s})=>s).filter(s=>s?.length),r=[];return h.forEach(s=>r.push(...s)),new _({pixelType:a,width:n,height:l,mask:o,pixels:c,statistics:r.length?r:null})}function Ae(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((u,p)=>u[0]-p[0]);let l=0;n[0][0]<0&&(l=n[0][0]);const a=Math.max(256,n[n.length-1][0]-l+1),i=new Uint8Array(4*a),o=[];let c,h=0,r=0;const s=n[0].length===5;if(a>65536)return n.forEach(u=>{o[u[0]-l]=s?u.slice(1):u.slice(1).concat([255])}),{indexed2DColormap:o,offset:l,alphaSpecified:s};if(t.fillUnspecified)for(c=n[r],h=c[0]-l;h<a;h++)i[4*h]=c[1],i[4*h+1]=c[2],i[4*h+2]=c[3],i[4*h+3]=s?c[4]:255,h===c[0]-l&&(c=r===n.length-1?c:n[++r]);else for(h=0;h<n.length;h++)c=n[h],r=4*(c[0]-l),i[r]=c[1],i[r+1]=c[2],i[r+2]=c[3],i[r+3]=s?c[4]:255;return{indexedColormap:i,offset:l,alphaSpecified:s}}function be(t,e){if(!R(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),l=n.pixels;let a=n.mask;const i=n.width*n.height;if(l.length!==1)return t;const{indexedColormap:o,indexed2DColormap:c,offset:h,alphaSpecified:r}=e;let s=0;const u=l[0],p=new Uint8Array(u.length),f=new Uint8Array(u.length),d=new Uint8Array(u.length);let m,g=0;if(o){const y=o.length-1;if(a!=null)for(s=0;s<i;s++)a[s]&&(g=4*(u[s]-h),g<h||g>y?a[s]=0:(p[s]=o[g],f[s]=o[g+1],d[s]=o[g+2],a[s]=o[g+3]));else{for(a=new Uint8Array(i),s=0;s<i;s++)g=4*(u[s]-h),g<h||g>y?a[s]=0:(p[s]=o[g],f[s]=o[g+1],d[s]=o[g+2],a[s]=o[g+3]);n.mask=a}}else if(c)if(a!=null)for(s=0;s<i;s++)a[s]&&(m=c[u[s]],p[s]=m[0],f[s]=m[1],d[s]=m[2],a[s]=m[3]);else{for(a=new Uint8Array(i),s=0;s<i;s++)m=c[u[s]],p[s]=m[0],f[s]=m[1],d[s]=m[2],a[s]=m[3];n.mask=a}return n.pixels=[p,f,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=r,n}function ve(t,e){if(!R(t))return null;const{pixels:n,mask:l}=t,a=n.length;let i=e.lut;const{offset:o}=e;i&&i[0].length===1&&(i=n.map(()=>i));const c=[],h=e.outputPixelType||"u8";for(let s=0;s<a;s++){const u=Pt(n[s],l,i[s],o||0,h);c.push(u)}const r=new _({width:t.width,height:t.height,pixels:c,mask:l,pixelType:h});return r.updateStatistics(),r}function Pt(t,e,n,l,a){const i=t.length,o=_.createEmptyBand(a,i);if(e)for(let c=0;c<i;c++)e[c]&&(o[c]=n[t[c]-l]);else for(let c=0;c<i;c++)o[c]=n[t[c]-l];return o}function Ue(t,e){if(!R(t))return null;const n=t.clone(),{pixels:l}=n,a=n.width*n.height,i=e.length,o=Math.floor(i/2),c=e[Math.floor(o)],h=l[0];let r,s,u,p,f,d,m=!1;const g=new Uint8Array(a),y=new Uint8Array(a),M=new Uint8Array(a);let w=n.mask;const k=e[0].mappedColor.length===4;for(w||(w=new Uint8Array(a),w.fill(k?255:1),n.mask=w),f=0;f<a;f++)if(w[f]){for(r=h[f],m=!1,d=o,s=c,u=0,p=i-1;p-u>1;){if(r===s.value){m=!0;break}r>s.value?u=d:p=d,d=Math.floor((u+p)/2),s=e[Math.floor(d)]}m||(r===e[u].value?(s=e[u],m=!0):r===e[p].value?(s=e[p],m=!0):r<e[u].value?(m=!1,s=null):r>e[u].value&&(r<e[p].value?(s=e[u],m=!0):p===i-1?(m=!1,s=null):(s=e[p],m=!0))),m?(g[f]=s.mappedColor[0],y[f]=s.mappedColor[1],M[f]=s.mappedColor[2],w[f]=s.mappedColor[3]):g[f]=y[f]=M[f]=w[f]=0}return n.pixels=[g,y,M],n.mask=w,n.pixelType="u8",n.maskIsAlpha=k,n}function Pe(t,e){if(!R(t))return null;const{width:n,height:l}=t,{inputRanges:a,outputValues:i,outputPixelType:o,noDataRanges:c,allowUnmatched:h,isLastInputRangeInclusive:r}=e,s=t.pixels[0],u=_.createEmptyBand(o,s.length),p=t.mask,f=new Uint8Array(n*l);p?f.set(p):f.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,m=a.map(k=>k-d);m[0]=a[0],m[m.length-1]=a[a.length-1]+(r?1e-6:0);const g=a.length/2,[y,M]=ht(o);for(let k=0;k<l;k++)for(let x=0;x<n;x++){const A=k*n+x;if(f[A]){const b=s[A];let v=!1;for(let $=g-1;$>=0;$--)if(b===m[2*$]||b>m[2*$]&&b<m[2*$+1]){u[A]=i[$],v=!0;break}v||(h?u[A]=b>M?M:b<y?y:b:f[A]=0)}}const w=c?.length;if(w)for(let k=0;k<l;k++)for(let x=0;x<n;x++){const A=k*n+x;if(!p||p[A]){const b=s[A];for(let v=0;v<w;v+=2)if(b>=c[v]&&b<=c[v+1]){u[A]=0,f[A]=0;break}}}return new _({width:n,height:l,pixelType:o,pixels:[u],mask:f})}function wt(t,e,n,l){const a=n!=null&&n.length>=2?new Set(n):null,i=n?.length===1?n[0]:null,o=!!e?.length;for(let c=0;c<t.length;c++)if(l[c]){const h=t[c];if(o){let r=!1;for(let s=0;s<e.length;s+=2)if(h>=e[s]&&h<=e[s+1]){r=!0;break}r||(l[c]=0)}l[c]&&(h===i||a?.has(h))&&(l[c]=0)}}function yt(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][l]){a=!0;break}a||(e[l]=0)}}function $t(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][l]===0){a=!0;break}a&&(e[l]=0)}}function $e(t,e){if(!R(t))return null;const{width:n,height:l,pixels:a}=t,i=n*l,o=new Uint8Array(i);t.mask?o.set(t.mask):o.fill(255);const c=a.length,{includedRanges:h,noDataValues:r,outputPixelType:s,matchAll:u,lookups:p}=e;if(p){const f=[];for(let d=0;d<c;d++){const m=p[d],g=Pt(a[d],o,m.lut,m.offset||0,"u8");f.push(g)}f.length===1?o.set(f[0]):u?yt(f,o):$t(f,o)}else if(u){const f=[];for(let d=0;d<c;d++){const m=new Uint8Array(i);m.set(o),wt(a[d],h?.slice(2*d,2*d+2),r?.[d],m),f.push(m)}f.length===1?o.set(f[0]):yt(f,o)}else for(let f=0;f<c;f++)wt(a[f],h?.slice(2*f,2*f+2),r?.[f],o);return new _({width:n,height:l,pixelType:s,pixels:a,mask:o})}function Te(t){const{srcPixelType:e,inputRanges:n,outputValues:l,allowUnmatched:a,noDataRanges:i,isLastInputRangeInclusive:o,outputPixelType:c}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const h=e.includes("16")?65536:256,r=e.includes("s")?-h/2:0,s=_.createEmptyBand(c,h),u=new Uint8Array(h);a&&u.fill(255);const[p,f]=ht(c);if(n?.length&&l?.length){const m=n.map(g=>g-1e-6);m[0]=n[0],o&&(m[m.length-1]=n[n.length-1]);for(let g=0;g<m.length;g++){const y=l[g]>f?f:l[g]<p?p:l[g],M=Math.ceil(m[2*g]-r),w=Math.floor(m[2*g+1]-r);for(let k=M;k<=w;k++)s[k]=y,u[k]=255}}if(i?.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-r),g=Math.floor(i[2*d+1]-r);for(let y=m;y<=g;y++)u[y]=0}return{lut:s,offset:r,mask:u}}function Ie(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const l=t.includes("16")?65536:256,a=t.includes("s")?-l/2:0,i=new Uint8Array(l);if(e)for(let o=0;o<e.length;o++){const c=Math.ceil(e[2*o]-a),h=Math.floor(e[2*o+1]-a);for(let r=c;r<=h;r++)i[r]=255}else i.fill(255);if(n)for(let o=0;o<n.length;o++)i[n[o]-a]=0;return{lut:i,offset:a}}function Kt(t,e,n,l,a,i,o,c){return{xmin:a<=n*t?0:a<n*t+t?a-n*t:t,ymin:i<=l*e?0:i<l*e+e?i-l*e:e,xmax:a+o<=n*t?0:a+o<n*t+t?a+o-n*t:t,ymax:i+c<=l*e?0:i+c<l*e+e?i+c-l*e:e}}function Be(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if(n?.pixelBlock==null)return null;const l=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,a=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(l,a),o=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),c=Math.min.apply(null,o.map(d=>d.extent.xmin)),h=Math.min.apply(null,o.map(d=>d.extent.ymin)),r=Math.max.apply(null,o.map(d=>d.extent.xmax)),s=Math.max.apply(null,o.map(d=>d.extent.ymax)),u={x:Math.round((e.xmin-c)/l),y:Math.round((s-e.ymax)/a)},p={width:Math.round((r-c)/l),height:Math.round((s-h)/a)},f={width:Math.round((e.xmax-e.xmin)/l),height:Math.round((e.ymax-e.ymin)/a)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==o.length||u.x<0||u.y<0||p.width<f.width||p.height<f.height?null:{extent:e,pixelBlock:Qt(o.map(d=>d.pixelBlock),p,{clipOffset:u,clipSize:f})}}function ut(t,e,n,l,a,i){const{width:o,height:c}=n.block,{x:h,y:r}=n.offset,{width:s,height:u}=n.mosaic,p=Kt(o,c,l,a,h,r,s,u);let f=0,d=0;if(i){const m=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,g=o*i.resolutionX,y=i.startX+l*g;y<m&&y+g>m?d=i.rightPadding:y>=m&&(f=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const g=(a*c+m-r)*s+(l*o-h)+f,y=m*o;for(let M=p.xmin;M<p.xmax;M++)t[g+M]=e[y+M]}else for(let m=p.ymin;m<p.ymax;m++){const g=(a*c+m-r)*s+(l*o-h)+f;for(let y=p.xmin;y<p.xmax;y++)t[g+y]=e}}function Qt(t,e,n={}){const{clipOffset:l,clipSize:a,alignmentInfo:i,blockWidths:o}=n;if(o)return Yt(t,e,{blockWidths:o});const c=t.find(P=>R(P));if(c==null)return null;const h=a?a.width:e.width,r=a?a.height:e.height,s=c.width,u=c.height,p=e.width/s,f=e.height/u,d={offset:l||{x:0,y:0},mosaic:a||e,block:{width:s,height:u}},m=c.pixelType,g=_.getPixelArrayConstructor(m),y=c.pixels.length,M=[];let w,k;for(let P=0;P<y;P++){k=new g(h*r);for(let T=0;T<f;T++)for(let U=0;U<p;U++){const I=t[T*p+U];R(I)&&(w=I.pixels[P],ut(k,w,d,U,T,i))}M.push(k)}const x=t.some(P=>P==null||P.mask!=null&&P.mask.length>0),A=t.some(P=>P?.bandMasks&&P.bandMasks.length>1),b=x?new Uint8Array(h*r):void 0,v=A?[]:void 0;if(b){for(let P=0;P<f;P++)for(let T=0;T<p;T++){const U=t[P*p+T],I=U!=null?U.mask:null;ut(b,I??(U?255:0),d,T,P,i)}if(v)for(let P=0;P<y;P++){const T=new Uint8Array(h*r);for(let U=0;U<f;U++)for(let I=0;I<p;I++){const C=t[U*p+I],S=C?.bandMasks?.[P]??C?.mask;ut(T,S??(C?255:0),d,I,U,i)}v.push(T)}}const $=new _({width:h,height:r,pixels:M,pixelType:m,bandMasks:v,mask:b});return $.updateStatistics(),$}function Yt(t,e,n){const l=t.find(g=>g!=null);if(l==null)return null;const a=t.some(g=>g==null||!!g.mask),{width:i,height:o}=e,c=a?new Uint8Array(i*o):null,{blockWidths:h}=n,r=[],s=l.getPlaneCount(),u=_.getPixelArrayConstructor(l.pixelType);if(a)for(let g=0,y=0;g<t.length;y+=h[g],g++){const M=t[g];if(!R(M))continue;const w=M.mask;for(let k=0;k<o;k++)for(let x=0;x<h[g];x++)c[k*i+x+y]=w==null?255:w[k*M.width+x]}const p=t.some(g=>g?.bandMasks&&g.bandMasks.length>1),f=p?[]:void 0,d=i*o;for(let g=0;g<s;g++){const y=new u(d),M=p?new Uint8Array(d):void 0;for(let w=0,k=0;w<t.length;k+=h[w],w++){const x=t[w];if(!R(x))continue;const A=x.pixels[g];if(A!=null){for(let b=0;b<o;b++)for(let v=0;v<h[w];v++)y[b*i+v+k]=A[b*x.width+v];if(M){const b=x.bandMasks?.[g]??x.mask;for(let v=0;v<o;v++)for(let $=0;$<h[w];$++)M[v*i+$+k]=b?b[v*x.width+$]:255}}}r.push(y),f&&M&&f.push(M)}const m=new _({width:i,height:o,mask:c,bandMasks:f,pixels:r,pixelType:l.pixelType});return m.updateStatistics(),m}function Se(t,e,n){if(!R(t))return null;const{width:l,height:a}=t,i=e.x,o=e.y,c=n.width+i,h=n.height+o;if(i<0||o<0||c>l||h>a||i===0&&o===0&&c===l&&h===a)return t;t.mask||(t.mask=new Uint8Array(l*a));const r=t.mask;for(let s=0;s<a;s++){const u=s*l;for(let p=0;p<l;p++)r[u+p]=s<o||s>=h||p<i||p>=c?0:1}return t.updateStatistics(),t}function Zt(t){if(!R(t))return null;const e=t.clone(),{width:n,height:l,pixels:a}=t,i=a[0],o=e.pixels[0],c=t.mask;for(let h=2;h<l-1;h++){const r=new Map;for(let u=h-2;u<h+2;u++)for(let p=0;p<4;p++){const f=u*n+p;lt(r,i[f],c?c[f]:1)}o[h*n]=kt(r),o[h*n+1]=o[h*n+2]=o[h*n];let s=3;for(;s<n-1;s++){let u=(h-2)*n+s+1;lt(r,i[u],c?c[u]:1),u=(h-1)*n+s+1,lt(r,i[u],c?c[u]:1),u=h*n+s+1,lt(r,i[u],c?c[u]:1),u=(h+1)*n+s+1,lt(r,i[u],c?c[u]:1),u=(h-2)*n+s-3,rt(r,i[u],c?c[u]:1),u=(h-1)*n+s-3,rt(r,i[u],c?c[u]:1),u=h*n+s-3,rt(r,i[u],c?c[u]:1),u=(h+1)*n+s-3,rt(r,i[u],c?c[u]:1),o[h*n+s]=kt(r)}o[h*n+s+1]=o[h*n+s]}for(let h=0;h<n;h++)o[h]=o[n+h]=o[2*n+h],o[(l-1)*n+h]=o[(l-2)*n+h];return e.updateStatistics(),e}function kt(t){if(t.size===0)return 0;let e=0,n=-1,l=0;const a=t.keys();let i=a.next();for(;!i.done;)l=t.get(i.value),l>e&&(n=i.value,e=l),i=a.next();return n}function rt(t,e,n){if(n===0)return;const l=t.get(e);l===1?t.delete(e):t.set(e,l-1)}function lt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function Tt(t,e,n){let{x:l,y:a}=e;const{width:i,height:o}=n;if(l===0&&a===0&&o===t.height&&i===t.width)return t;const{width:c,height:h}=t,r=Math.max(0,a),s=Math.max(0,l),u=Math.min(l+i,c),p=Math.min(a+o,h);if(u<0||p<0||!R(t))return null;l=Math.max(0,-l),a=Math.max(0,-a);const{pixels:f}=t,d=i*o,m=f.length,g=[];for(let k=0;k<m;k++){const x=f[k],A=_.createEmptyBand(t.pixelType,d);for(let b=r;b<p;b++){const v=b*c;let $=(b+a-r)*i+l;for(let P=s;P<u;P++)A[$++]=x[v+P]}g.push(A)}const y=new Uint8Array(d),M=t.mask;for(let k=r;k<p;k++){const x=k*c;let A=(k+a-r)*i+l;for(let b=s;b<u;b++)y[A++]=M?M[x+b]:1}const w=new _({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:y});return w.updateStatistics(),w}function It(t,e=!0){if(!R(t))return null;const{pixels:n,width:l,height:a,mask:i,pixelType:o}=t,c=[],h=Math.round(l/2),r=Math.round(a/2),s=a-1,u=l-1;for(let f=0;f<n.length;f++){const d=n[f],m=_.createEmptyBand(o,h*r);let g=0;for(let y=0;y<a;y+=2)for(let M=0;M<l;M+=2){const w=d[y*l+M];if(e){const k=M===u?w:d[y*l+M+1],x=y===s?w:d[y*l+M+l],A=M===u?x:y===s?k:d[y*l+M+l+1];m[g++]=(w+k+x+A)/4}else m[g++]=w}c.push(m)}let p=null;if(i!=null){p=new Uint8Array(h*r);let f=0;for(let d=0;d<a;d+=2)for(let m=0;m<l;m+=2){const g=i[d*l+m];if(e){const y=m===u?g:i[d*l+m+1],M=d===s?g:i[d*l+m+l],w=m===u?M:d===s?y:i[d*l+m+l+1];p[f++]=g*y*M*w?1:0}else p[f++]=g}}return new _({width:h,height:r,pixelType:o,pixels:c,mask:p})}function Fe(t,e,n=0,l=!0){if(!R(t))return null;const{width:a,height:i}=e;let{width:o,height:c}=t;const h=new Map,r={x:0,y:0},s=1+n;let u=t;for(let p=0;p<s;p++){const f=Math.ceil(o/a),d=Math.ceil(c/i);for(let m=0;m<d;m++){r.y=m*i;for(let g=0;g<f;g++){r.x=g*a;const y=Tt(u,r,e);h.set(`${p}/${m}/${g}`,y)}}p<s-1&&(u=It(u,l)),o=Math.round(o/2),c=Math.round(c/2)}return h}function Ce(t){const{pixelBlock:e,tileSize:n,level:l,row:a,col:i,useBilinear:o}=t;if(!R(e))return null;const{width:c,height:h}=n,r=2**l,s=r*c,u=r*h;let p=Tt(e,{y:a*u,x:i*s},{width:s,height:u});if(!p)return null;for(let f=l;f>0;f--)p=It(p,o);return p}function Bt(t,e,n,l,a=0){const{width:i,height:o}=t,{width:c,height:h}=e,r=l.cols,s=l.rows,u=Math.ceil(c/r-.1/r),p=Math.ceil(h/s-.1/s);let f,d,m,g,y,M,w;const k=u*r,x=k*p*s,A=new Float32Array(x),b=new Float32Array(x),v=new Uint32Array(x),$=new Uint32Array(x);let P,T,U=0;for(let I=0;I<p;I++)for(let C=0;C<u;C++){f=12*(I*u+C),d=n[f],m=n[f+1],g=n[f+2],y=n[f+3],M=n[f+4],w=n[f+5];for(let S=0;S<s;S++){U=(I*s+S)*k+C*r,T=(S+.5)/s;for(let B=0;B<S;B++)P=(B+.5)/r,A[U+B]=(d*P+m*T+g)*i+a,b[U+B]=(y*P+M*T+w)*o+a,v[U+B]=Math.floor(A[U+B]),$[U+B]=Math.floor(b[U+B])}f+=6,d=n[f],m=n[f+1],g=n[f+2],y=n[f+3],M=n[f+4],w=n[f+5];for(let S=0;S<s;S++){U=(I*s+S)*k+C*r,T=(S+.5)/s;for(let B=S;B<r;B++)P=(B+.5)/r,A[U+B]=(d*P+m*T+g)*i+a,b[U+B]=(y*P+M*T+w)*o+a,v[U+B]=Math.floor(A[U+B]),$[U+B]=Math.floor(b[U+B])}}return{offsets_x:A,offsets_y:b,offsets_xi:v,offsets_yi:$,gridWidth:k}}function Ve(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:a,offsets_y:i,gridWidth:o}=Bt(t,t,n,{rows:l[0],cols:l[1]}),{width:c,height:h}=t,r=new Float32Array(c*h),s=180/Math.PI;for(let u=0;u<h;u++)for(let p=0;p<c;p++){const f=u*o+p,d=u===0?f:f-o,m=u===h-1?f:f+o,g=a[d]-a[m],y=i[m]-i[d];if(isNaN(g)||isNaN(y))r[u*c+p]=90;else{let M=Math.atan2(y,g)*s;M=(360+M)%360,r[u*c+p]=M}}return r}function _e(t,e,n,l,a="nearest"){if(!R(t))return null;a==="majority"&&(t=Zt(t));const{pixels:i,mask:o,bandMasks:c,pixelType:h}=t,r=t.width,s=t.height,u=_.getPixelArrayConstructor(h),p=i.length,{width:f,height:d}=e;let m=!1;for(let U=0;U<n.length;U+=3)n[U]===-1&&n[U+1]===-1&&n[U+2]===-1&&(m=!0);const{offsets_x:g,offsets_y:y,offsets_xi:M,offsets_yi:w,gridWidth:k}=Bt({width:r,height:s},e,n,l,a==="majority"?.5:0);let x;const A=(U,I,C,S)=>{const B=U instanceof Float32Array||U instanceof Float64Array?0:.5;for(let F=0;F<d;F++){x=F*k;for(let V=0;V<f;V++){if(g[x]<0||y[x]<0)U[F*f+V]=0;else if(S)U[F*f+V]=I[M[x]+w[x]*r];else{const E=Math.floor(g[x]),W=Math.floor(y[x]),L=Math.ceil(g[x]),G=Math.ceil(y[x]),z=g[x]-E,H=y[x]-W;if(!C||C[E+W*r]&&C[L+W*r]&&C[E+G*r]&&C[L+G*r]){const et=(1-z)*I[E+W*r]+z*I[L+W*r],Q=(1-z)*I[E+G*r]+z*I[L+G*r];U[F*f+V]=(1-H)*et+H*Q+B}else U[F*f+V]=I[M[x]+w[x]*r]}x++}}},b=[];let v;const $=c?.length===p,P=[];for(let U=0;U<p;U++){if($){const I=new Uint8Array(f*d);A(I,c[U],c[U],!0),P.push(I)}v=new u(f*d),A(v,i[U],$?c[U]:o,a==="nearest"||a==="majority"),b.push(v)}const T=new _({width:f,height:d,pixelType:h,pixels:b,bandMasks:$?P:void 0});if(o!=null)T.mask=new Uint8Array(f*d),A(T.mask,o,o,!0);else if(m){T.mask=new Uint8Array(f*d);for(let U=0;U<f*d;U++)T.mask[U]=g[U]<0||y[U]<0?0:1}return T.updateStatistics(),T}const tt=new Map;tt.set("meter-per-second",1),tt.set("kilometer-per-hour",.277778),tt.set("knots",.514444),tt.set("feet-per-second",.3048),tt.set("mile-per-hour",.44704);const pt=180/Math.PI,dt=5,at=new jt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function mt(t,e){return tt.get(t)/tt.get(e)||1}function St(t){return(450-t)%360}function Ft(t,e="geographic"){const[n,l]=t,a=Math.sqrt(n*n+l*l);let i=Math.atan2(l,n)*pt;return i=(360+i)%360,e==="geographic"&&(i=St(i)),[a,i]}function Ct(t,e="geographic"){let n=t[1];e==="geographic"&&(n=St(n)),n%=360;const l=t[0];return[l*Math.cos(n/pt),l*Math.sin(n/pt)]}function De(t,e,n,l="geographic"){if(!R(t)||n==null)return t;const a=e==="vector-magdir"?t.clone():Mt(t,e),i=a.pixels[1];for(let o=0;o<i.length;o++)i[o]=l==="geographic"?(i[o]+n[o]+270)%360:(i[o]+360-n[o])%360;return e==="vector-magdir"?a:Mt(a,"vector-magdir")}function Mt(t,e,n="geographic",l=1){if(!R(t))return t;const{pixels:a,width:i,height:o}=t,c=i*o,h=a[0],r=a[1],s=t.pixelType.startsWith("f")?t.pixelType:"f32",u=_.createEmptyBand(s,c),p=_.createEmptyBand(s,c);let f=0;for(let m=0;m<o;m++)for(let g=0;g<i;g++)e==="vector-uv"?([u[f],p[f]]=Ft([h[f],r[f]],n),u[f]*=l):([u[f],p[f]]=Ct([h[f],r[f]],n),u[f]*=l,p[f]*=l),f++;const d=new _({pixelType:s,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,p]});return d.updateStatistics(),d}function Re(t,e,n=1){if(n===1||!R(t))return t;const l=t.clone(),{pixels:a,width:i,height:o}=l,c=a[0],h=a[1];let r=0;for(let s=0;s<o;s++)for(let u=0;u<i;u++)e==="vector-uv"?(c[r]*=n,h[r]*=n):c[r]*=n,r++;return l.updateStatistics(),l}function Le(t,e,n,l,a){if(a==null||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/l),height:Math.round(n/l),resolution:t.width/e};const i=a.xmin,o=a.ymax,c=(t.xmax-t.xmin)/e*l,h=(t.ymax-t.ymin)/n*l,r=(c+h)/2;return t.xmin=i+Math.floor((t.xmin-i)/c)*c,t.xmax=i+Math.ceil((t.xmax-i)/c)*c,t.ymin=o+Math.floor((t.ymin-o)/h)*h,t.ymax=o+Math.ceil((t.ymax-o)/h)*h,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/h),resolution:r}}const te=Vt(0,0,0);function Vt(t=0,e=0,n=Math.PI,l=!0){l&&(n=(2*Math.PI-n)%(2*Math.PI));const a=l?-1:1,i=13*a,o=-7*a,c=-2*a,h=-16*a,r=21.75,[s,u]=j(0,e+i,n,r),[p,f]=j(t-5.5,e+o,n,r),[d,m]=j(t+5.5,e+o,n,r),[g,y]=j(t-1.5,e+c,n,r),[M,w]=j(t+1.5,e+c,n,r),[k,x]=j(t-1.5,e+h,n,r),[A,b]=j(t+1.5,e+h,n,r);return[s,u,p,f,g,y,M,w,d,m,k,x,A,b]}function ee(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const l=10,a=n?-1:1,i=5*a,o=20*a,c=25*a,h=45,r=0,s=0,u=2,p=0,f=u*a,d=n?1:-1,m=l/2*d;let[g,y]=[r+m,s-o],[M,w]=[g+u*d,y],[k,x]=[M-p*d,w+f],[A,b]=[r-m,s-c],[v,$]=[A+p*d,b-f],P=Math.ceil(t/dt),T=Math.floor(P/10);P-=8*T;const U=[],I=[];for(let z=0;z<P/2;z++,T--){T<=0&&P%2==1&&z===(P-1)/2&&(A=r,v=A+p*d,b=(b+y)/2,$=b-f);const[H,et]=j(A,b,e,h);if(T>0){const[Q,it]=j(M,b,e,h),[st,D]=j(g,y,e,h);U.push(Q),U.push(it),U.push(H),U.push(et),U.push(st),U.push(D)}else{const[Q,it]=j(M,w,e,h),[st,D]=j(k,x,e,h),[N,ct]=j(v,$,e,h);I.push(H),I.push(et),I.push(N),I.push(ct),I.push(st),I.push(D),I.push(Q),I.push(it)}b+=i,y+=i,w+=i,x+=i,$+=i}const[C,S]=j(r+m,s+o,e,h),B=(l/2+u)*d,[F,V]=j(r+B,s+o,e,h),[E,W]=j(r+m,s-c,e,h),[L,G]=j(r+B,s-c,e,h);return{pennants:U,barbs:I,shaft:[C,S,F,V,E,W,L,G]}}function j(t,e,n,l=1){const a=Math.sqrt(t*t+e*e)/l,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[a,(2*Math.PI+i-n)%(2*Math.PI)]}const ot=[0,1,3,6,10,16,21,27,33,40,47,55,63],ne=[0,.5,1,1.5,2],ie=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,l){const a=mt(l||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*a)break}else if(t<=e[i]*a)break;return Math.min(i-1,e.length-2)}function se(t,e,n,l,a){let i=0;switch(e){case"beaufort_kn":i=Y(t,ot,"knots",n);break;case"beaufort_km":i=Y(t,ot,"kilometer-per-hour",n);break;case"beaufort_ft":i=Y(t,ot,"feet-per-second",n);break;case"beaufort_m":i=Y(t,ot,"meter-per-second",n);break;case"classified_arrow":i=Y(t,a??[],l,n);break;case"ocean_current_m":i=Y(t,ne,"meter-per-second",n);break;case"ocean_current_kn":i=Y(t,ie,"knots",n)}return i}function le(t,e){const{style:n,inputUnit:l,outputUnit:a,breakValues:i}=e,o=at.fromJSON(l),c=at.fromJSON(a),h=7*6,r=15;let s=0,u=0;const{width:p,height:f,mask:d}=t,m=t.pixels[0],g=t.pixels[1],y=d!=null?d.filter(x=>x>0).length:p*f,M=new Float32Array(y*h),w=new Uint32Array(r*y),k=e.invertDirection?Vt(0,0,0,!1):te;for(let x=0;x<f;x++)for(let A=0;A<p;A++){const b=x*p+A;if(!d||d[x*p+A]){const v=(g[b]+360)%360/180*Math.PI,$=se(m[b],n,o,c,i);for(let T=0;T<k.length;T+=2)M[s++]=(A+.5)/p,M[s++]=(x+.5)/f,M[s++]=k[T],M[s++]=k[T+1]+v,M[s++]=$,M[s++]=m[b];const P=7*(s/h-1);w[u++]=P,w[u++]=P+1,w[u++]=P+2,w[u++]=P+0,w[u++]=P+4,w[u++]=P+3,w[u++]=P+0,w[u++]=P+2,w[u++]=P+3,w[u++]=P+2,w[u++]=P+5,w[u++]=P+3,w[u++]=P+5,w[u++]=P+6,w[u++]=P+3}}return{vertexData:M,indexData:w}}const ft=[];function re(t,e){if(ft.length===0)for(let f=0;f<30;f++)ft.push(ee(5*f,0,!e.invertDirection));const n=mt(at.fromJSON(e.inputUnit),"knots"),{width:l,height:a,mask:i}=t,o=t.pixels[0],c=t.pixels[1],h=6,r=[],s=[];let u=0,p=0;for(let f=0;f<a;f++)for(let d=0;d<l;d++){const m=f*l+d,g=o[m]*n;if((!i||i[f*l+d])&&g>=dt){const y=(c[m]+360)%360/180*Math.PI,{pennants:M,barbs:w,shaft:k}=ft[Math.min(Math.floor(g/5),29)];if(M.length+w.length===0)continue;let x=r.length/h;const A=(d+.5)/l,b=(f+.5)/a;for(let v=0;v<M.length;v+=2)r[u++]=A,r[u++]=b,r[u++]=M[v],r[u++]=M[v+1]+y,r[u++]=0,r[u++]=g;for(let v=0;v<w.length;v+=2)r[u++]=A,r[u++]=b,r[u++]=w[v],r[u++]=w[v+1]+y,r[u++]=0,r[u++]=g;for(let v=0;v<k.length;v+=2)r[u++]=A,r[u++]=b,r[u++]=k[v],r[u++]=k[v+1]+y,r[u++]=0,r[u++]=g;for(let v=0;v<M.length/6;v++)s[p++]=x,s[p++]=x+1,s[p++]=x+2,x+=3;for(let v=0;v<w.length/8;v++)s[p++]=x,s[p++]=x+1,s[p++]=x+2,s[p++]=x+1,s[p++]=x+2,s[p++]=x+3,x+=4;s[p++]=x+0,s[p++]=x+1,s[p++]=x+2,s[p++]=x+1,s[p++]=x+3,s[p++]=x+2,x+=4}}return{vertexData:new Float32Array(r),indexData:new Uint32Array(s)}}function oe(t,e){let l=0,a=0;const{width:i,height:o,mask:c}=t,h=t.pixels[0],r=[],s=[],u=mt(at.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?dt:Number.MAX_VALUE;for(let f=0;f<o;f++)for(let d=0;d<i;d++){const m=h[f*i+d]*u;if((!c||c[f*i+d])&&m<p){for(let y=0;y<4;y++)r[l++]=(d+.5)/i,r[l++]=(f+.5)/o,r[l++]=y<2?-.5:.5,r[l++]=y%2==0?-.5:.5,r[l++]=0,r[l++]=m;const g=4*(l/24-1);s[a++]=g,s[a++]=g+1,s[a++]=g+2,s[a++]=g+1,s[a++]=g+2,s[a++]=g+3}}return{vertexData:new Float32Array(r),indexData:new Uint32Array(s)}}function Ne(t,e){return e.style==="simple_scalar"?oe(t,e):e.style==="wind_speed"?re(t,e):le(t,e)}function Ee(t,e,n,l=[0,0],a=.5){const{width:i,height:o,mask:c}=t,[h,r]=t.pixels,[s,u]=l,p=Math.round((i-s)/n),f=Math.round((o-u)/n),d=p*f,m=new Float32Array(d),g=new Float32Array(d),y=new Uint8Array(d),M=e==="vector-uv";for(let k=0;k<f;k++)for(let x=0;x<p;x++){let A=0;const b=k*p+x,v=Math.max(0,k*n+u),$=Math.max(0,x*n+s),P=Math.min(o,v+n),T=Math.min(i,$+n);for(let U=v;U<P;U++)for(let I=$;I<T;I++){const C=U*i+I;if(!c||c[C]){A++;const S=M?[h[C],r[C]]:[h[C],(360+r[C])%360],[B,F]=M?S:Ct(S);m[b]+=B,g[b]+=F}}if(A>=(P-v)*(T-$)*(1-a)){y[b]=1;const[U,I]=Ft([m[b]/A,g[b]/A]);m[b]=U,g[b]=I}else y[b]=0,m[b]=0,g[b]=0}const w=new _({width:p,height:f,pixels:[m,g],mask:y});return w.updateStatistics(),w}const J=()=>Z.getLogger("esri.views.2d.engine.flow.dataUtils"),ae=10;async function je(t,e,n,l){const a=performance.now(),i=he(e,n),o=performance.now(),c=ue(e,i,n.width,n.height),h=performance.now(),r=pe(c,!0),s=performance.now(),u=t==="Streamlines"?de(r,ae):me(r),p=performance.now();return nt("esri-2d-profiler")&&(J().info("I.1","_createFlowFieldFromData (ms)",Math.round(o-a)),J().info("I.2","_getStreamlines (ms)",Math.round(h-o)),J().info("I.3","createAnimatedLinesData (ms)",Math.round(s-h)),J().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-s)),J().info("I.5","createFlowMesh (ms)",Math.round(p-a)),J().info("I.6","Mesh size (bytes)",u.vertexData.buffer.byteLength+u.indexData.buffer.byteLength)),await Promise.resolve(),Ot(l),u}function he(t,e){const n=fe(e.data,e.width,e.height,t.smoothing);return t.interpolate?(l,a)=>{const i=Math.floor(l),o=Math.floor(a);if(i<0||i>=e.width)return[0,0];if(o<0||o>=e.height)return[0,0];const c=l-i,h=a-o,r=i,s=o,u=i<e.width-1?i+1:i,p=o<e.height-1?o+1:o,f=n[2*(s*e.width+r)],d=n[2*(s*e.width+u)],m=n[2*(p*e.width+r)],g=n[2*(p*e.width+u)],y=n[2*(s*e.width+r)+1],M=n[2*(s*e.width+u)+1];return[(f*(1-h)+m*h)*(1-c)+(d*(1-h)+g*h)*c,(y*(1-h)+n[2*(p*e.width+r)+1]*h)*(1-c)+(M*(1-h)+n[2*(p*e.width+u)+1]*h)*c]}:(l,a)=>{const i=Math.round(l),o=Math.round(a);return i<0||i>=e.width||o<0||o>=e.height?[0,0]:[n[2*(o*e.width+i)],n[2*(o*e.width+i)+1]]}}function ce(t,e,n,l,a,i,o,c,h){const r=[];let s=n,u=l,p=0,[f,d]=e(s,u);f*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(f*f+d*d);let g,y;r.push({x:s,y:u,t:p,speed:m});for(let M=0;M<t.verticesPerLine;M++){let[w,k]=e(s,u);w*=t.velocityScale,k*=t.velocityScale;const x=Math.sqrt(w*w+k*k);if(x<t.minSpeedThreshold)return r;const A=w/x,b=k/x;if(s+=A*t.segmentLength,u+=b*t.segmentLength,p+=t.segmentLength/x,Math.acos(A*g+b*y)>t.maxTurnAngle)return r;if(t.collisions){const v=Math.round(s*h),$=Math.round(u*h);if(v<0||v>o-1||$<0||$>c-1)return r;const P=i[$*o+v];if(P!==-1&&P!==a)return r;i[$*o+v]=a}r.push({x:s,y:u,t:p,speed:x}),g=A,y=b}return r}function ue(t,e,n,l){const a=[],i=new vt,o=1/Math.max(t.lineCollisionWidth,1),c=Math.round(n*o),h=Math.round(l*o),r=new Int32Array(c*h);for(let u=0;u<r.length;u++)r[u]=-1;const s=[];for(let u=0;u<l;u+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)s.push({x:p,y:u,sort:i.getFloat()});s.sort((u,p)=>u.sort-p.sort);for(const{x:u,y:p}of s)if(i.getFloat()<t.density){const f=ce(t,e,u,p,a.length,r,c,h,o);if(f.length<2)continue;a.push(f)}return a}function fe(t,e,n,l){if(l===0)return t;const a=Math.round(3*l),i=new Array(2*a+1);let o=0;for(let r=-a;r<=a;r++){const s=Math.exp(-r*r/(l*l));i[r+a]=s,o+=s}for(let r=-a;r<=a;r++)i[r+a]/=o;const c=new Float32Array(t.length);for(let r=0;r<n;r++)for(let s=0;s<e;s++){let u=0,p=0;for(let f=-a;f<=a;f++){if(s+f<0||s+f>=e)continue;const d=i[f+a];u+=d*t[2*(r*e+(s+f))],p+=d*t[2*(r*e+(s+f))+1]}c[2*(r*e+s)]=u,c[2*(r*e+s)+1]=p}const h=new Float32Array(t.length);for(let r=0;r<e;r++)for(let s=0;s<n;s++){let u=0,p=0;for(let f=-a;f<=a;f++){if(s+f<0||s+f>=n)continue;const d=i[f+a];u+=d*c[2*((s+f)*e+r)],p+=d*c[2*((s+f)*e+r)+1]}h[2*(s*e+r)]=u,h[2*(s*e+r)+1]=p}return h}function pe(t,e){const n=new vt,l=t.reduce((h,r)=>h+r.length,0),a=new Float32Array(4*l),i=new Array(t.length);let o=0,c=0;for(const h of t){const r=o;for(const s of h)a[4*o]=s.x,a[4*o+1]=s.y,a[4*o+2]=s.t,a[4*o+3]=s.speed,o++;i[c++]={startVertex:r,numberOfVertices:h.length,totalTime:h[h.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:a,lineDescriptors:i}}function de(t,e){const{lineVertices:l,lineDescriptors:a}=t;let i=0,o=0;for(const f of a)i+=2*f.numberOfVertices,o+=6*(f.numberOfVertices-1);const c=new Float32Array(i*9),h=new Uint32Array(o);let r=0,s=0;function u(){h[s++]=r-2,h[s++]=r,h[s++]=r-1,h[s++]=r,h[s++]=r+1,h[s++]=r-1}function p(f,d,m,g,y,M,w,k){const x=r*9;let A=0;c[x+A++]=f,c[x+A++]=d,c[x+A++]=1,c[x+A++]=m,c[x+A++]=M,c[x+A++]=w,c[x+A++]=g/2,c[x+A++]=y/2,c[x+A++]=k,r++,c[x+A++]=f,c[x+A++]=d,c[x+A++]=-1,c[x+A++]=m,c[x+A++]=M,c[x+A++]=w,c[x+A++]=-g/2,c[x+A++]=-y/2,c[x+A++]=k,r++}for(const f of a){const{totalTime:d,timeSeed:m}=f;let g=null,y=null,M=null,w=null,k=null,x=null;for(let A=0;A<f.numberOfVertices;A++){const b=l[4*(f.startVertex+A)],v=l[4*(f.startVertex+A)+1],$=l[4*(f.startVertex+A)+2],P=l[4*(f.startVertex+A)+3];let T=null,U=null,I=null,C=null;if(A>0){T=b-g,U=v-y;const S=Math.sqrt(T*T+U*U);if(T/=S,U/=S,A>1){let B=T+k,F=U+x;const V=Math.sqrt(B*B+F*F);B/=V,F/=V;const E=Math.min(1/(B*T+F*U),e);B*=E,F*=E,I=-F,C=B}else I=-U,C=T;I!==null&&C!==null&&(p(g,y,M,I,C,d,m,P),u())}g=b,y=v,M=$,k=T,x=U,w=P}p(g,y,M,-x,k,d,m,w)}return{vertexData:c,indexData:h}}function me(t){const{lineVertices:a,lineDescriptors:i}=t;let o=0,c=0;for(const S of i){const B=S.numberOfVertices-1;o+=4*B*2,c+=6*B*2}const h=new Float32Array(o*16),r=new Uint32Array(c);let s,u,p,f,d,m,g,y,M,w,k,x,A,b,v=0,$=0;function P(){r[$++]=v-8,r[$++]=v-7,r[$++]=v-6,r[$++]=v-7,r[$++]=v-5,r[$++]=v-6,r[$++]=v-4,r[$++]=v-3,r[$++]=v-2,r[$++]=v-3,r[$++]=v-1,r[$++]=v-2}function T(S,B,F,V,E,W,L,G,z,H,et,Q,it,st){const D=v*16;let N=0;for(const ct of[1,2])for(const _t of[1,2,3,4])h[D+N++]=S,h[D+N++]=B,h[D+N++]=F,h[D+N++]=V,h[D+N++]=L,h[D+N++]=G,h[D+N++]=z,h[D+N++]=H,h[D+N++]=ct,h[D+N++]=_t,h[D+N++]=it,h[D+N++]=st,h[D+N++]=E/2,h[D+N++]=W/2,h[D+N++]=et/2,h[D+N++]=Q/2,v++}function U(S,B){let F=M+k,V=w+x;const E=Math.sqrt(F*F+V*V);F/=E,V/=E;const W=M*F+w*V;F/=W,V/=W;let L=k+A,G=x+b;const z=Math.sqrt(L*L+G*G);L/=z,G/=z;const H=k*L+x*G;L/=H,G/=H,T(s,u,p,f,-V,F,d,m,g,y,-G,L,S,B),P()}function I(S,B,F,V,E,W){if(M=k,w=x,k=A,x=b,M==null&&w==null&&(M=k,w=x),d!=null&&m!=null){A=S-d,b=B-m;const L=Math.sqrt(A*A+b*b);A/=L,b/=L}M!=null&&w!=null&&U(E,W),s=d,u=m,p=g,f=y,d=S,m=B,g=F,y=V}function C(S,B){M=k,w=x,k=A,x=b,M==null&&w==null&&(M=k,w=x),M!=null&&w!=null&&U(S,B)}for(const S of i){s=null,u=null,p=null,f=null,d=null,m=null,g=null,y=null,M=null,w=null,k=null,x=null,A=null,b=null;const{totalTime:B,timeSeed:F}=S;for(let V=0;V<S.numberOfVertices;V++)I(a[4*(S.startVertex+V)],a[4*(S.startVertex+V)+1],a[4*(S.startVertex+V)+2],a[4*(S.startVertex+V)+3],B,F);C(B,F)}return{vertexData:h,indexData:r}}function At(t,e){const n=e.pixels,{width:l,height:a}=e,i=new Float32Array(l*a*2),o=e.mask||new Uint8Array(l*a*2);if(e.mask||o.fill(255),t==="vector-uv")for(let c=0;c<l*a;c++)i[2*c]=n[0][c],i[2*c+1]=-n[1][c];else if(t==="vector-magdir")for(let c=0;c<l*a;c++){const h=n[0][c],r=qt(n[1][c]),s=Math.cos(r-Math.PI/2),u=Math.sin(r-Math.PI/2);i[2*c]=s*h,i[2*c+1]=u*h}return{data:i,mask:o,width:l,height:a}}async function Oe(t,e,n,l,a,i){const o=performance.now(),c=Gt(e.spatialReference);if(!c){const k=await bt(t,e,n,l,a,i);return nt("esri-2d-profiler")&&J().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),nt("esri-2d-profiler")&&J().info("I.9","Number of parts",1),k}const[h,r]=c.valid,s=r-h,u=Math.ceil(e.width/s),p=e.width/u,f=Math.round(n/u);let d=e.xmin;const m=[],g=performance.now();for(let k=0;k<u;k++){const x=new Wt({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(bt(t,x,f,l,a,i)),d+=p}const y=await Promise.all(m);nt("esri-2d-profiler")&&J().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),nt("esri-2d-profiler")&&J().info("I.9","Number of parts",y.length);const M={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let w=0;for(const k of y){for(let x=0;x<k.height;x++)for(let A=0;A<k.width;A++)w+A>=n||(M.data[2*(x*n+w+A)]=k.data[2*(x*k.width+A)],M.data[2*(x*n+w+A)+1]=k.data[2*(x*k.width+A)+1],M.mask[x*n+w+A]=k.mask[x*k.width+A]);w+=k.width}return nt("esri-2d-profiler")&&J().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),M}async function bt(t,e,n,l,a,i){const o={requestProjectedLocalDirections:!0,signal:i};if(a!=null&&(o.timeExtent=a),t.type==="imagery"){await t.load({signal:i});const r=t.rasterInfo.dataType,s=await t.fetchImage(e,n,l,o);return s?.pixelData?.pixelBlock==null?{data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l}:At(r,s.pixelData.pixelBlock)}await t.load({signal:i});const c=t.serviceRasterInfo.dataType,h=await t.fetchPixels(e,n,l,o);return h?.pixelBlock==null?{data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l}:At(c,h.pixelBlock)}export{Ft as A,at as B,mt as C,_e as D,Ce as E,Re as F,Be as M,Ve as R,Ee as S,Se as T,Ne as U,Fe as W,oe as _,_ as a,Qt as b,Ut as c,ht as d,Ue as e,Mt as f,Oe as g,be as h,ve as i,Ae as j,we as k,ye as l,Le as m,xt as n,R as o,xe as p,gt as q,Me as r,je as s,ke as t,De as u,$e as v,Ie as w,Pt as x,Te as y,Pe as z};
