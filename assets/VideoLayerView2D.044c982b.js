import{a0 as j,as as k,ak as K,a5 as x,v as X,r as B,cR as _,bK as J,ae as $,aj as R,bS as Q,gC as Z,d7 as w,bV as ee,bU as U,bT as q,a2 as W,a4 as V,aa as b,ab as M,ac as te}from"./index.7eb0daf2.js";import{i as F}from"./TelemetryDisplay.a0f270e7.js";import{f as ie}from"./OverlayContainer.8c088d2d.js";import{s as re}from"./Container.461c0161.js";import{a as se,f as oe,y as ne}from"./LayerView.649e11dc.js";import{c as H}from"./Program.9a92c5ff.js";import{D as ae,F as z,E as le}from"./enums.8929356b.js";import{f as he,c as me}from"./Texture.7423fe29.js";import{o as pe}from"./ProgramTemplate.7599c672.js";import{t as ye}from"./GraphicContainer.abe27126.js";import{V as ce}from"./GraphicsView2D.73f18369.js";import"./vec3f32.788be850.js";import"./WGLContainer.a2728de7.js";import"./definitions.a3a54ed1.js";import"./LabelMetric.267a8b18.js";import"./enums.abef80de.js";import"./VertexElementDescriptor.c76e1b24.js";import"./StyleDefinition.e031dcf6.js";import"./config.8224a140.js";import"./earcut.dc9d94eb.js";import"./featureConversionUtils.c6dfa488.js";import"./OptimizedFeature.32c00f5f.js";import"./OptimizedFeatureSet.6fd3bcb1.js";import"./highlightReasons.c3e7cabb.js";import"./layerViewUtils.8a0a28d0.js";import"./AGraphicContainer.c019acec.js";import"./TechniqueInstance.254dd815.js";import"./UpdateTracking2D.571bdffb.js";import"./BidiEngine.5f10619c.js";import"./GeometryUtils.c6f9b045.js";import"./utils.dbb84a38.js";import"./Rect.ab45bd96.js";import"./defaults.e5a1167a.js";import"./defaultsJSON.ba72df2f.js";import"./BindType.597c7f67.js";import"./Util.00c6201e.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./TileContainer.419fd15d.js";import"./FeatureCommandQueue.f16cbaa3.js";import"./constants.344a1358.js";import"./FieldsIndex.333d0734.js";import"./UnknownTimeZone.4756be49.js";import"./OverrideHelper.b5d99b26.js";import"./colorUtils.085072a2.js";import"./quantizationUtils.fe6b1e6e.js";import"./AttributeStore.38266bd6.js";import"./labelUtils.37b9d8d8.js";import"./TimeOnly.5d28261e.js";import"./timeSupport.393bd0ba.js";import"./json.20588c22.js";import"./diffUtils.080c04bc.js";import"./normalizeUtilsSync.71a1cb90.js";const C=2;class de extends re{constructor(e){super(),this.element=e,this._handles=new j,this.isWrapAround=!1,this.perspectiveTransform=k(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(K(()=>this.element,()=>{const t=this.element;this.ready(),t&&this._handles.add(X(t,"play",()=>this.requestRender()))},x))}getMesh(e){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=B(this.texture),this._vao&&(this._vao.dispose(),this._vao=null),this._vbo&&(this._vbo.dispose(),this._vbo=null),this.texture&&(this.texture.dispose(),this.texture=null)}get textureSize(){if(!this.texture)return[1,1];const e=this.texture.descriptor;return[e.width,e.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const t=this.element;if(t==null)return;const{context:s}=e,{videoWidth:i,videoHeight:r}=t;if(i!==0&&r!==0){if(this.texture)t.paused||this.texture.setData(t);else{const o=new he;o.wrapMode=ae.CLAMP_TO_EDGE,o.preMultiplyAlpha=!0,o.width=i,o.height=r,this.texture=new me(s,o,t)}t.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(e)}}_createTransforms(){return null}updateDrawCoords(e,t,s,i){const r=this.element,o=this._getFrameInfo();if(!r||!o)return;this._initializeData(e,o,s);const{controlPoints:a,horizon:h}=o,m=Math.sqrt(a.length),c=m,{x:n,y:p}=e,u=this._vertices,T=a[0],G=a[m-1],N=a[(c-1)*m],Y=a[(c-1)*m+m-1],O=_(h?h[0].mapPoint:T.mapPoint,s),P=_(h?h[1].mapPoint:G.mapPoint,s),f=_(N.mapPoint,s),D=_(Y.mapPoint,s);this.clipGeometry=h?new se({geometry:J.fromJSON({rings:[[[f.x,f.y],[D.x,D.y],[P.x,P.y],[O.x,O.y],[f.x,f.y]]],spatialReference:s})}):null;for(let y=0;y<a.length;y++){const L=a[y],{sourcePoint:S,mapPoint:A}=L;if(S==null||A==null)continue;const v=_(A,s);u[y*C+0]=v.x-n,u[y*C+1]=v.y-p}let E=t;if(i){const y=Math.min(O.x,P.x,f.x,D.x),L=Math.max(O.x,P.x,f.x,D.x),{worldWidth:S,xBounds:A}=i,[v,I]=A;y<v&&L>v?E=S:L>I&&y<I&&(E=-S)}this.wrapAroundShift=E,this.isWrapAround=E!==0}getVAO(e,t,s){if(this._vertices==null)return null;const i=this._vertices;if(this._vao)this._vbo.setData(i);else{this._vbo=H.createVertex(e,z.DYNAMIC_DRAW,i);const r=H.createVertex(e,z.STATIC_DRAW,this._texCoords);this._ibo=H.createIndex(e,z.DYNAMIC_DRAW,this._indices),this._vao=new pe(e,s,t,{geometry:this._vbo,tex:r},this._ibo)}return this._vao}draw(e){e.drawElements(le.TRIANGLE_STRIP,this._indices.length,e.gl.UNSIGNED_SHORT,0)}_initializeData(e,t,s){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:i}=t,r=Math.sqrt(i.length),o=r,a=new Float32Array(C*i.length),h=new Uint16Array(2*i.length);for(let n=0;n<i.length;n++){const p=i[n],{sourcePoint:u,mapPoint:T}=p;if(u==null||T==null)continue;const G=_(T,s);a[n*C+0]=G.x-e.x,a[n*C+1]=G.y-e.y,h[2*n+0]=u.x,h[2*n+1]=u.y}const m=new Uint16Array(o*r+(o-2)*(r+2));let c=0;for(let n=0;n<o;n++){for(let p=0;p<r;p++)m[c++]=n*r+p,m[c++]=(n+1)*r+p;n<o-2&&(m[c++]=(n+1)*r+(r-1),m[c++]=(n+1)*r)}this._vertices=a,this._texCoords=h,this._indices=m}_getFrameInfo(){if(!this.groundControlPoints)return null;const e=this._getFrameControlPoints(),t=this.frameHorizonPoints;let s=null;if(t){const i=t.startX,r=t.startY,o=t.endX,a=t.endY;s=[{sourcePoint:$(i,r),mapPoint:new R(t.startLongitude,t.startLatitude)},{sourcePoint:$(o,a),mapPoint:new R(t.endLongitude,t.endLatitude)}]}return{controlPoints:e,horizon:s}}_getFrameControlPoints(){const e=this.groundControlPoints,t=e?.length;if(!t)return[];const s=new Array(t);for(let i=0;i<t;i++){const{x:r,y:o,lat:a,lon:h}=e[i];s[i]={sourcePoint:$(r,-o),mapPoint:new R(h,a)}}return s}}const g=new Q([255,127,0]);let d=class extends oe(ne){constructor(){super(...arguments),this._graphicsLayer=new Z,this._frameOutlineGraphic=new w({symbol:new ee({outline:{type:"simple-line",color:g}})}),this._sensorTrailGraphic=new w({symbol:new U({color:g})}),this._lineOfSightGraphic=new w({symbol:new U({color:g})}),this._sensorLocationGraphic=new w({symbol:new q({color:g})}),this._frameCenterGraphic=new w({symbol:new q({color:g})}),this._overlayContainer=null,this.layer=null,this.symbolColor=g,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=W(this._graphicsLayer)}initialize(){this.addHandles(V(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},x)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new F({frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this._overlayContainer=new ie,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new ce({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new ye(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([V(()=>[this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight],()=>this._updateVisibleTelemetryElements(),x),V(()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight],()=>this._updateGraphicGeometries(),x)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=W(this.graphicsView)}supportsSpatialReference(l){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(l){this.graphicsView.processUpdate(l)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:l}=this.layer,{visibleTelemetryElements:e}=this;l&&e&&(e.frameOutline&&l.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,e.sensorTrail&&l.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,e.lineOfSight&&l.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,e.sensorLocation&&l.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,e.frameCenter&&l.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const l=new de(this.layer.videoElement);this.addAttachHandles([V(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints],()=>{l.frameHorizonPoints=this.layer.frameHorizonPoints,l.groundControlPoints=this.layer.groundControlPoints},x)]),this._overlayContainer.addChild(l),this.view.stage.requestRender()}};b([M()],d.prototype,"graphicsView",void 0),b([M()],d.prototype,"layer",void 0),b([M()],d.prototype,"symbolColor",void 0),b([M({type:F})],d.prototype,"visibleTelemetryElements",void 0),d=b([te("esri.views.2d.layers.VideoLayerView2D")],d);const dt=d;export{dt as default};
