import{y as Be}from"./colorUtils.085072a2.js";import{aa as c,ab as p,ac as P,dW as $e,d6 as os,aT as ot,eG as J,e as L,ej as vs,c2 as As,ed as St,dY as Mt,ei as tt,ix as jt,s as Ot,aj as je,cz as Ts}from"./index.7eb0daf2.js";import{a as b,k as H,d as it,o as Ps,r as Fs,i as Ie,n as is,p as Jt,q as as,w as Ns,t as Q,v as $s,y as Is,x as Cs,z as Rs}from"./dataUtils.a1eaa611.js";import{a as ks,u as _s,b as Wt,C as Bs,w as us,B as Se,c as js,l as Ss,n as Zt,f as Ms,d as Os,p as Yt,e as Ds,M as Gs,x as Es}from"./RasterSymbolizer.f97d5f6c.js";import{m as zs,p as ls}from"./colorRamps.272b71a1.js";let qt=class extends $e{constructor(){super(...arguments),this.raster=void 0}};c([p({json:{write:!0}})],qt.prototype,"raster",void 0),qt=c([P("esri.layers.support.rasterFunctions.BaseFunctionArguments")],qt);const D=qt;var Qt;let Pt=Qt=class extends D{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new Qt({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([p({json:{write:!0}})],Pt.prototype,"operation",void 0),c([p({json:{write:!0}})],Pt.prototype,"raster2",void 0),c([p({readOnly:!0})],Pt.prototype,"rasters",null),Pt=Qt=c([P("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],Pt);const Vs=Pt,Us=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let O=class extends $e{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:n}=t;let s=n.rasters||n.raster&&[n.raster];for(;s?.length;){e.unshift(...s);const o=[];for(let u=0;u<s.length;u++){const{parameters:l}=s[u],m=l.rasters||l.raster&&[l.raster];m?.length&&o.push(...m)}s=o}for(let o=e.length-1;o>=0;o--)e[o].isNoopProcess&&e.splice(o,1);let r=!1;for(let o=0;o<e.length;o++){const u=e[o];u.id=e.length-o-1;const{rasters:l}=u.parameters;r=r||l!=null&&l.length>1}const i=e.some(({name:o})=>Us.has(o.toLowerCase())),{rawSourceRasterInfos:a}=this;return{functions:e,hasBranches:r,hasFocalFunction:i,isSourceSingleBand:a?.[0]?.bandCount===1}}bind(t,e=!1,n=-1){this.id=n+1;const s=this._getRasterValues();let r=!0;for(let i=0;i<s.length;i++){const a=s[i];if(a!=null&&this._isRasterFunctionValue(a)){const o=a.bind(t,e,this.id+i);if(!o.success)return this._bindingResult=o,o;r=r&&o.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),n=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(s=>this._readRasterValue(s,t));return this._processPixels({...t,pixelBlocks:n})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const r=t.map(a=>a.processInputBandIds()[0]);this.rawInputBandIds=r,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((a,o)=>a!==o);const i=t.filter(a=>a.functionName==="ExtractBand");return i.length&&i.forEach((a,o)=>{a.isInputBandIdsSwizzled=!0,a.swizzledBandSelection=[o,o,o]}),this.rawInputBandIds}const n=t[0];if(n){if(e=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:r}=this.sourceRasterInfos[0];for(let i=0;i<r;i++)e.push(i)}const s=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=s.some((r,i)=>r!==i),this.rawInputBandIds=s,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:n}=this.functionArguments;return n&&Array.isArray(n)&&n.length?(t.rasters=n.map(s=>this._isRasterFunctionValue(s)?s.getWebGLProcessorDefinition():typeof s=="number"?{name:"Constant",parameters:{value:s},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:s},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(s=>s!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:n}=this.functionArguments;if(n&&Array.isArray(n)&&n.length)n.forEach(s=>{if(this._isRasterFunctionValue(s)){const r=s.getClippingGeometries();t.push(...r)}});else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:n,rasterIds:s}=t;if(e.length===0)return n;const r=e.map(a=>a&&typeof a=="object"&&"bind"in a&&a.rasterInfo?a.rasterInfo:typeof a=="string"&&s.includes(a)?n[s.indexOf(a)]:typeof a!="number"?n[0]:void 0),i=r.find(a=>a)??n[0];return r.forEach((a,o)=>{a===void 0&&(r[o]=i)}),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],n=[]){for(let s=0;s<t.sourceRasters.length;s++){const r=t.sourceRasters[s];if(typeof r!="number")if("bind"in r)this._getPrimaryRasters(r,e,n);else{const i=r,a=this._getPrimaryRasterId(i);if(a==null)continue;n.includes(a)||(this.mainPrimaryRasterId===a?(e.unshift(i),n.unshift(a)):(e.push(i),n.push(a)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:n}=e;if(t==null||t==="$$"){const s=n[0];return s==null?null:s.clone()}if(typeof t=="string"){const s=e.primaryRasterIds.indexOf(t);return s===-1?null:n[s]}if(typeof t=="number"){const s=n[0];if(s==null)return null;const{width:r,height:i,pixelType:a}=s,o=new Float32Array(r*i);o.fill(t);const u=this.sourceRasterInfos[0].bandCount,l=new Array(u).fill(o);return new b({width:r,height:i,pixelType:a,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:n,statistics:s,histograms:r}=t,i=n.BandProperties;i&&i.length!==e&&(t.keyProperties={...n,BandProperties:void 0}),s&&s.length!==e&&(t.statistics=s.length>e?s.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),n.BAND_COUNT&&Number(n.BAND_COUNT)!==e&&(t.keyProperties={...n,BAND_COUNT:typeof n.BAND_COUNT=="string"?String(e):e})}};c([p({json:{write:!0}})],O.prototype,"functionName",void 0),c([p({json:{write:!0}})],O.prototype,"functionArguments",void 0),c([p()],O.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}}),os(t=>t?.toLowerCase())],O.prototype,"outputPixelType",void 0),c([p({json:{write:!0}})],O.prototype,"mainPrimaryRasterId",void 0),c([p()],O.prototype,"sourceRasters",void 0),c([p({type:[ks],json:{write:!0}})],O.prototype,"sourceRasterInfos",void 0),c([p({json:{write:!0}})],O.prototype,"rasterInfo",void 0),c([p({json:{write:!0}})],O.prototype,"readingBufferSize",void 0),c([p({json:{write:!0}})],O.prototype,"id",void 0),c([p()],O.prototype,"isNoopProcess",void 0),c([p()],O.prototype,"supportsGPU",null),c([p()],O.prototype,"rawInputBandIds",void 0),c([p()],O.prototype,"rawSourceRasterInfos",void 0),c([p()],O.prototype,"isInputBandIdsSwizzled",void 0),c([p()],O.prototype,"swizzledBandSelection",void 0),c([p()],O.prototype,"isBranch",void 0),c([p({readOnly:!0})],O.prototype,"flatWebGLFunctionChain",null),c([p()],O.prototype,"_bindingResult",void 0),O=c([P("esri.layers.support.rasterFunctions.BaseRasterFunction")],O);const G=O,C={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Ls={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},U={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},X={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Ws={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},cs={setNull:50,conditional:78},Me={...Ls,...U,...X,...Ws,...cs},ps=new Map([[X.acos,{domain:[0,Math.PI],isInteger:!1}],[X.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[X.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[X.cos,{domain:[-1,1],isInteger:!1}],[X.sin,{domain:[-1,1],isInteger:!1}],[U.booleanAnd,{domain:[0,1],isInteger:!0}],[U.booleanNot,{domain:[0,1],isInteger:!0}],[U.booleanOr,{domain:[0,1],isInteger:!0}],[U.booleanXOr,{domain:[0,1],isInteger:!0}],[U.equalTo,{domain:[0,1],isInteger:!0}],[U.notEqual,{domain:[0,1],isInteger:!0}],[U.greaterThan,{domain:[0,1],isInteger:!0}],[U.greaterThanEqual,{domain:[0,1],isInteger:!0}],[U.lessThan,{domain:[0,1],isInteger:!0}],[U.lessThanEqual,{domain:[0,1],isInteger:!0}],[U.isNull,{domain:[0,1],isInteger:!0}]]);function Oe(t){return ps.get(t)}const De=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function qs(t,e=!1){const n=t.map(o=>o.mask),s=n.filter(o=>o!=null),r=t[0].pixels[0].length;if(s.length===0||e&&s.length!==n.length)return new Uint8Array(r).fill(255);const i=s[0],a=new Uint8Array(i);if(s.length===1)return a;if(!e){for(let o=1;o<s.length;o++){const u=s[o];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}for(let o=1;o<s.length;o++){const u=s[o];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function Hs(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]+r[o]);return a}function Xs(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand("f32",r);return i.set(s),i}function Ks(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=s[a]*s[a]);return i}function Js(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]-r[o]);return a}function Ys(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]*r[o]);return a}function Zs(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=Math.sign(s[a])*Math.floor(Math.abs(s[a])));return i}function hs(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]/r[o]);return a}function Qs(t,e,n){return hs(t,e,"f32")}function tn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=Math.floor(s[o]/r[o]));return a}function en(t,e,n,s){const r=t[0],i=r.length,a=b.createEmptyBand(n,i);if(s===X.atanh){for(let u=0;u<i;u++)if(e[u]){const l=r[u];Math.abs(l)>=1?e[u]=0:a[u]=Math.atanh(l)}return a}const o=s===X.asin?Math.asin:Math.acos;for(let u=0;u<i;u++)if(e[u]){const l=r[u];Math.abs(l)>1?e[u]=0:a[u]=o(l)}return a}function sn(t,e,n,s){const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s(r[o]));return a}function nn(t,e,n,s){const[r,i]=t,a=r.length,o=b.createEmptyBand(n,a);for(let u=0;u<a;u++)e&&!e[u]||(o[u]=s(r[u],i[u]));return o}function rn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]&r[o]);return a}function on(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<<r[o]);return a}function an(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=~s[a]);return i}function un(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]|r[o]);return a}function ln(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>>r[o]);return a}function cn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]^r[o]);return a}function pn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]&&r[o]?1:0);return a}function hn(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=s[a]?0:1);return i}function mn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]||r[o]?1:0);return a}function fn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=(s[o]?1:0)^(r[o]?1:0));return a}function dn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]===r[o]?1:0);return a}function Ce(t,e,n,s){const[r]=t,i=r.length,a=b.createEmptyBand(n,i),o=s===Math.E;for(let u=0;u<i;u++)e&&!e[u]||(a[u]=o?Math.exp(r[u]):s**r[u]);return a}function gn(t,e,n){return Ce(t,e,n,10)}function yn(t,e,n){return Ce(t,e,n,2)}function xn(t,e,n){return Ce(t,e,n,Math.E)}function Re(t,e,n,s){const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(r[o]<=0?e[o]=0:a[o]=s(r[o]));return a}function bn(t,e,n){return Re(t,e,n,Math.log10)}function wn(t,e,n){return Re(t,e,n,Math.log2)}function vn(t,e,n){return Re(t,e,n,Math.log)}function An(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>r[o]?1:0);return a}function Tn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>=r[o]?1:0);return a}function Pn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<r[o]?1:0);return a}function Fn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<=r[o]?1:0);return a}function Nn(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);if(!e)return i;for(let a=0;a<r;a++)i[a]=e[a]?0:1;return i}function $n(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]%r[o]);return a}function In(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=-s[a]);return i}function Cn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]===r[o]?0:1);return a}function Rn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i),o=new Uint8Array(i);for(let u=0;u<i;u++)e!=null&&!e[u]||s[u]!==0||(a[u]=r[u],o[u]=255);return{band:a,mask:o}}function Ge(t,e,n){const[s,r,i]=t,a=s.length,o=b.createEmptyBand(n,a);for(let u=0;u<a;u++)e&&!e[u]||(o[u]=s[u]?r[u]:i[u]);return o}function Ee(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=r[o];for(let l=1;l<s;l++){const m=t[l][o];u<m&&(u=m)}a[o]=u}return a}function ze(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=r[o];for(let l=1;l<s;l++){const m=t[l][o];u>m&&(u=m)}a[o]=u}return a}function Ve(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=r[o],l=u;for(let m=1;m<s;m++){const h=t[m][o];l<h?l=h:u>h&&(u=h)}a[o]=l-u}return a}function Ue(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=0;for(let l=0;l<s;l++)u+=t[l][o];a[o]=u/s}return a}function Le(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o])for(let u=0;u<s;u++){const l=t[u];a[o]+=l[o]}return a}function We(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){const u=new Float32Array(s);let l=0;for(let h=0;h<s;h++){const f=t[h];l+=f[o],u[h]=f[o]}l/=s;let m=0;for(let h=0;h<s;h++)m+=(u[h]-l)**2;a[o]=Math.sqrt(m/s)}return a}function qe(t,e,n){const s=t.length;if(s<2)return t[0];const r=Math.floor(s/2),[i]=t,a=i.length,o=b.createEmptyBand(n,a),u=new Float32Array(s),l=s%2==1;for(let m=0;m<a;m++)if(!e||e[m]){for(let h=0;h<s;h++)u[h]=t[h][m];u.sort(),o[m]=l?u[r]:(u[r]+u[r-1])/2}return o}function ms(t,e,n){const[s,r]=t;if(r==null)return s;const i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e[o]&&(s[o]===r[o]?a[o]=s[o]:e[o]=0);return a}function He(t,e,n){const s=t.length;if(s<=2)return ms(t,e,n);const r=t[0].length,i=b.createEmptyBand(n,r),a=new Map;for(let o=0;o<r;o++)if(!e||e[o]){let u;a.clear();for(let h=0;h<s;h++)u=t[h][o],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,m=0;for(const h of a.keys())l=a.get(h),l>m&&(m=l,u=h);i[o]=u}return i}function Xe(t,e,n){const s=t.length;if(s<=2)return ms(t,e,n);const r=t[0].length,i=b.createEmptyBand(n,r),a=new Map;for(let o=0;o<r;o++)if(!e||e[o]){let u;a.clear();for(let h=0;h<s;h++)u=t[h][o],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,m=t.length;for(const h of a.keys())l=a.get(h),l<m&&(m=l,u=h);i[o]=u}return i}function Ke(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i),o=new Set;for(let u=0;u<i;u++)if(!e||e[u]){let l;o.clear();for(let m=0;m<s;m++)l=t[m][u],o.add(l);a[u]=o.size}return a}const E=new Map,Kt=new Map,I=new Map,S=new Map;function kn(){E.size||(E.set(4,Math.sqrt),E.set(6,Math.acos),E.set(7,Math.asin),E.set(8,Math.atan),E.set(9,Math.atanh),E.set(10,Math.abs),E.set(21,Math.cos),E.set(22,Math.cosh),E.set(48,Math.floor),E.set(49,Math.ceil),E.set(51,Math.sin),E.set(52,Math.sinh),E.set(56,Math.tan),E.set(57,Math.tanh),E.set(59,Math.acosh),E.set(60,Math.asinh),E.set(65,Math.floor),Kt.set(5,Math.pow),Kt.set(61,Math.atan2),I.set(1,Hs),I.set(2,Js),I.set(3,Ys),I.set(11,rn),I.set(12,on),I.set(13,an),I.set(14,un),I.set(15,ln),I.set(16,cn),I.set(17,pn),I.set(18,hn),I.set(19,mn),I.set(20,fn),I.set(23,hs),I.set(24,dn),I.set(25,xn),I.set(26,gn),I.set(27,yn),I.set(28,An),I.set(29,Tn),I.set(30,Zs),I.set(31,Nn),I.set(32,Xs),I.set(33,Pn),I.set(34,Fn),I.set(35,vn),I.set(36,bn),I.set(37,wn),I.set(44,$n),I.set(45,In),I.set(46,Cn),I.set(53,Ks),I.set(64,Qs),I.set(65,tn),I.set(76,Ge),I.set(78,Ge),S.set(38,He),S.set(39,Ee),S.set(40,Ue),S.set(41,qe),S.set(42,ze),S.set(43,Xe),S.set(47,Ve),S.set(54,We),S.set(55,Le),S.set(58,Ke),S.set(66,He),S.set(67,Ee),S.set(68,Ue),S.set(69,qe),S.set(70,ze),S.set(71,Xe),S.set(72,Ve),S.set(73,We),S.set(74,Le),S.set(75,Ke))}function _n(t,e,n,s){let[r,i]=it(n);const a=H(n);a&&(r-=1e-5,i+=1e-5);for(let o=0;o<e.length;o++)if(e[o]){const u=t[o];isNaN(u)||u<r||u>i?e[o]=0:s[o]=a?Math.round(u):u}}function fs(t,e,n={}){kn();let s=qs(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=n,i=!S.has(e)||n.processAsMultiband,a=i?t[0].pixels.length:1,o=[];for(let l=0;l<a;l++){const m=S.has(e)&&!i?t.flatMap(d=>d.pixels):t.map(d=>d.pixels[l]);let h,f=!0;if(e===cs.setNull){const d=Rn(m,s,r);h=d.band,s=d.mask,f=!1}else I.has(e)?h=I.get(e)(m,s,"f64"):E.has(e)?h=e===X.asin||e===X.acos||e===X.atanh?en(m,s,"f64",e):sn(m,s,"f64",E.get(e)):Kt.has(e)?h=nn(m,s,"f64",Kt.get(e)):S.has(e)?h=S.get(e)(m,s,"f64"):(h=m[0],f=!1);if(f&&e!==U.isNull&&!ps.has(e)){const d=b.createEmptyBand(r,h.length);s||(s=new Uint8Array(h.length).fill(255)),_n(h,s,r,d),h=d}o.push(h)}const u=t[0];return new b({width:u.width,height:u.height,pixelType:r,mask:e===U.isNull?null:s,pixels:o})}function Bn(t,e,n){return fs(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:n})}let Ft=class extends G{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?.[0]==null||e?.[1]==null?null:Bn(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],n=this.outputPixelType??"f32";let[s,r]=it(n);const i=H(n);return i&&(s-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[s,r],isOutputRounded:i}}};c([p({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),c([p({type:Vs,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),c([p()],Ft.prototype,"rasterArgumentNames",void 0),Ft=c([P("esri.layers.support.rasterFunctions.ArithmeticFunction")],Ft);const jn=Ft;var te;let ee=te=class extends D{clone(){return new te({raster:this.raster})}};ee=te=c([P("esri.layers.support.rasterFunctions.AspectFunctionArguments")],ee);const Sn=ee;let at=class extends G{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],i=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1});return _s(e,{resolution:i})}};c([p({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([p({type:Sn,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([p()],at.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],at.prototype,"isGCS",void 0),at=c([P("esri.layers.support.rasterFunctions.AspectFunction")],at);const Mn=at,On=new Set(["+","-","*","/","(",")"]);function Dn(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const n=t.split(""),s=[],r=[];let i="";for(let a=0;a<n.length;a++){const o=n[a];On.has(o)?(i.length&&r.push(Je(i,e)),s.push(o),i=""):i=i.concat(o)}return i.length&&r.push(Je(i,e)),{ops:s,nums:r}}function Je(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Gn(t,e,n,s){if(typeof n=="number"&&typeof s=="number")return n+s;let r,i,a;typeof n=="number"?(a=s,r=a.length,i=new Float32Array(r),i.fill(n)):(r=n.length,i=n,s.constructor===Number?(a=new Float32Array(r),a.fill(s)):a=s);const o=new Float32Array(r);switch(e){case"+":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=i[u]+a[u]);break;case"-":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=i[u]-a[u]);break;case"*":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=i[u]*a[u]);break;case"/":for(let u=0;u<r;u++)(t==null||t[u])&&a[u]&&(o[u]=i[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return o}function En(t,e){t.splice(e,1);let n=0,s=0;do{n=0,s=0;for(let r=0;r<t.length;r++)if(t[r]==="(")n=r;else if(t[r]===")"){s=r;break}s===n+1&&t.splice(n,2)}while(s===n+1);return t}function zn(t){if(t.length===1)return{opIndex:0,numIndex:0};let e=0,n=0;for(let a=0;a<t.length;a++)if(t[a]==="(")e=a;else if(t[a]===")"){n=a;break}const s=n===0?t:t.slice(e+1,n);let r=-1;for(let a=0;a<s.length;a++)if(s[a]==="*"||s[a]==="/"){r=a;break}if(r>-1)n>0&&(r+=e+1);else{for(let a=0;a<s.length;a++)if(s[a]==="+"||s[a]==="-"){r=a;break}n>0&&(r+=e+1)}let i=0;for(let a=0;a<r;a++)t[a]==="("&&i++;return{opIndex:r,numIndex:r-i}}function Vn(t,e,n){let s,{ops:r,nums:i}=Dn(n,e);if(r.length===0){const a=i.length===1?i[0]:e[0];if(a instanceof Float32Array)return[a];const o=new Float32Array(e[0].length);return typeof a=="number"?o.fill(a):o.set(a),[o]}for(;r.length>0;){const{numIndex:a,opIndex:o}=zn(r);if(s=Gn(t,r[o],i[a],i[a+1]),r.length===1)break;r=En(r,o),i.splice(a,2,s)}return[s]}const Un=new ot({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Ln(t,e){if(!Ps(t))return t;const{equation:n,method:s}=e,r=e.bandIndexes.map(m=>m-1),{pixels:i,mask:a}=t;let o;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":o=Ye(a,i[r[0]],i[r[1]]);break;case"ndwi":o=Ye(a,i[r[1]],i[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":o=qn(a,i[r[0]],i[r[1]]);break;case"ci-g":case"ci-re":o=Hn(a,i[r[0]],i[r[1]]);break;case"savi":o=Xn(a,i[r[0]],i[r[1]],r[2]+1);break;case"tsavi":o=Kn(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":o=Jn(a,i[r[0]],i[r[1]]);break;case"gemi":o=Yn(a,i[r[0]],i[r[1]]);break;case"pvi":o=Zn(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1);break;case"gvitm":o=Qn(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]],i[r[5]]]);break;case"sultan":o=tr(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]]]);break;case"vari":o=er(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"mtvi2":o=sr(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"rtvi-core":o=nr(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"evi":o=rr(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"wndwi":o=or(a,[i[r[0]],i[r[1]],i[r[2]]],r[3]?r[3]+1:.5);break;case"bai":o=ir(a,i[r[0]],i[r[1]]);break;case"custom":o=Vn(a,i,n);break;default:return t}const u=a!=null?new Uint8Array(a.length):null;a!=null&&u!=null&&u.set(a);const l=new b({width:t.width,height:t.height,pixelType:"f32",pixels:o,mask:u});return l.updateStatistics(),l}function Wn(t,e,n,s){const{mask:r,pixels:i,width:a,height:o}=t,u=i[n],l=i[e],m=l.length,h=s?new Uint8Array(m):new Float32Array(m),f=s?100:1,d=s?100.5:0;for(let x=0;x<m;x++)if(r==null||r[x]){const y=u[x],A=l[x],w=y+A;w&&(h[x]=(y-A)/w*f+d)}const g=new b({width:a,height:o,mask:r,pixelType:s?"u8":"f32",pixels:[h]});return g.updateStatistics(),g}function z(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Ye(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=e[i],o=n[i],u=a+o;u&&(r[i]=(a-o)/u)}return[r]}function qn(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=e[i],o=n[i];o&&(r[i]=a/o)}return[r]}function Hn(t,e,n){const s=e.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=e[i],o=n[i];o&&(r[i]=a/o-1)}return[r]}function Xn(t,e,n,s){const r=n.length,i=new Float32Array(r);for(let a=0;a<r;a++)if(t==null||t[a]){const o=n[a],u=e[a],l=u+o+s;l&&(i[a]=(u-o)/l*(1+s))}return[i]}function Kn(t,e,n,s,r,i){const a=n.length,o=new Float32Array(a),u=-r*s+i*(1+s*s);for(let l=0;l<a;l++)if(t==null||t[l]){const m=n[l],h=e[l],f=r*h+m+u;f&&(o[l]=s*(h-s*m-r)/f)}return[o]}function Jn(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=n[i],o=e[i],u=2*o+1;r[i]=.5*(u-Math.sqrt(u*u-8*(o-a)))}return[r]}function Yn(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=n[i],o=e[i];if(a!==1&&o+a+.5!==0){const u=(2*(o*o-a*a)+1.5*o+.5*a)/(o+a+.5);r[i]=u*(1-.25*u)-(a-.125)/(1-a)}}return[r]}function Zn(t,e,n,s,r){const i=n.length,a=new Float32Array(i),o=1/Math.sqrt(1+s*s);for(let u=0;u<i;u++)if(t==null||t[u]){const l=n[u],m=e[u];a[u]=(m-s*l-r)*o}return[a]}function Qn(t,e){const[n,s,r,i,a,o]=e,u=n.length,l=new Float32Array(u);for(let m=0;m<u;m++)(t==null||t[m])&&(l[m]=-.2848*n[m]-.2435*s[m]-.5436*r[m]+.7243*i[m]+.084*a[m]-.18*o[m]);return[l]}function tr(t,e){const[n,s,r,i,a]=e,o=n.length,u=new Float32Array(o),l=new Float32Array(o),m=new Float32Array(o);for(let h=0;h<o;h++)(t==null||t[h])&&(u[h]=a[h]?i[h]/a[h]*100:0,l[h]=n[h]?i[h]/n[h]*100:0,m[h]=r[h]?s[h]/r[h]*(i[h]/r[h])*100:0);return[u,l,m]}function er(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],l=s[o],m=l+u-r[o];m&&(a[o]=(l-u)/m)}return[a]}function sr(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],l=s[o],m=r[o],h=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(h){const f=1.5*(1.2*(u-m)-2.5*(l-m));a[o]=f/h}}return[a]}function nr(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],l=s[o],m=r[o];a[o]=100*(u-l)-10*(u-m)}return[a]}function rr(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],l=s[o],m=u+6*l-7.5*r[o]+1;m&&(a[o]=2.5*(u-l)/m)}return[a]}function or(t,e,n=.5){const[s,r,i]=e,a=r.length,o=new Float32Array(a);for(let u=0;u<a;u++)if(t==null||t[u])for(u=0;u<a;u++){const l=s[u],m=r[u],h=i[u],f=l+n*m+(1-n)*h;f&&(o[u]=(l-n*m-(1-n)*h)/f)}return[o]}function ir(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i])for(i=0;i<s;i++){const a=(.1-e[i])**2+(.06-n[i])**2;a&&(r[i]=1/a)}return[r]}var se;let Gt=se=class extends D{constructor(){super(...arguments),this.method="custom"}clone(){return new se({method:this.method,bandIndexes:this.bandIndexes,raster:L(this.raster)})}};c([p({json:{type:String,write:!0}})],Gt.prototype,"bandIndexes",void 0),c([J(Un)],Gt.prototype,"method",void 0),Gt=se=c([P("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Gt);const ar=Gt,ur=new Set(["vari","mtvi2","rtvi-core","evi"]);let Nt=class extends G{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{method:n,bandIndexes:s}=this.functionArguments,r=s.split(" ").map(i=>parseFloat(i));return Ln(e,{method:n,bandIndexes:r,equation:s})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let n,s;const r=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=z([e[0],e[1],0]),s="ndxi";break;case"ndwi":n=z([e[1],e[0],0]),s="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=z([e[0],e[1],0]),s="sr";break;case"ci-g":case"ci-re":n=z([e[0],e[1],0]),s="ci";break;case"savi":n=z([e[0],e[1],0]),s="savi",r[0]=t[2]+1;break;case"tsavi":n=z([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":n=z([e[0],e[1],0]),s="msavi";break;case"gemi":n=z([e[0],e[1],0]),s="gemi";break;case"pvi":n=z([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":n=z([e[0],e[1],e[2]]),s="vari";break;case"mtvi2":n=z([e[0],e[1],e[2]]),s="mtvi";break;case"rtvi-core":n=z([e[0],e[1],e[2]]),s="rtvicore";break;case"evi":n=z([e[0],e[1],e[2]]),s="evi";break;case"wndwi":n=z([e[0],e[1],0]),s="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":n=z([e[1],e[0],0]),s="bai";break;default:n=z([0,1,2]),s="custom"}return{bandIndexMat3:n,indexType:s,adjustments:r}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1),n=t.length,s=e.map(a=>a>=n?n-1:a),r=ur.has(this.functionArguments.method)?3:2,i=s.slice(0,r).map(a=>t[a]);return i.length===2&&i.push(0),i}};c([p({json:{write:!0,name:"rasterFunction"}})],Nt.prototype,"functionName",void 0),c([p({type:ar,json:{write:!0,name:"rasterFunctionArguments"}})],Nt.prototype,"functionArguments",void 0),c([p()],Nt.prototype,"rasterArgumentNames",void 0),Nt=c([P("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Nt);const lr=Nt;var ne;const Ze=new ot({1:"outside",2:"inside"},{useNumericKeys:!0});let Et=ne=class extends D{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ne({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([p({types:vs,json:{read:As,write:!0}})],Et.prototype,"clippingGeometry",void 0),c([p({json:{read:Ze.read,write:Ze.write}})],Et.prototype,"clippingType",void 0),Et=ne=c([P("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Et);const cr=Et;let ut=class extends G{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([p({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),c([p({type:cr,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),c([p()],ut.prototype,"rasterArgumentNames",void 0),c([p()],ut.prototype,"isNoopProcess",void 0),ut=c([P("esri.layers.support.rasterFunctions.ClipFunction")],ut);const pr=ut;var re;let K=re=class extends D{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return Bs.includes(e)?e:null}readColorRamp(t){return ls(t)}readColorRampName(t,e){if(!t)return null;const n=Wt.jsonValues.find(s=>s.toLowerCase()===t.toLowerCase());return n?Wt.fromJSON(n):null}clone(){return new re({colormap:L(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};c([p({type:[[Number]],json:{write:!0}})],K.prototype,"colormap",void 0),c([p({type:String,json:{write:!0}})],K.prototype,"colormapName",void 0),c([os("colormapName")],K.prototype,"castColormapName",null),c([p({types:zs,json:{write:!0}})],K.prototype,"colorRamp",void 0),c([St("colorRamp")],K.prototype,"readColorRamp",null),c([p({type:Wt.apiValues,json:{type:Wt.jsonValues,write:Wt.write}})],K.prototype,"colorRampName",void 0),c([St("colorRampName")],K.prototype,"readColorRampName",null),K=re=c([P("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],K);const hr=K,mr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],fr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function ke(t,e){const n=[],s=[];for(let i=0;i<t.length-1;i++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[i].slice(1),toColor:t[i+1].slice(1)}),s.push(t[i+1][0]-t[i][0]);const r=t[t.length-1][0];return us({type:"multipart",colorRamps:n},{numColors:r,weights:e=e??s})}function dr(){return ke([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function gr(){const t=ke([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function yr(){return us({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function xr(){const t=[];for(let e=0;e<256;e++){const n=[];for(let s=0;s<3;s++)n.push(Math.round(255*Math.random()));t.push(n)}return t}function br(){return ke([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function wr(t){let e;switch(t){case"elevation":e=dr();break;case"gray":e=yr();break;case"hillshade":e=br();break;case"ndvi":e=mr;break;case"ndvi2":e=gr();break;case"ndvi3":e=fr;break;case"random":e=xr()}return e?(e=e.map((n,s)=>[s,...n]),e):null}let Y=class extends G{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:n,colorRamp:s,colorRampName:r}=this.functionArguments;if(!e?.length)if(s)this.colorRamp=s,e=Se(s,{interpolateAlpha:!0});else if(r){const o=js(r);o&&(e=Se(o),this.colorRamp=ls(o))}else n&&(e=wr(n));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(t.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=e,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||H(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([p({json:{write:!0,name:"rasterFunction"}})],Y.prototype,"functionName",void 0),c([p({type:hr,json:{write:!0,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",void 0),c([p()],Y.prototype,"rasterArgumentNames",void 0),c([p()],Y.prototype,"isNoopProcess",void 0),c([p({json:{write:!0}})],Y.prototype,"indexedColormap",void 0),c([p()],Y.prototype,"colorRamp",void 0),Y=c([P("esri.layers.support.rasterFunctions.ColormapFunction")],Y);const vr=Y;var oe;let zt=oe=class extends D{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new oe({rasters:L(this.rasters)})}};c([p({json:{write:!0}})],zt.prototype,"rasters",void 0),c([Mt("rasters")],zt.prototype,"writeRasters",null),zt=oe=c([P("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],zt);const Ar=zt;let $t=class extends G{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();if(n.attributeTable=null,n.colormap=null,n.pixelType=this.outputPixelType,n.bandCount=t.map(({bandCount:r})=>r).reduce((r,i)=>r+i),t.every(({statistics:r})=>r!=null&&r.length)){const r=[];t.forEach(({statistics:i})=>i!=null&&r.push(...i)),n.statistics=r}if(t.every(({histograms:r})=>r!=null&&r.length)){const r=[];t.forEach(({histograms:i})=>i!=null&&r.push(...i)),n.histograms=r}n.bandCount>1&&(n.colormap=null,n.attributeTable=null);const s=t.every(r=>r.keyProperties.BandProperties?.length)?t.flatMap(r=>r.keyProperties.BandProperties):void 0;return n.keyProperties={...n.keyProperties,BandProperties:s},this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?e?.[0]==null?null:Fs(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([p({json:{write:!0,name:"rasterFunction"}})],$t.prototype,"functionName",void 0),c([p({type:Ar,json:{write:!0,name:"rasterFunctionArguments"}})],$t.prototype,"functionArguments",void 0),c([p()],$t.prototype,"rasterArgumentNames",void 0),$t=c([P("esri.layers.support.rasterFunctions.CompositeBandFunction")],$t);const Tr=$t,Pr=new ot({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Fr=new ot({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function Nr(t,e,n,s){const[r,i]=t,a=H(n)&&!H(r.pixelType)&&!H(i.pixelType),o=[r.mask,i.mask].filter(g=>g),u=b.combineBandMasks(o),l=t.map(g=>g.pixels[0]),{width:m,height:h}=r,f=b.createEmptyBand(n,m*h);switch(e){case"difference":case"relative-difference":$r({bands:l,mask:u,outBand:f,isRoundingNeeded:a,isRelative:e==="relative-difference"});break;case"categorical":Ir({bands:l,mask:u,outBand:f,...s});break;case"euclidean-distance":Cr({pixels:t.map(g=>g.pixels),mask:u,outBand:f});break;case"angle-difference":Rr({pixels:t.map(g=>g.pixels),mask:u,outBand:f});break;case"band-with-most-change":kr({pixels:t.map(g=>g.pixels),mask:u,outBand:f})}const d=new b({width:m,height:h,pixels:[f],pixelType:n,mask:u});return d.updateStatistics(),d}function $r(t){const{bands:[e,n],mask:s,isRelative:r,isRoundingNeeded:i,outBand:a}=t,o=e.length;for(let u=0;u<o;u++)if(!s||s[u]){let l=e[u]-n[u];if(r){const m=Math.max(Math.abs(e[u])-Math.abs(n[u]));l=m>0?l/m:0}a[u]=i?Math.round(l):l}}function Ir(t){const{bands:[e,n],categoryIndexLookups:[s,r],classNames:[i,a],mask:o,keepMethod:u,outBand:l}=t,m=e.length,h=i.length,f=a.length,d=h*f,g=d+1,x=d+2;for(let y=0;y<m;y++)if(!o||o[y]){const A=e[y],w=n[y],v=s[A],T=r[w],N=i[v],F=a[T];l[y]=v==null||T==null?d:u==="changed"&&N===F?g:u==="unchanged"&&N!==F?x:v*f+T}}function Cr(t){const{pixels:[e,n],mask:s,outBand:r}=t,i=e[0].length,a=e.length;for(let o=0;o<i;o++)if(!s||s[o]){let u=0;for(let l=0;l<a;l++){const m=e[l][o]-n[l][o];u+=m*m}r[o]=Math.sqrt(u)}}function Rr(t){const{pixels:[e,n],mask:s,outBand:r}=t,i=e[0].length,a=e.length;for(let o=0;o<i;o++)if(!s||s[o]){let u=0,l=0,m=0;for(let f=0;f<a;f++){const d=e[f][o],g=n[f][o];u+=d*g,l+=d*d,m+=g*g}const h=Math.sqrt(l*m);r[o]=h?Math.acos(u/h):1.5707963267948966}}function kr(t){const{pixels:[e,n],mask:s,outBand:r}=t,i=e[0].length,a=e.length;for(let o=0;o<i;o++)if(!s||s[o]){let u=0,l=0;for(let m=0;m<a;m++){const h=Math.abs(e[m][o]-n[m][o]);h>u&&(u=h,l=m)}r[o]=l}}var ie;let lt=ie=class extends D{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new ie({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};c([J(Pr)],lt.prototype,"method",void 0),c([J(Fr)],lt.prototype,"keepMethod",void 0),c([p({json:{write:!0}})],lt.prototype,"raster2",void 0),c([p({readOnly:!0})],lt.prototype,"rasters",null),lt=ie=c([P("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],lt);const _r=lt;let ct=class extends G{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const n=this.sourceRasterInfos.map(i=>i.attributeTable),s=this._getFieldNames(n,"value"),r=n.map(i=>this._getClassFieldName(i));if(s[0]==null||s[1]==null||r[0]==null||r[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,s,r)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if(e?.[0]==null||e?.[1]==null)return null;const{method:n}=this.functionArguments;return Nr(e,n,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,n]=it(t);const s=H(t);return s&&(e-=1e-4,n+=1e-4),{method:this.functionArguments.method,domainRange:[e,n],isOutputRounded:s}}_updateAttributeTable(t,e,n){const s=this.sourceRasterInfos.map(v=>v.attributeTable),r=s.map((v,T)=>v.features.map(N=>N.attributes[e[T]])),i=s.map((v,T)=>v.features.map(N=>N.attributes[n[T]])),a=r.map(v=>{const T=[];return v.forEach((N,F)=>T[N]=F),T}),{keepMethod:o}=this.functionArguments;this._categoryConfig={categoryIndexLookups:a,classNames:i,keepMethod:o};const u=s[0].clone();u.fields=[new tt({name:"OID",type:"oid"}),new tt({name:"Value",type:"integer"}),new tt({name:"ClassName",type:"string"}),new tt({name:"Class_From",type:"string"}),new tt({name:"Class_To",type:"string"})];const l=this._getFieldNames(s,"red"),m=this._getFieldNames(s,"green"),h=this._getFieldNames(s,"blue"),f=[],d=l.length===2&&m.length===2&&h.length===2;d&&(f.push(...s.map((v,T)=>v.features.map(N=>[N.attributes[l[T]],N.attributes[m[T]],N.attributes[h[T]]]))),u.fields.push(new tt({name:"Red",type:"integer"}),new tt({name:"Green",type:"integer"}),new tt({name:"Blue",type:"integer"})));const g=u.features[0].clone();g.geometry=null;const x=[],[y,A]=r.map(v=>v.length);let w=1;for(let v=0;v<y;v++){const T=i[0][v];for(let N=0;N<A;N++){const F=i[1][N];if(o==="changed"&&T===F||o==="unchanged"&&T!==F)continue;const $=g.clone();$.attributes={OID:w++,Value:v*A+N,ClassName:T===F?T:`${T} -> ${F}`,Class_From:T,Class_To:F},d&&($.attributes.Red=f[0][v][0]+f[1][N][0]>>1,$.attributes.Green=f[0][v][1]+f[1][N][1]>>1,$.attributes.Blue=f[0][v][2]+f[1][N][2]>>1),x.push($)}}if(o==="changed"){const v=g.clone();v.attributes={OID:w++,Value:y*A+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},x.push(v)}else if(o==="unchanged"){const v=g.clone();v.attributes={OID:w++,Value:y*A+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},x.push(v)}u.features=x,t.attributeTable=u}_getFieldNames(t,e){return t.map(({fields:n})=>n.find(s=>s.name.toLowerCase()===e)?.name).filter(n=>n)}_getClassFieldName(t){return(t.fields.find(n=>n.type==="string"&&n.name.toLowerCase().startsWith("class"))??t.fields.find(n=>n.type==="string"&&n.name.toLowerCase().includes("class")||n.name.toLowerCase().includes("type")||n.name.toLowerCase().includes("name"))??t.fields.find(n=>n.type==="string"))?.name}};c([p({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([p({type:_r,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([p()],ct.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],ct.prototype,"_categoryConfig",void 0),ct=c([P("esri.layers.support.rasterFunctions.ComputeChangeFunction")],ct);const Br=ct;var ae;let Vt=ae=class extends D{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new ae({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([p({json:{write:!0}})],Vt.prototype,"contrastOffset",void 0),c([p({json:{write:!0}})],Vt.prototype,"brightnessOffset",void 0),Vt=ae=c([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Vt);const jr=Vt;let pt=class extends G{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const n=e.clone();this._removeStatsHistColormapVAT(n),this.rasterInfo=n;const{contrastOffset:s,brightnessOffset:r}=this.functionArguments;return this.lookup=Ss(s,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Ie(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([p({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),c([p({type:jr,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),c([p()],pt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],pt.prototype,"lookup",void 0),pt=c([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],pt);const Sr=pt;function _e(t,e,n,s,r){const i=Math.floor(s/2);for(let o=0;o<i;o++)for(let u=0;u<e;u++)t[o*e+u]=t[(r-1-o)*e+u],t[(n-1-o)*e+u]=t[(n-r+o)*e+u];const a=Math.floor(r/2);for(let o=0;o<n;o++){const u=o*e;for(let l=0;l<a;l++)t[u+l]=t[u+r-1-l],t[u+e-l-1]=t[u+e+l-r]}}const j=new Map;function Mr(t){const e=Math.sqrt(t.length),n=t.slice(0,e),s=[1];for(let r=1;r<e;r++){let i=null;for(let a=0;a<e;a++){const o=t[a+r*e],u=t[a];if(i==null)if(u===0){if(o)return{separable:!1,row:null,col:null}}else i=o/u;else if(o/u!==i)return{separable:!1,row:null,col:null}}if(i==null)return{separable:!1,row:null,col:null};s.push(i)}return{separable:!0,row:n,col:s}}function Qe(t,e,n,s,r,i,a){const o=new Float32Array(e*n),u=i.length,l=a?0:s,m=a?s:0,h=a?1:e;for(let f=l;f<n-l;f++){const d=f*e;for(let g=m;g<e-m;g++){if(r&&!r[d+g])continue;let x=0;for(let y=0;y<u;y++)x+=t[d+g+(y-s)*h]*i[y];o[d+g]=x}}return o}function Or(t,e,n,s,r,i,a){const o=new Float32Array(e*n),u=Math.floor(s/2),l=Math.floor(r/2);for(let m=u;m<n-u;m++){const h=m*e;for(let f=l;f<e-l;f++){if(i&&!i[h+f])continue;let d=0;for(let g=0;g<s;g++)for(let x=0;x<r;x++)d+=t[h+f+(g-u)*e+x-l]*a[g*r+x];o[h+f]=d}}return o}function Dr(t,e,n=!0){const{pixels:s,width:r,height:i,pixelType:a,mask:o}=t,u=s.length,l=[],{kernel:m,rows:h,cols:f}=e;for(let d=0;d<u;d++){const g=Or(s[d],r,i,h,f,o,m);n&&_e(g,r,i,h,f),l.push(g)}return new b({width:r,height:i,pixelType:a,pixels:l,mask:o})}function Gr(t,e,n,s=!0){const{pixels:r,width:i,height:a,pixelType:o,mask:u}=t,l=r.length,m=[],h=e.length,f=n.length,d=Math.floor(h/2),g=Math.floor(f/2);for(let x=0;x<l;x++){let y=Qe(r[x],i,a,d,u,e,!0);y=Qe(y,i,a,g,u,n,!1),s&&_e(y,i,a,h,f),m.push(y)}return new b({width:i,height:a,pixelType:o,pixels:m,mask:u})}function Er(t,e){const n=Mr(e.kernel),s=e.mirrorEdges!==!1,r=n.separable?Gr(t,n.row,n.col,s):Dr(t,e,s),{outputPixelType:i}=e;return i&&r.clamp(i),r}j.set(C.none,[0,0,0,0,1,0,0,0,0]),j.set(C.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),j.set(C.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),j.set(C.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),j.set(C.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),j.set(C.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),j.set(C.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),j.set(C.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),j.set(C.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),j.set(C.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),j.set(C.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),j.set(C.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),j.set(C.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),j.set(C.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),j.set(C.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),j.set(C.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),j.set(C.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),j.set(C.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),j.set(C.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),j.set(C.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),j.set(C.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),j.set(C.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),j.set(C.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var ue;let ht=ue=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=j.get(t);if(!e||t===C.userDefined||t===C.none)return;const n=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",n),this._set("rows",n)}clone(){return new ue({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:L(this.raster)})}};c([p({json:{type:Number,write:!0}})],ht.prototype,"rows",void 0),c([p({json:{type:Number,write:!0}})],ht.prototype,"cols",void 0),c([p({json:{name:"type",type:Number,write:!0}})],ht.prototype,"convolutionType",null),c([p({json:{type:[Number],write:!0}})],ht.prototype,"kernel",void 0),ht=ue=c([P("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],ht);const zr=ht,ts=25;let mt=class extends G{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,n=t.reduce((s,r)=>s+r);return e===-1||n===0||n===1?t:t.map(s=>s/n)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:n,kernel:s}=this.functionArguments;if(!Object.values(C).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==C.none&&e*n!==s.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const i=r.clone();i.pixelType=this.outputPixelType;const a=[C.none,C.sharpen,C.sharpen2,C.sharpening3x3,C.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!a.includes(t))&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i,{success:!0,supportsGPU:s.length<=ts}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null||this.functionArguments.convolutionType===C.none)return e;const{rows:n,cols:s}=this.functionArguments,{_normalizedKernel:r}=this;return Er(e,{kernel:r,rows:n,cols:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(ts);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:it(this.outputPixelType)}}};c([p({json:{write:!0,name:"rasterFunction"}})],mt.prototype,"functionName",void 0),c([p({type:zr,json:{write:!0,name:"rasterFunctionArguments"}})],mt.prototype,"functionArguments",void 0),c([p()],mt.prototype,"rasterArgumentNames",void 0),c([p()],mt.prototype,"_normalizedKernel",null),mt=c([P("esri.layers.support.rasterFunctions.ConvolutionFunction")],mt);const Vr=mt;var le;const ds=new ot({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let It=le=class extends D{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return ds.fromJSON(e.type??e.curvatureType??0)}clone(){return new le({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([p({json:{write:{target:"type"}}}),J(ds)],It.prototype,"curvatureType",void 0),c([St("curvatureType",["type","curvatureType"])],It.prototype,"readCurvatureType",null),c([p({type:Number,json:{write:!0}})],It.prototype,"zFactor",void 0),It=le=c([P("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],It);const Ur=It;let ft=class extends G{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:n,curvatureType:s}=this.functionArguments,{extent:r,primaryPixelSizes:i}=t,a=i?.[0],o=a??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&n>=1?n*Zt:n;return Ms(e,{zFactor:u,curvatureType:s,resolution:o})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Zt:t}}};c([p({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),c([p({type:Ur,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),c([p()],ft.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],ft.prototype,"isGCS",void 0),ft=c([P("esri.layers.support.rasterFunctions.CurvatureFunction")],ft);const Lr=ft;var ce;let Z=ce=class extends D{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=is.bestMatch}clone(){return new ce({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([p({json:{write:!0}})],Z.prototype,"bandIds",void 0),c([p({json:{write:!0}})],Z.prototype,"bandNames",void 0),c([p({json:{write:!0}})],Z.prototype,"bandWavelengths",void 0),c([J({0:"name",1:"wavelength",2:"id"})],Z.prototype,"method",void 0),c([p({json:{write:!0}})],Z.prototype,"missingBandAction",void 0),c([p({json:{write:!0}})],Z.prototype,"wavelengthMatchTolerance",void 0),Z=ce=c([P("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Z);const Wr=Z;let Ct=class extends G{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:s,bandNames:r,bandWavelengths:i,bandIds:a,missingBandAction:o}=t,u=r?.length&&(s==="name"||s!=="id"&&!a?.length),l=i?.length&&(s==="wavelength"||s!=="id"&&!a?.length),m=o===is.fail,h=u?Hr(n,r):l?Kr(n,i,this.functionArguments,m):Xr(n,a,m);if(h==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const f=n.clone();f.pixelType=this.outputPixelType,f.bandCount=h.length;const{statistics:d,histograms:g}=f;d!=null&&d.length&&(f.statistics=h.map(y=>d[y]||d[d.length-1])),g!=null&&g.length&&(f.histograms=h.map(y=>g[y]||g[g.length-1]));let x=f.keyProperties?.BandProperties;return x?.length&&(x=h.map(y=>y>=x.length?x[x.length-1]:x[y]),f.keyProperties={...f.keyProperties,BandProperties:x}),this.rasterInfo=f,{success:!0,supportsGPU:f.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map(r=>r>=n?n-1:r);return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:z(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(n=>n>=e?e-1:n).map(n=>t[n])}};c([p({json:{write:!0,name:"rasterFunction"}})],Ct.prototype,"functionName",void 0),c([p({type:Wr,json:{write:!0,name:"rasterFunctionArguments"}})],Ct.prototype,"functionArguments",void 0),c([p()],Ct.prototype,"rasterArgumentNames",void 0),Ct=c([P("esri.layers.support.rasterFunctions.ExtractBandFunction")],Ct);const qr=Ct;function Hr(t,e){const n=t.bandInfos.map(({name:r})=>r.toLowerCase()),s=[];for(let r=0;r<e.length;r++){const i=e[r].toLowerCase();let a=n.indexOf(i);if(a===-1&&i==="nearinfrared"&&(a=n.findIndex(o=>o.startsWith("nearinfrared_1")),a===-1&&(a=n.findIndex(o=>o.startsWith("nearinfrared")))),a===-1)return null;s.push(a)}return s}function Xr(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some(r=>r<0||r>=s)?null:e}function Kr(t,e,{wavelengthMatchTolerance:n},s){const{bandInfos:r}=t,i=[];for(let o=0;o<r.length;o++){const{minWavelength:u,maxWavelength:l}=r[o];if(!u||!l)return null;i.push({minWavelength:u,maxWavelength:l})}const a=[];for(let o=0;o<e.length;o++){const u=e[o];let l=!1,m=-1,h=Number.MAX_VALUE;for(let f=0;f<i.length;f++){const d=i[f],g=u>=d.minWavelength&&u<=d.maxWavelength,x=Math.abs(u-(d.minWavelength+d.maxWavelength)/2);g?x<h&&(l=!0,m=f,h=x):!l&&x<h&&(m=f,h=x)}if(!l&&n&&h<n&&(l=!0),!l&&s)return null;a.push(m)}return a}function Jr(t,e,n){const{pixels:s,width:r,height:i,mask:a,bandMasks:o}=t,u=r*i,l=o?.length?b.combineBandMasks(o):a,m=Math.min(e.length,s.length),h=n.startsWith("f"),f=!h&&n!==t.pixelType,[d,g]=it(n),x=b.createEmptyBand(n,u);for(let A=0;A<i;A++){let w=A*r;for(let v=0;v<r;v++,w++)if(!l||l[w]){let T=0;for(let N=0;N<m;N++)T+=e[N]*s[N][w];h||(T=Math.round(T),f&&(T=T>g?g:T<d?d:T)),x[w]=T}}const y=new b({width:r,height:i,pixels:[x],pixelType:n,mask:l});return y.updateStatistics(),y}var pe;let Ht=pe=class extends D{clone(){return new pe({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([p({type:[Number],json:{write:!0}})],Ht.prototype,"conversionParameters",void 0),Ht=pe=c([P("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Ht);const Yr=Ht;let dt=class extends G{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((n,s)=>n+s);return t.map(n=>n/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const n=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:n}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Jr(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([p({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),c([p({type:Yr,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),c([p()],dt.prototype,"rasterArgumentNames",void 0),c([p()],dt.prototype,"_normalizedWeights",null),dt=c([P("esri.layers.support.rasterFunctions.GrayscaleFunction")],dt);const Zr=dt;var he;let gt=he=class extends D{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new he({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:L(this.rasters)})}};c([p({json:{write:!0}})],gt.prototype,"operation",void 0),c([p({json:{write:!0}})],gt.prototype,"rasters",void 0),c([Mt("rasters")],gt.prototype,"writeRasters",null),c([p({json:{write:!0}})],gt.prototype,"processAsMultiband",void 0),gt=he=c([P("esri.layers.support.rasterFunctions.LocalFunctionArguments")],gt);const Qr=gt;let Rt=class extends G{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{processAsMultiband:s}=this.functionArguments;if(t.some(u=>u.bandCount!==n))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:i}=this.functionArguments,a=De[r];if(!(a===999||i.length===a||i.length<=1&&a===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${a}`};const o=e.clone();return o.bandCount=a!==999||s?n:1,this._removeStatsHistColormapVAT(o),this._updateStatistics(o),this._updatePixelType(o),this.rasterInfo=o,{success:!0,supportsGPU:o.bandCount===1&&a<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(n=>n==null)?null:fs(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=De[t],n=Object.keys(Me).find(o=>Me[o]===t)?.toLowerCase()??"undefined",s=this.outputPixelType??"f32";let[r,i]=it(s);const a=H(s);return a&&(r-=1e-4,i+=1e-4),{imageCount:e,operationName:n,domainRange:[r,i],isOutputRounded:a}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,s=Oe(n)?.domain;if(s){t.statistics=[];for(let r=0;r<t.bandCount;r++)t.statistics[r]={min:s[0],max:s[1],avg:(s[0]+s[1])/2,stddev:(s[0]+s[1])/10}}else n===45&&e.statistics?.length&&(t.statistics=e.statistics.map(r=>({min:-r.max,max:-r.min,avg:r.avg!=null?-r.avg:void 0,stddev:r.stddev!=null?-r.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:n}=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,{domain:r,isInteger:i}=Oe(s)??{domain:null,isInteger:!1};let a="f32";if(r&&i)a=Jt(r[0],r[1]);else if(s===30){const o=e?.[0];a=o?Jt(o.min,o.max):H(n)?n:"s32"}else if(s===45&&H(n)){const o=e?.map(({max:h})=>-h),u=e?.map(({min:h})=>-h),l=o?.length?Math.min(...o):null,m=u?.length?Math.min(...u):null;a=l!=null&&m!=null?Jt(l,m):n.startsWith("s")?n.replace("s","u"):n==="u1"||n==="u2"||n==="u4"?"s8":n==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};c([p({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),c([p({type:Qr,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),c([p()],Rt.prototype,"rasterArgumentNames",void 0),Rt=c([P("esri.layers.support.rasterFunctions.LocalFunction")],Rt);const to=Rt;var me;let yt=me=class extends D{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=as.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const n=t.map(s=>{if(typeof s=="number")return e=!0,[s];if(typeof s=="string"){const r=s.trim().split(" ").filter(i=>i.trim()!=="").map(i=>Number(i));return e=e||r.length>0,r.length===0?null:r}return null});return e?n:null}clone(){return new me({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};c([p({json:{write:!0}})],yt.prototype,"includedRanges",void 0),c([p({json:{write:!0}})],yt.prototype,"noDataValues",void 0),c([p()],yt.prototype,"normalizedNoDataValues",null),c([p({json:{write:!0}})],yt.prototype,"noDataInterpretation",void 0),yt=me=c([P("esri.layers.support.rasterFunctions.MaskFunctionArguments")],yt);const eo=yt;let xt=class extends G{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:n,normalizedNoDataValues:s}=this.functionArguments;if(!n?.length&&!s?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let a=0;a<t.bandCount;a++){const o=Ns(e,n?.slice(2*a,2*a+2),s?.[a]);if(o==null){r=null;break}r.push(o)}this.lookups=r;const i=s!=null&&s.every(a=>a?.length===s[0]?.length);return{success:!0,supportsGPU:(!n||n.length<=2*Q)&&(!s||i&&s[0].length<=Q)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{outputPixelType:n,lookups:s}=this,{includedRanges:r,noDataInterpretation:i,normalizedNoDataValues:a}=this.functionArguments,o=i===as.matchAll;return $s(e,{includedRanges:r,noDataValues:a,outputPixelType:n,matchAll:o,lookups:s})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,n=new Float32Array(Q);n.fill(jt),e?.[0]?.length&&n.set(e[0]);const s=new Float32Array(Q);for(let r=0;r<s.length;r+=2)s[r]=t?.[r]??-jt,s[r+1]=t?.[r+1]??jt;return t?.length&&s.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:n,includedRanges:s}}};c([p({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([p({type:eo,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([p()],xt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],xt.prototype,"lookups",void 0),xt=c([P("esri.layers.support.rasterFunctions.MaskFunction")],xt);const so=xt;var fe;let kt=fe=class extends D{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this;return new fe({visibleBandID:t,infraredBandID:e,scientificOutput:n})}};c([p({json:{write:!0}})],kt.prototype,"visibleBandID",void 0),c([p({json:{write:!0}})],kt.prototype,"infraredBandID",void 0),c([p({json:{write:!0}})],kt.prototype,"scientificOutput",void 0),kt=fe=c([P("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],kt);const no=kt;let _t=class extends G{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:n}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0],r=Math.max(e,n);if(s.bandCount<2||r>=s.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const i=s.clone();i.pixelType=this.outputPixelType,i.colormap=null,i.histograms=null,i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[a,o,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:a,max:o,avg:u,stddev:l}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{visibleBandID:n,infraredBandID:s,scientificOutput:r}=this.functionArguments;return Wn(e,n,s,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this.functionArguments,s=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:z(s),scaled:!n}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:n}=this.functionArguments;return[n,e,0].map(s=>t[s])}};c([p({json:{write:!0,name:"rasterFunction"}})],_t.prototype,"functionName",void 0),c([p({type:no,json:{write:!0,name:"rasterFunctionArguments"}})],_t.prototype,"functionArguments",void 0),c([p()],_t.prototype,"rasterArgumentNames",void 0),_t=c([P("esri.layers.support.rasterFunctions.NDVIFunction")],_t);const ro=_t;var de;let et=de=class extends D{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new de({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([p({json:{write:!0}})],et.prototype,"inputRanges",void 0),c([p({json:{write:!0}})],et.prototype,"outputValues",void 0),c([p({json:{write:!0}})],et.prototype,"noDataRanges",void 0),c([p({json:{write:!0}})],et.prototype,"allowUnmatched",void 0),c([p({json:{write:!0}})],et.prototype,"isLastInputRangeInclusive",void 0),et=de=c([P("esri.layers.support.rasterFunctions.RemapFunctionArguments")],et);const oo=et;let bt=class extends G{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:n}=t,{allowUnmatched:s,outputValues:r,inputRanges:i,noDataRanges:a,isLastInputRangeInclusive:o}=this.functionArguments;if(n!=null&&n.length&&r?.length)if(s){const u=Math.min.apply(null,[...r,n[0].min]),l=Math.max.apply(null,[...r,n[0].max]);t.statistics=[{...n[0],min:u,max:l}]}else{let u=r[0],l=u;for(let m=0;m<r.length;m++)u=u>r[m]?r[m]:u,l=l>r[m]?l:r[m];t.statistics=[{...n[0],min:u,max:l}]}return this.rasterInfo=t,this.lookup=s?null:Is({srcPixelType:e,inputRanges:i,outputValues:r,noDataRanges:a,allowUnmatched:s,isLastInputRangeInclusive:o,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=Q)&&(!a||a.length<=Q)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{lookup:n,outputPixelType:s}=this;if(n){const l=Ie(e,{lut:[n.lut],offset:n.offset,outputPixelType:s});return l!=null&&n.mask&&(l.mask=Cs(e.pixels[0],e.mask,n.mask,n.offset,"u8")),l}const{inputRanges:r,outputValues:i,noDataRanges:a,allowUnmatched:o,isLastInputRangeInclusive:u}=this.functionArguments;return Rs(e,{inputRanges:r,outputValues:i,noDataRanges:a,outputPixelType:s,allowUnmatched:o,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:n}=this.functionArguments,s=new Float32Array(3*Q),r=1e-5,i=this.functionArguments.inputRanges??[],a=this.functionArguments.outputValues??[],o=a.length;for(let l=0;l<Q;l++)s[3*l]=i[2*l]??jt-1,s[3*l+1]=i[2*l+1]??jt,s[3*l+2]=a[l]??0,l<o&&(l>0&&(s[3*l]-=r),(l<o-1||!n)&&(s[3*l+1]-=r));const u=new Float32Array(2*Q);return u.fill(jt),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:s,noDataRanges:u,clampRange:it(this.outputPixelType)}}};c([p({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),c([p({type:oo,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),c([p()],bt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],bt.prototype,"lookup",void 0),bt=c([P("esri.layers.support.rasterFunctions.RemapFunction")],bt);const io=bt;var ge;const ao=new ot({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let st=ge=class extends D{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new ge({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([J(ao)],st.prototype,"slopeType",void 0),c([p({type:Number,json:{write:!0}})],st.prototype,"zFactor",void 0),c([p({type:Number,json:{name:"psPower",write:!0}})],st.prototype,"pixelSizePower",void 0),c([p({type:Number,json:{name:"psZFactor",write:!0}})],st.prototype,"pixelSizeFactor",void 0),c([p({type:Boolean,json:{write:!0}})],st.prototype,"removeEdgeEffect",void 0),st=ge=c([P("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],st);const uo=st;let wt=class extends G{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:i}=this.functionArguments,{isGCS:a}=this,{extent:o,primaryPixelSizes:u}=t,l=u?.[0],m=l??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1});return Os(e,{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:i,isGCS:a,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:n,pixelSizePower:s}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Zt:t,slopeType:e,pixelSizeFactor:n??0,pixelSizePower:s??0}}};c([p({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),c([p({type:uo,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),c([p()],wt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],wt.prototype,"isGCS",void 0),wt=c([P("esri.layers.support.rasterFunctions.SlopeFunction")],wt);const lo=wt,es=new ot({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function co(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{statisticsType:u,kernelRows:l,kernelCols:m}=e,h=u==="stddev",f=r*i,d=new Float64Array(f),g=new Float64Array(f),x=new Uint32Array(f);for(let F=0;F<i;F++){const $=F*r;let R=0,k=0,_=0;for(let B=0;B<m;B++)a&&!a[$+B]||(R+=s[$+B],h&&(k+=s[$+B]**2),_++);d[$]=R,g[$]=k,x[$]=_;for(let B=1;B<=r-m;B++){const W=$+B-1,Dt=W+m;a?(a[W]&&(_--,R-=s[W],h&&(k-=s[W]**2)),a[Dt]&&(_++,R+=s[Dt],h&&(k+=s[Dt]**2))):(R-=s[W],R+=s[Dt],h&&(k-=s[W]**2,k+=s[Dt]**2)),d[$+B]=R,x[$+B]=_,h&&(g[$+B]=k)}}const y=new Float64Array(f),A=new Float64Array(f),w=new Uint32Array(f),v=l*r;for(let F=0;F<=r-m;F++){let $=0,R=0,k=0;for(let _=0;_<l;_++){const B=_*r+F;$+=d[B],k+=x[B],h&&(R+=g[B])}y[F]=$,A[F]=R,w[F]=k;for(let _=1;_<=i-l;_++){const B=(_-1)*r+F,W=B+v;$-=d[B],$+=d[W],k-=x[B],k+=x[W],h&&(R-=g[B],R+=g[W]),y[_*r+F]=$,A[_*r+F]=R,w[_*r+F]=k}}const T=Math.floor(l/2),N=Math.floor(m/2);for(let F=T;F<i-T;F++){const $=F*r;for(let R=N;R<r-N;R++){const k=(F-T)*r+R-N,_=w[k];if(_===0||n&&(!a||a[$+R]))continue;const B=y[k]/_,W=h?Math.sqrt((A[k]-y[k]*B)/_):B;o[$+R]=W,a&&(a[$+R]=255)}}}function po(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{kernelRows:u,kernelCols:l,statisticsType:m}=e,h=Math.floor(u/2),f=Math.floor(l/2),d=m==="min",g=o.slice(),x=new Uint32Array(r*i);for(let y=h;y<i-h;y++){const A=y*r;for(let w=f;w<r-f;w++){let v=d?Number.MAX_VALUE:-Number.MAX_VALUE,T=0;for(let N=0;N<u;N++)for(let F=0;F<l;F++){const $=A+w+(N-h)*r+F-f;a&&!a[$]||(v=d?Math.min(v,s[$]):Math.max(v,s[$]),T++)}a?(g[A+w]=T===0?0:v,x[A+w]=T):o[A+w]=T===0?0:v}}if(a)for(let y=h;y<i-h;y++){const A=y*r;for(let w=f;w<r-f;w++)if(x[A+w]){if(n&&a[A+w])continue;o[A+w]=g[A+w],a[A+w]=255}}}function ho(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),h=Math.floor(l/2),f=o.slice(),d=new Uint32Array(r*i);for(let g=m;g<i-m;g++){const x=g*r;for(let y=h;y<r-h;y++){if(n&&a?.[x+y])continue;const A=[];for(let w=0;w<u;w++)for(let v=0;v<l;v++){const T=x+y+(w-m)*r+v-h;a&&!a[T]||A.push(s[T])}A.length&&(A.sort((w,v)=>w-v),a?(f[x+y]=A[Math.floor((A.length-1)/2)],d[x+y]=A.length):o[x+y]=A[Math.floor((A.length-1)/2)])}}if(a)for(let g=m;g<i-m;g++){const x=g*r;for(let y=h;y<r-h;y++)if(d[x+y]){if(n&&a[x+y])continue;o[x+y]=f[x+y],a[x+y]=255}}}function mo(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),h=Math.floor(l/2),f=e.statisticsType==="majority",d=u*l,g=o.slice(),x=new Uint32Array(r*i);for(let y=m;y<i-m;y++){const A=y*r;for(let w=h;w<r-h;w++){if(n&&a?.[A+w])continue;const v=new Map;for(let $=0;$<u;$++)for(let R=0;R<l;R++){const k=A+w+($-m)*r+R-h;if(a&&!a[k])continue;const _=s[k];v.set(_,v.has(_)?v.get(_)+1:1)}if(v.size===0)continue;let T=0,N=0,F=f?0:d+1;for(const $ of v.keys())N=v.get($),f===N>F&&(F=N,T=$);a?(g[A+w]=T,x[A+w]=v.size):o[A+w]=T}}if(a)for(let y=m;y<i-m;y++){const A=y*r;for(let w=h;w<r-h;w++)if(x[A+w]){if(n&&a[A+w])continue;o[A+w]=g[A+w],a[A+w]=255}}}function fo(t,e){const{mask:n}=t,{fillNoDataOnly:s}=e;if(s&&!n)return t;const{pixels:r,width:i,height:a,bandMasks:o,pixelType:u}=t,l=r.length,m=i*a,h=[],{kernelRows:f,kernelCols:d,statisticsType:g,mirrorEdges:x}=e;if(s&&!n)return t;const y=e.outputPixelType??u,A=[];for(let T=0;T<l;T++){const N=r[T],F=b.createEmptyBand(y,m);s&&F.set(N);const $=o?.[T]??n,R=$?.slice()??null,k={band:N,width:i,height:a,mask:R,outBand:F};switch(g){case"min":case"max":po(k,e);break;case"mean":case"stddev":co(k,e);break;case"median":ho(k,e);break;case"majority":case"minority":mo(k,e)}x&&!s&&_e(F,i,a,f,d),h.push(F),R&&A.push(R)}let w=A[0]??n;A.length!==l&&(A.length=0),l>1&&o?.length&&(w=b.combineBandMasks(o));const v=new b({pixelType:y,width:i,height:a,pixels:h,bandMasks:o&&A.length?A:null,mask:w});return v.updateStatistics(),v}var ye;let vt=ye=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new ye({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:L(this.raster)})}};c([p({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],vt.prototype,"rows",void 0),c([p({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],vt.prototype,"cols",void 0),c([p({json:{write:!0}})],vt.prototype,"fillNoDataOnly",void 0),c([p({json:{read:{source:["statisticsType","type"],reader:(t,e)=>es.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),J(es)],vt.prototype,"statisticsType",void 0),vt=ye=c([P("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],vt);const go=vt;let Bt=class extends G{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();n.pixelType=this.outputPixelType;const{statisticsType:s}=this.functionArguments;return s==="stddev"&&this._removeStatsHistColormapVAT(n),this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{statisticsType:n,rows:s,cols:r,fillNoDataOnly:i}=this.functionArguments;return fo(e,{kernelRows:s,kernelCols:r,fillNoDataOnly:i,outputPixelType:this.outputPixelType,statisticsType:n,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:n,fillNoDataOnly:s}=this.functionArguments;return{fillNoDataOnly:s,kernelRows:t,kernelCols:e,statisticsType:n,clampRange:it(this.outputPixelType)}}};c([p({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),c([p({type:go,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),c([p()],Bt.prototype,"rasterArgumentNames",void 0),Bt=c([P("esri.layers.support.rasterFunctions.StatisticsFunction")],Bt);const yo=Bt;var xe;let At=xe=class extends D{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const n=[];return t.forEach(s=>{const r={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};n.push(r)}),n}writeStatistics(t,e,n){if(!t?.length)return;const s=[];t.forEach(r=>{const i={...r,mean:r.avg,standardDeviation:r.stddev};delete i.avg,delete i.stddev,s.push(i)}),e[n]=s}clone(){return new xe({statistics:L(this.statistics),histograms:L(this.histograms)})}};c([p({json:{write:!0}})],At.prototype,"statistics",void 0),c([St("statistics")],At.prototype,"readStatistics",null),c([Mt("statistics")],At.prototype,"writeStatistics",null),c([p({json:{write:!0}})],At.prototype,"histograms",void 0),At=xe=c([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],At);const xo=At;let nt=class extends G{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:n,histograms:s}=this.functionArguments;return s&&(e.histograms=s),n&&(e.statistics=n),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};c([p({json:{write:!0,name:"rasterFunction"}})],nt.prototype,"functionName",void 0),c([p({type:xo,json:{write:!0,name:"rasterFunctionArguments"}})],nt.prototype,"functionArguments",void 0),c([p()],nt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],nt.prototype,"indexedColormap",void 0),c([p()],nt.prototype,"isNoopProcess",void 0),nt=c([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],nt);const bo=nt;var be;const wo=new ot({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let V=be=class extends D{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,n){t?.length&&(Array.isArray(t[0])||(t=t.map(s=>[s.min,s.max,s.avg,s.stddev])),e[n]=t)}clone(){return new be({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:L(this.statistics),gamma:L(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:L(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([p({type:Boolean,json:{write:!0}})],V.prototype,"computeGamma",void 0),c([p({type:Boolean,json:{name:"dra",write:!0}})],V.prototype,"dynamicRangeAdjustment",void 0),c([p({type:[Number],json:{write:!0}})],V.prototype,"gamma",void 0),c([p()],V.prototype,"histograms",void 0),c([p({type:Number,json:{write:!0}})],V.prototype,"maxPercent",void 0),c([p({type:Number,json:{write:!0}})],V.prototype,"minPercent",void 0),c([p({type:Number,json:{write:!0}})],V.prototype,"numberOfStandardDeviations",void 0),c([p({type:Number,json:{name:"max",write:!0}})],V.prototype,"outputMax",void 0),c([p({type:Number,json:{name:"min",write:!0}})],V.prototype,"outputMin",void 0),c([p({type:Number,json:{write:!0}})],V.prototype,"sigmoidStrengthLevel",void 0),c([p({json:{type:[[Number]],write:!0}})],V.prototype,"statistics",void 0),c([Mt("statistics")],V.prototype,"writeStatistics",null),c([J(wo)],V.prototype,"stretchType",void 0),c([p({type:Boolean,json:{write:!0}})],V.prototype,"useGamma",void 0),V=be=c([P("esri.layers.support.rasterFunctions.StretchFunctionArguments")],V);const vo=V;let rt=class extends G{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:n}=this,{dynamicRangeAdjustment:s,gamma:r,useGamma:i}=n;if(!s&&["u8","u16","s8","s16"].includes(e)){const l=Yt(n.toJSON(),{rasterInfo:t}),m=H(this.outputPixelType)?"round":"float";this.lookup=Ds({pixelType:e,...l,gamma:i?r:null,rounding:m}),this.cutOffs=l}else s||(this.cutOffs=Yt(n.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const a=t.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),this.outputPixelType==="u8"&&(a.keyProperties.DataType="processed");const{outputMin:o=0,outputMax:u=255}=this.functionArguments;a.statistics=[];for(let l=0;l<a.bandCount;l++)a.statistics[l]={min:o,max:u};return this.rasterInfo=a,{success:!0,supportsGPU:!s}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{lookup:n}=this;if(n)return Ie(e,{...n,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:s}=this,r=this.cutOffs||Yt(s.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=s.useGamma?s.gamma:null;return Gs(e,{...r,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:n,useGamma:s}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,i=s&&n?.length?Es(r,n):[1,1,1],{minCutOff:a,maxCutOff:o}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};a.length===1&&(a[1]=a[2]=a[0],o[1]=o[2]=o[0]);const u=new Float32Array(r);let l;for(l=0;l<r;l++)u[l]=(e-t)/(o[l]-a[l]);const m=H(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:a,maxCutOff:o,factor:u,useGamma:s,gamma:s&&n?n:[1,1,1],gammaCorrection:s&&i?i:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:"stretch"}}};c([p({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),c([p({type:vo,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),c([p()],rt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],rt.prototype,"lookup",void 0),c([p({json:{write:!0}})],rt.prototype,"cutOffs",void 0),rt=c([P("esri.layers.support.rasterFunctions.StretchFunction")],rt);const Ao=rt;var we;let Xt=we=class extends D{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new we({attributeTableAsRecordSet:L(this.attributeTableAsRecordSet)})}};c([p({json:{write:!0}})],Xt.prototype,"attributeTableAsRecordSet",void 0),Xt=we=c([P("esri.layers.support.rasterFunctions.TableFunctionArguments")],Xt);const To=Xt;let Tt=class extends G{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const n=t.clone();return n.pixelType=this.outputPixelType,n.bandCount=1,n.dataType!=="thematic"&&(n.keyProperties=n.keyProperties?{...n.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};c([p({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([p({type:To,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([p()],Tt.prototype,"rasterArgumentNames",void 0),c([p()],Tt.prototype,"isNoopProcess",void 0),Tt=c([P("esri.layers.support.rasterFunctions.TableFunction")],Tt);const Po=Tt,M=new Map;function Fo(t,e){const{rasterFunctionArguments:n}=t;!n||(n.rasters||[n.raster,n.raster2]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(e.includes(s)||e.push(s)):"rasterFunctionArguments"in s&&Fo(s,e))})}function Oo(t,e){if(e=e??{},"function"in(t=L(t))&&"arguments"in t&&t.arguments){const n=xs(t,new Map,e);if(Te(n),!n.renderingRule)throw new Ot("raster-function-helper","Unsupported raster function json.");t=n.renderingRule}if("rasterFunction"in t)return gs(t=ve(t),e);throw new Ot("raster-function-helper","unsupported raster function json.")}function No(t,e){return e[0]==="rasters"&&Array.isArray(t.rasters)?t.rasters:e.map(n=>t[n])}function ss(t){return!!(t&&typeof t=="object"&&t.rasterFunction&&t.rasterFunctionArguments)}function ve(t){const{rasterFunction:e,rasterFunctionArguments:n}=t,s={};for(const r in n){let i=n[r];const a=r.toLowerCase();if(a==="rasters"&&Array.isArray(i))s.rasters=i.map(o=>ss(o)?ve(o):o);else switch(ss(i)&&(i=ve(i)),a){case"dra":s.dra=i;break;case"pspower":s.psPower=i;break;case"pszfactor":s.psZFactor=i;break;case"bandids":s.bandIds=i;break;default:s[r[0].toLowerCase()+r.slice(1)]=i}}return e!=="Local"||s.rasters?.length||(s.rasters=["$$"]),{...t,rasterFunctionArguments:s}}function gs(t,e){const{rasterFunction:n,rasterFunctionArguments:s}=t,r=t.outputPixelType?.toLowerCase();if(n==null||!M.has(n))throw new Ot("raster-function-helper",`unsupported raster function: ${n}`);const i=M.get(n),a=(typeof i.ctor=="function"?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:r}),{rasterArgumentNames:o}=a,u=[],l=No(s,o),m=o[0]==="rasters"||o.length>1,h=[];for(let f=0;f<l.length;f++){const d=l[f];let g;d==null||typeof d=="string"&&d.startsWith("$")?u.push(e?.raster):typeof d=="string"?e[d]&&u.push(e[d]):typeof d!="number"&&"rasterFunction"in d&&(g=gs(d,e),m||(a.functionArguments[o[f]]=g),u.push(g)),m&&h.push(g??d)}if(m&&(o[0]==="rasters"?a.functionArguments.rasters=h:o.forEach((f,d)=>{a.functionArguments[f]=h[d]})),e){a.sourceRasters=u;const f=e.raster?.url;f&&(a.mainPrimaryRasterId=f)}return a}function ys(t,e){if(t&&e)for(const n in t){const s=t[n];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?ys(s.arguments,e):s.type==="RasterFunctionVariable"&&e[s.name]!=null&&(s.value=e[s.name]))}}function Ae(t,e){if(!t||typeof t!="object")return t;const{value:n}=t;if(!n||typeof n!="object")return t.isDataset?"$$":n;if(Array.isArray(n))return n.length===0?[]:n.map(r=>typeof r=="object"&&r.type==="RasterFunctionVariable"?Ae(r,e):r);if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&n.type!=="Scalar")return"$$";if(!("type"in n))return n;let s=n;switch(n.type){case"Scalar":s=n.value;break;case"AlgorithmicColorRamp":s=ns(n);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(ns)};break;case"ArgumentArray":if(n.elements?.length&&n.elements[0].type!=="RasterStatistics"){const r=[];for(let i=0;i<n.elements.length;i++){const a=n.elements[i],{type:o}=a;if(o)if(o==="RasterFunctionTemplate"){const{renderingRule:u}=xs(a,e);r.push(u),a._object_id!=null&&e.set(a._object_id,u)}else{if(o!=="RasterFunctionVariable")throw new Ot("raster-function-helper","unsupported raster function json.");{const u=Ae(a,e);r.push(u),a._object_id!=null&&e.set(a._object_id,u)}}else r.push(a)}s=r}else s=n.elements}return n._object_id!=null&&e.set(n._object_id,s),s}function ns(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:s}=t;if(!Array.isArray(n)){const{r,g:i,b:a}=Be({h:n.Hue,s:n.Saturation,v:n.Value});n=[r,i,a,n.AlphaValue]}if(!Array.isArray(s)){const{r,g:i,b:a}=Be({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,i,a,s.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:s}}function xs(t,e,n){n&&ys(t,n);const s={renderingRule:{},templates:e};return bs(t,s),s}function bs(t,e){if(!t||!e.renderingRule)return;const{renderingRule:n,templates:s}=e,{function:r,arguments:i,_object_id:a}=t;if(!r||!i)return;a!=null&&s.set(a,n),n.rasterFunction=r.type.replace("Function",""),n.outputPixelType=r.pixelType;const o={};n.rasterFunctionArguments=o;for(const u in i){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=i[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?o[u]=Ae(l,s):(n.rasterFunctionArguments[u]={},bs(l,{renderingRule:n.rasterFunctionArguments[u],templates:s})),l._object_id!=null&&s.set(l._object_id,o[u])):o[u]=l}switch(o.DEM&&!o.Raster&&(o.Raster=o.DEM,delete o.DEM),n.rasterFunction){case"Stretch":$o(o);break;case"Colormap":Io(o);break;case"Convolution":Co(o);break;case"Mask":Ro(o)}}function Te(t){const{renderingRule:e,templates:n}=t;if(typeof e!="object"||!e?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:s}=e;for(const r in s){const i=s[r],a=r==="_object_ref_id"?i:i&&typeof i=="object"&&"_object_ref_id"in i?i._object_ref_id:null;if(a==null)i&&typeof i=="object"&&(i.rasterFunctionArguments&&Te({renderingRule:i,templates:n}),Array.isArray(i)&&i.forEach((o,u)=>{if(typeof o=="object")if(o._object_ref_id!=null){if(!n.has(o._object_ref_id))throw new Ot("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const l=n.get(a);l&&typeof l=="object"?Object.assign(o,l):i[u]=l}else Te({renderingRule:o,templates:n})}));else{if(!n.has(a))throw new Ot("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const o=n.get(a);r!=="_object_ref_id"?s[r]=o:o&&typeof o=="object"&&Object.assign(s,o)}}}function $o(t){t.Statistics?.length&&typeof t.Statistics=="object"&&(t.Statistics=t.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),t.NumberOfStandardDeviation!=null&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Io(t){t.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete t.ColorRamp,t.ColormapName="Random"),t.ColorSchemeType===0&&delete t.ColorRamp}function Co(t){t.ConvolutionType!=null&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function Ro(t){t.NoDataValues?.length&&typeof t.NoDataValues[0]=="string"&&(t.NoDataValues=t.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}M.set("Arithmetic",{desc:"Arithmetic Function",ctor:jn,rasterArgumentNames:["rasters"]}),M.set("Aspect",{desc:"Aspect Function",ctor:Mn,rasterArgumentNames:["raster"]}),M.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:lr,rasterArgumentNames:["raster"]}),M.set("Colormap",{desc:"Colormap Function",ctor:vr,rasterArgumentNames:["raster"]}),M.set("CompositeBand",{desc:"CompositeBand Function",ctor:Tr,rasterArgumentNames:["rasters"]}),M.set("ComputeChange",{desc:"ComputeChange Function",ctor:Br,rasterArgumentNames:["rasters"]}),M.set("Convolution",{desc:"Convolution Function",ctor:Vr,rasterArgumentNames:["raster"]}),M.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Sr,rasterArgumentNames:["raster"]}),M.set("ExtractBand",{desc:"ExtractBand Function",ctor:qr,rasterArgumentNames:["raster"]}),M.set("Curvature",{desc:"Curvature Function",ctor:Lr,rasterArgumentNames:["raster"]}),M.set("Grayscale",{desc:"Grayscale Function",ctor:Zr,rasterArgumentNames:["raster"]}),M.set("Clip",{desc:"Clip Function",ctor:pr,rasterArgumentNames:["raster"]}),M.set("Local",{desc:"Local Function",ctor:to,rasterArgumentNames:["rasters"]}),M.set("Mask",{desc:"Mask Function",ctor:so,rasterArgumentNames:["raster"]}),M.set("NDVI",{desc:"NDVI Function",ctor:ro,rasterArgumentNames:["raster"]}),M.set("Remap",{desc:"Remap Function",ctor:io,rasterArgumentNames:["raster"]}),M.set("Slope",{desc:"Slope Function",ctor:lo,rasterArgumentNames:["raster"]}),M.set("Statistics",{desc:"Focal Statistics Function",ctor:yo,rasterArgumentNames:["raster"]}),M.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:bo,rasterArgumentNames:["raster"]}),M.set("Stretch",{desc:"Stretch Function",ctor:Ao,rasterArgumentNames:["raster"]}),M.set("Table",{desc:"Attribute Table Function",ctor:Po,rasterArgumentNames:["raster"]});let Ut=class extends $e{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};c([p()],Ut.prototype,"affectsPixelSize",null),c([p({json:{write:!0}})],Ut.prototype,"spatialReference",void 0),Ut=c([P("esri.layers.support.rasterTransforms.BaseRasterTransform")],Ut);const ws=Ut;var Pe;let Lt=Pe=class extends ws{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return(t=t.clone()).type==="point"?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return(t=t.clone()).type==="point"?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new Pe({tolerance:this.tolerance})}};c([J({GCSShiftXform:"gcs-shift"})],Lt.prototype,"type",void 0),c([p()],Lt.prototype,"tolerance",void 0),Lt=Pe=c([P("esri.layers.support.rasterTransforms.GCSShiftTransform")],Lt);const Do=Lt;var Fe;function Ne(t,e,n){const{x:s,y:r}=e;if(n<2)return{x:t[0]+s*t[2]+r*t[4],y:t[1]+s*t[3]+r*t[5]};if(n===2){const f=s*s,d=r*r,g=s*r;return{x:t[0]+s*t[2]+r*t[4]+f*t[6]+g*t[8]+d*t[10],y:t[1]+s*t[3]+r*t[5]+f*t[7]+g*t[9]+d*t[11]}}const i=s*s,a=r*r,o=s*r,u=i*s,l=i*r,m=s*a,h=r*a;return{x:t[0]+s*t[2]+r*t[4]+i*t[6]+o*t[8]+a*t[10]+u*t[12]+l*t[14]+m*t[16]+h*t[18],y:t[1]+s*t[3]+r*t[5]+i*t[7]+o*t[9]+a*t[11]+u*t[13]+l*t[15]+m*t[17]+h*t[19]}}function rs(t,e,n){const{xmin:s,ymin:r,xmax:i,ymax:a,spatialReference:o}=e;let u=[];if(n<2)u.push({x:s,y:a}),u.push({x:i,y:a}),u.push({x:s,y:r}),u.push({x:i,y:r});else{let h=10;for(let f=0;f<h;f++)u.push({x:s,y:r+(a-r)*f/(h-1)}),u.push({x:i,y:r+(a-r)*f/(h-1)});h=8;for(let f=1;f<=h;f++)u.push({x:s+(i-s)*f/h,y:r}),u.push({x:s+(i-s)*f/h,y:a})}u=u.map(h=>Ne(t,h,n));const l=u.map(h=>h.x),m=u.map(h=>h.y);return new Ts({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,m),ymax:Math.max.apply(null,m),spatialReference:o})}function ko(t){const[e,n,s,r,i,a]=t,o=s*a-i*r,u=i*r-s*a;return[(i*n-e*a)/o,(s*n-e*r)/u,a/o,r/u,-i/o,-s/u]}let q=Fe=class extends ws{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:n,coeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let i=0;i<n.length;i++)r.push(n[i]),r.push(s[i]);return r}writeForwardCoefficients(t,e,n){const s=[],r=[];for(let i=0;i<t?.length;i++)i%2==0?s.push(t[i]):r.push(t[i]);e.coeffX=s,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=ko(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:n,inverseCoeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let i=0;i<n.length;i++)r.push(n[i]),r.push(s[i]);return r}writeInverseCoefficients(t,e,n){const s=[],r=[];for(let i=0;i<t?.length;i++)i%2==0?s.push(t[i]):r.push(t[i]);e.inverseCoeffX=s,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if(t.type==="point"){const e=Ne(this.forwardCoefficients,t,this.polynomialOrder);return new je({x:e.x,y:e.y,spatialReference:t.spatialReference})}return rs(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if(t.type==="point"){const e=Ne(this.inverseCoefficients,t,this.polynomialOrder);return new je({x:e.x,y:e.y,spatialReference:t.spatialReference})}return rs(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new Fe({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};c([p({json:{write:!0}})],q.prototype,"polynomialOrder",void 0),c([p()],q.prototype,"forwardCoefficients",void 0),c([St("forwardCoefficients",["coeffX","coeffY"])],q.prototype,"readForwardCoefficients",null),c([Mt("forwardCoefficients")],q.prototype,"writeForwardCoefficients",null),c([p({json:{write:!0}})],q.prototype,"inverseCoefficients",null),c([St("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],q.prototype,"readInverseCoefficients",null),c([Mt("inverseCoefficients")],q.prototype,"writeInverseCoefficients",null),c([p()],q.prototype,"affectsPixelSize",null),c([J({PolynomialXform:"polynomial"})],q.prototype,"type",void 0),q=Fe=c([P("esri.layers.support.rasterTransforms.PolynomialTransform")],q);const Go=q;export{Fo as R,Oo as S,ws as a,Do as c,Go as y};
