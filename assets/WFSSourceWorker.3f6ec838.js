import{s as g,F as p,bm as T,a7 as E,n as y,cP as _,G as R,cg as P}from"./index.7eb0daf2.js";import{o as q,r as I}from"./featureConversionUtils.c6dfa488.js";import{m as b}from"./FeatureStore.a6527479.js";import{x as j,j as $}from"./timeSupport.393bd0ba.js";import{$ as N}from"./QueryEngine.b9df2d2a.js";import{E as O,N as Q}from"./geojson.10d37f4c.js";import{p as M}from"./sourceUtils.62033bd7.js";import{o as k,e as L,K as f}from"./wfsUtils.4653566f.js";import{Z as G}from"./FieldsIndex.333d0734.js";import"./OptimizedFeature.32c00f5f.js";import"./OptimizedFeatureSet.6fd3bcb1.js";import"./BoundsStore.ae8d78e2.js";import"./PooledRBush.0bbb795a.js";import"./json.20588c22.js";import"./LRUCache.6f8863ed.js";import"./WhereClause.b007a323.js";import"./TimeOnly.5d28261e.js";import"./UnknownTimeZone.4756be49.js";import"./QueryEngineCapabilities.a12653c7.js";import"./quantizationUtils.fe6b1e6e.js";import"./utils.235d7b4d.js";import"./heatmapUtils.b763e953.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./utils.26a12d83.js";import"./utils.f2d50388.js";import"./ClassBreaksDefinition.427c0bbe.js";import"./date.9883f6ae.js";import"./xmlUtils.41bbbcaa.js";const x="esri.layers.WFSLayer";class _t{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t={}){const{getFeatureUrl:r,getFeatureOutputFormat:o,fields:n,geometryType:u,featureType:s,maxRecordCount:i,maxTotalRecordCount:m,maxPageCount:C,objectIdField:d,customParameters:F}=e,{spatialReference:l,getFeatureSpatialReference:c}=k(r,s,e.spatialReference);try{await j(c,l)}catch{throw new g("unsupported-projection","Projection not supported",{inSpatialReference:c,outSpatialReference:l})}p(t),this._customParameters=F,this._featureType=s,this._fieldsIndex=G.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:T}:null}),this._geometryType=u,this._getFeatureUrl=r,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=c,this._maxRecordCount=i,this._maxTotalRecordCount=m,this._maxPageCount=C,this._objectIdField=d,this._spatialReference=l;let h=await this._snapshotFeatures(t);if(h.errors.length>0&&(this._supportsPagination=!1,h=await this._snapshotFeatures(t),h.errors.length>0))throw h.errors[0];return this._queryEngine=new N({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:d,spatialReference:l,timeInfo:null,featureStore:new b({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(h.features),{warnings:w(h),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new g("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=E(t=>this._snapshotFeatures({signal:t})),this._snapshotTask.promise.then(t=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(t.features);for(const r of w(t))y.getLogger(x).warn(new _("wfs-layer:refresh-warning",r.message,r.details));t.errors?.length&&y.getLogger(x).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:t.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){const t=e?.signal,r=this._maxTotalRecordCount,o=this._maxPageCount,n=this._supportsPagination?await L(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0;let u=[];const s=[];if(n==null)try{u=await this._singleQuery(t)}catch(i){R(i)||s.push(i)}else{const i=Math.min(n,r),m=U(this,Math.max(1,Math.min(Math.ceil(i/this._maxRecordCount),o)),t);await Promise.allSettled(Array.from({length:10}).map(()=>Z(m,u,s)))}return p(t),{features:u,totalRecordCount:n,maxTotalRecordCount:r,maxPageCount:o,errors:s}}async _singleQuery(e){const t=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:e});return this._processGeoJSON(t,{signal:e})}async _pageQuery(e,t){const r=e*this._maxRecordCount,o=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:t});return this._processGeoJSON(o,{startIndex:r,signal:t})}_processGeoJSON(e,t){O(e,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:o}=t;p(o);const n=Q(e,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!P(this._spatialReference,this._getFeatureSpatialReference))for(const s of n)s.geometry!=null&&(s.geometry=q($(I(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=r??1;for(const s of n){const i={};M(this._fieldsIndex,i,s.attributes,!0),s.attributes=i,i[this._objectIdField]==null&&(s.objectId=i[this._objectIdField]=u++)}return n}}function*U(a,e,t){for(let r=0;r<e;r++)yield a._pageQuery(r,t)}async function Z(a,e,t){let r=a.next();for(;!r.done;){try{const o=await r.value;e.push(...o)}catch(o){R(o)||t.push(o)}r=a.next()}}function w(a){const e=[];return a.totalRecordCount!=null&&(a.features.length<a.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${a.features.length} of ${a.totalRecordCount} in ${a.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount}}),a.totalRecordCount>a.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${a.totalRecordCount} features exceeds the maximum allowed of ${a.maxTotalRecordCount}.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount,maxTotalRecordCount:a.maxTotalRecordCount}})),e}export{_t as default};
