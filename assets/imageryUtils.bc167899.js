import{$ as y,j as n}from"./utils.a325433b.js";import{l as c,a as p,f as i,i as u}from"./portalItemUtils.761d02ba.js";import"./index.7eb0daf2.js";import"./originUtils.4db9de46.js";import"./multiOriginJSONSupportUtils.e5f3496a.js";import"./jsonContext.a8ec6dbb.js";import"./saveAPIKeyUtils.47a3a270.js";import"./saveUtils.056b2dea.js";const s="Image Service",g="imagery-layer-save",v="imagery-layer-save-as",f="imagery-tile-layer-save",d="imagery-tile-layer-save-as";function l(r){if(r.type==="imagery")return{isValid:!0};const{raster:e}=r,t=e?.datasetFormat==="Function"?e.primaryRasters?.rasters[0]:e;return{isValid:t?.datasetFormat==="RasterTileServer"&&(t.tileType==="Raster"||t.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function m(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function T(r,e){const{parsedUrl:t,title:a,fullExtent:o}=r;e.url=t.path,e.title||=a;try{e.extent=await c(o)}catch{e.extent=void 0}p(e,i.METADATA),r.type==="imagery-tile"&&u(e,i.TILED_IMAGERY)}async function R(r,e){const t=r.type==="imagery"?g:f;return y({layer:r,itemType:s,validateLayer:l,createItemData:m,errorNamePrefix:t},e)}async function F(r,e,t){const a=r.type==="imagery"?v:d;return n({layer:r,itemType:s,validateLayer:l,createItemData:m,errorNamePrefix:a,newItem:e,setItemProperties:T},t)}export{R as save,F as saveAs};
