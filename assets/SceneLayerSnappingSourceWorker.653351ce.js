import{bM as gt,el as H,h8 as Y,iy as Rt,K as F,ah as y,hf as P,iz as Z,an as p,is as tt,h7 as X,aa as At,ac as Et,F as St,iA as v}from"./index.7eb0daf2.js";import{v as Ft,h as Nt,M as xt}from"./lineSegment.e18ce047.js";import{s as ut,m as et,T as D,l as nt,N as q,H as ot,V as _,_ as B,a as lt}from"./sphere.701721ad.js";import"./vec42.faaf2b1c.js";import"./vec4f64.7b667e97.js";import"./plane.23059d6d.js";import{i as _t}from"./Util.00c6201e.js";import{m as Mt}from"./edgeProcessing.96aa4115.js";import"./mat3f64.4564d6a3.js";import"./mat4f64.a89cc140.js";import"./quatf64.bcd5b590.js";import"./deduplicate.a7cfab22.js";import"./Indices.5bfd2621.js";import"./InterleavedLayout.1531e330.js";import"./BufferView.80717d85.js";import"./types.d0a70996.js";import"./VertexAttribute.53a8dea2.js";import"./enums.8929356b.js";import"./VertexElementDescriptor.c76e1b24.js";function mt(o){return o?{ray:et(o.ray),c0:o.c0,c1:o.c1}:{ray:et(),c0:0,c1:Number.MAX_VALUE}}new ut(()=>mt());function C(o,t){for(let e=0;e<jt;e++){const n=o[e];if(n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]>=t[3])return!1}return!0}var it,c;(function(o){o[o.LEFT=0]="LEFT",o[o.RIGHT=1]="RIGHT",o[o.BOTTOM=2]="BOTTOM",o[o.TOP=3]="TOP",o[o.NEAR=4]="NEAR",o[o.FAR=5]="FAR"})(it||(it={})),function(o){o[o.NEAR_BOTTOM_LEFT=0]="NEAR_BOTTOM_LEFT",o[o.NEAR_BOTTOM_RIGHT=1]="NEAR_BOTTOM_RIGHT",o[o.NEAR_TOP_RIGHT=2]="NEAR_TOP_RIGHT",o[o.NEAR_TOP_LEFT=3]="NEAR_TOP_LEFT",o[o.FAR_BOTTOM_LEFT=4]="FAR_BOTTOM_LEFT",o[o.FAR_BOTTOM_RIGHT=5]="FAR_BOTTOM_RIGHT",o[o.FAR_TOP_RIGHT=6]="FAR_TOP_RIGHT",o[o.FAR_TOP_LEFT=7]="FAR_TOP_LEFT"}(c||(c={}));c.FAR_BOTTOM_RIGHT,c.NEAR_BOTTOM_RIGHT,c.NEAR_BOTTOM_LEFT,c.FAR_BOTTOM_LEFT,c.NEAR_BOTTOM_LEFT,c.NEAR_BOTTOM_RIGHT,c.NEAR_TOP_RIGHT,c.NEAR_TOP_LEFT,c.FAR_BOTTOM_RIGHT,c.FAR_BOTTOM_LEFT,c.FAR_TOP_LEFT,c.FAR_TOP_RIGHT,c.NEAR_BOTTOM_RIGHT,c.FAR_BOTTOM_RIGHT,c.FAR_TOP_RIGHT,c.NEAR_TOP_RIGHT,c.FAR_BOTTOM_LEFT,c.NEAR_BOTTOM_LEFT,c.NEAR_TOP_LEFT,c.FAR_TOP_LEFT,c.FAR_TOP_LEFT,c.NEAR_TOP_LEFT,c.NEAR_TOP_RIGHT,c.FAR_TOP_RIGHT;const jt=6;new ut(mt);class j{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(t,e){this.objectToBoundingSphere=t,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new u,this._objectCount=0,e&&(e.maximumObjectsPerNode!==void 0&&(this._maximumObjectsPerNode=e.maximumObjectsPerNode),e.maximumDepth!==void 0&&(this._maximumDepth=e.maximumDepth))}destroy(){this._degenerateObjects.clear(),u.clearPool(),W[0]=null,x.prune(),M.prune()}add(t,e=t.length){this._objectCount+=e,this._grow(t,e);const n=u.acquire();for(let i=0;i<e;i++){const s=t[i];this._isDegenerate(s)?this._degenerateObjects.add(s):(n.init(this._root),this._add(s,n))}u.release(n)}remove(t,e=null){this._objectCount-=t.length;const n=u.acquire();for(const i of t){const s=e??D(this.objectToBoundingSphere(i),vt);I(s[3])?(n.init(this._root),Bt(i,s,n)):this._degenerateObjects.delete(i)}u.release(n),this._shrink()}update(t,e){if(!I(e[3])&&this._isDegenerate(t))return;const n=wt(t);this.remove(n,e),this.add(n)}forEachAlongRay(t,e,n){const i=nt(t,e);N(this._root,s=>{if(!Lt(i,s))return!1;const a=s.node;return a.terminals.forAll(h=>{this._intersectsObject(i,h)&&n(h)}),a.residents!==null&&a.residents.forAll(h=>{this._intersectsObject(i,h)&&n(h)}),!0})}forEachAlongRayWithVerticalOffset(t,e,n,i){const s=nt(t,e);N(this._root,a=>{if(!zt(s,a,i))return!1;const h=a.node;return h.terminals.forAll(r=>{this._intersectsObjectWithOffset(s,r,i)&&n(r)}),h.residents!==null&&h.residents.forAll(r=>{this._intersectsObjectWithOffset(s,r,i)&&n(r)}),!0})}forEach(t){N(this._root,e=>{const n=e.node;return n.terminals.forAll(t),n.residents!==null&&n.residents.forAll(t),!0}),this._degenerateObjects.forEach(t)}forEachDegenerateObject(t){this._degenerateObjects.forEach(t)}findClosest(t,e,n,i=()=>!0,s=1/0){let a=1/0,h=1/0,r=null;const d=V(t,e),m=l=>{if(--s,!i(l))return;const T=this.objectToBoundingSphere(l);if(!C(n,T))return;const R=S(t,e,_(T)),L=R-T[3],f=R+T[3];L<a&&(a=L,h=f,r=l)};return st(this._root,l=>{if(s<=0||!C(n,l.bounds)||(y(g,d,l.halfSize),P(g,g,_(l.bounds)),S(t,e,g)>h))return!1;const T=l.node;return T.terminals.forAll(R=>m(R)),T.residents!==null&&T.residents.forAll(R=>m(R)),!0},t,e),r}forEachInDepthRange(t,e,n,i,s,a,h){let r=-1/0,d=1/0;const m={setRange:f=>{n===j.DepthOrder.FRONT_TO_BACK?(r=Math.max(r,f.near),d=Math.min(d,f.far)):(r=Math.max(r,-f.far),d=Math.min(d,-f.near))}};m.setRange(i);const l=S(e,n,t),T=V(e,n),R=V(e,-n),L=f=>{if(!h(f))return;const E=this.objectToBoundingSphere(f),z=_(E),Q=S(e,n,z)-l,Ot=Q-E[3],bt=Q+E[3];Ot>d||bt<r||!C(a,E)||s(f,m)};st(this._root,f=>{if(!C(a,f.bounds)||(y(g,T,f.halfSize),P(g,g,_(f.bounds)),S(e,n,g)-l>d)||(y(g,R,f.halfSize),P(g,g,_(f.bounds)),S(e,n,g)-l<r))return!1;const E=f.node;return E.terminals.forAll(z=>L(z)),E.residents!==null&&E.residents.forAll(z=>L(z)),!0},e,n)}forEachNode(t){N(this._root,e=>t(e.node,e.bounds,e.halfSize,e.depth))}forEachNeighbor(t,e){const n=q(e),i=_(e),s=r=>{const d=this.objectToBoundingSphere(r),m=q(d),l=n+m;return!(Z(_(d),i)-l*l<=0)||t(r)};let a=!0;const h=r=>{a&&(a=s(r))};N(this._root,r=>{const d=q(r.bounds),m=n+d;if(Z(_(r.bounds),i)-m*m>0)return!1;const l=r.node;return l.terminals.forAll(h),a&&l.residents!==null&&l.residents.forAll(h),a}),a&&this.forEachDegenerateObject(h)}_intersectsObject(t,e){const n=this.objectToBoundingSphere(e);return!(n[3]>0)||ot(n,t)}_intersectsObjectWithOffset(t,e,n){const i=this.objectToBoundingSphere(e);return!(i[3]>0)||ot(n.applyToBoundingSphere(i),t)}_add(t,e){e.advanceTo(this.objectToBoundingSphere(t))?e.node.terminals.push(t):(e.node.residents.push(t),e.node.residents.length>this._maximumObjectsPerNode&&e.depth<this._maximumDepth&&this._split(e))}_split(t){const e=t.node.residents;t.node.residents=null;for(let n=0;n<e.length;n++){const i=u.acquire().init(t);this._add(e.at(n),i),u.release(i)}}_grow(t,e){if(e!==0&&(rt(t,e,n=>this.objectToBoundingSphere(n),A),I(A[3])&&!this._fitsInsideTree(A)))if(ft(this._root.node))D(A,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const n=this._rootBoundsForRootAsSubNode(A);this._placingRootViolatesMaxDepth(n)?this._rebuildTree(A,n):this._growRootAsSubNode(n),u.release(n)}}_rebuildTree(t,e){Y(_(K),_(e.bounds)),K[3]=e.halfSize,rt([t,K],2,i=>i,J);const n=u.acquire().init(this._root);this._root.initFrom(null,J,J[3]),this._root.increaseHalfSize(1.25),N(n,i=>(this.add(i.node.terminals.data,i.node.terminals.length),i.node.residents!==null&&this.add(i.node.residents.data,i.node.residents.length),!0)),u.release(n)}_placingRootViolatesMaxDepth(t){const e=Math.log(t.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return N(this._root,i=>(n=Math.max(n,i.depth),n+e<=this._maximumDepth)),n+e>this._maximumDepth}_rootBoundsForRootAsSubNode(t){const e=t[3],n=t;let i=-1/0;const s=this._root.bounds,a=this._root.halfSize;for(let r=0;r<3;r++){const d=s[r]-a-(n[r]-e),m=n[r]+e-(s[r]+a),l=Math.max(0,Math.ceil(d/(2*a))),T=Math.max(0,Math.ceil(m/(2*a)))+1,R=2**Math.ceil(Math.log(l+T)*Math.LOG2E);i=Math.max(i,R),w[r].min=l,w[r].max=T}for(let r=0;r<3;r++){let d=w[r].min,m=w[r].max;const l=(i-(d+m))/2;d+=Math.ceil(l),m+=Math.floor(l);const T=s[r]-a-d*a*2;k[r]=T+(m+d)*a}const h=i*a;return k[3]=h*Tt,u.acquire().initFrom(null,k,h,0)}_growRootAsSubNode(t){const e=this._root.node;Y(_(A),_(this._root.bounds)),A[3]=this._root.halfSize,this._root.init(t),t.advanceTo(A,null,!0),t.node.children=e.children,t.node.residents=e.residents,t.node.terminals=e.terminals}_shrink(){for(;;){const t=this._findShrinkIndex();if(t===-1)break;this._root.advance(t),this._root.depth=0}}_findShrinkIndex(){if(this._root.node.terminals.length!==0||this._root.isLeaf())return-1;let t=null;const e=this._root.node.children;let n=0,i=0;for(;i<e.length&&t==null;)n=i++,t=e[n];for(;i<e.length;)if(e[i++])return-1;return n}_isDegenerate(t){return!I(this.objectToBoundingSphere(t)[3])}_fitsInsideTree(t){const e=this._root.bounds,n=this._root.halfSize;return t[3]<=n&&t[0]>=e[0]-n&&t[0]<=e[0]+n&&t[1]>=e[1]-n&&t[1]<=e[1]+n&&t[2]>=e[2]-n&&t[2]<=e[2]+n}toJSON(){const{maximumDepth:t,maximumObjectsPerNode:e,_objectCount:n}=this,i=this._nodeToJSON(this._root.node);return{maximumDepth:t,maximumObjectsPerNode:e,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:i}}}_nodeToJSON(t){const e=t.children.map(s=>s?this._nodeToJSON(s):null),n=t.residents?.map(s=>this.objectToBoundingSphere(s)),i=t.terminals?.map(s=>this.objectToBoundingSphere(s));return{children:e,residents:n,terminals:i}}static fromJSON(t){const e=new j(n=>n,{maximumDepth:t.maximumDepth,maximumObjectsPerNode:t.maximumObjectsPerNode});return e._objectCount=t.objectCount,e._root.initFrom(t.root.node,t.root.bounds,t.root.halfSize,t.root.depth),e}}class u{constructor(){this.bounds=B(),this.halfSize=0,this.initFrom(null,null,0,0)}init(t){return this.initFrom(t.node,t.bounds,t.halfSize,t.depth)}initFrom(t,e,n,i=this.depth){return this.node=t??u.createEmptyNode(),e&&D(e,this.bounds),this.halfSize=n,this.depth=i,this}increaseHalfSize(t){this.halfSize*=t,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*Tt}advance(t){let e=this.node.children[t];e||(e=u.createEmptyNode(),this.node.children[t]=e),this.node=e,this.halfSize/=2,this.depth++;const n=pt[t];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(t,e,n=!1){for(;;){if(this.isTerminalFor(t))return e&&e(this,-1),!0;if(this.isLeaf()){if(!n)return e&&e(this,-1),!1;this.node.residents=null}const i=this._childIndex(t);e&&e(this,i),this.advance(i)}}isLeaf(){return this.node.residents!=null}isTerminalFor(t){return t[3]>this.halfSize/2}_childIndex(t){const e=this.bounds;return(e[0]<t[0]?1:0)+(e[1]<t[1]?2:0)+(e[2]<t[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new H({shrink:!0}),residents:new H({shrink:!0})}}static acquire(){return u._pool.acquire()}static release(t){u._pool.release(t)}static clearPool(){u._pool.prune()}}function N(o,t){let e=u.acquire().init(o);const n=[e];for(;n.length!==0;){if(e=n.pop(),t(e)&&!e.isLeaf())for(let i=0;i<e.node.children.length;i++)e.node.children[i]&&n.push(u.acquire().init(e).advance(i));u.release(e)}}function st(o,t,e,n=j.DepthOrder.FRONT_TO_BACK){let i=u.acquire().init(o);const s=[i];for(Ct(e,n,ht);s.length!==0;){if(i=s.pop(),t(i)&&!i.isLeaf())for(let a=7;a>=0;--a){const h=ht[a];i.node.children[h]&&s.push(u.acquire().init(i).advance(h))}u.release(i)}}function Bt(o,t,e){x.clear();const n=e.advanceTo(t,(i,s)=>{x.push(i.node),x.push(s)})?e.node.terminals:e.node.residents;if(n.removeUnordered(o),n.length===0)for(let i=x.length-2;i>=0&&Pt(x.data[i],x.data[i+1]);i-=2);}function Pt(o,t){return t>=0&&(o.children[t]=null),!!ft(o)&&(o.residents===null&&(o.residents=new H({shrink:!0})),!0)}function Lt(o,t){return G(_(t.bounds),2*-t.halfSize,O),G(_(t.bounds),2*t.halfSize,b),_t(o.origin,o.direction,O,b)}function zt(o,t,e){return G(_(t.bounds),2*-t.halfSize,O),G(_(t.bounds),2*t.halfSize,b),e.applyToMinMax(O,b),_t(o.origin,o.direction,O,b)}function ft(o){if(o.terminals.length!==0)return!1;if(o.residents!==null)return o.residents.length===0;for(let t=0;t<o.children.length;t++)if(o.children[t])return!1;return!0}function It(o,t){o[0]=Math.min(o[0],t[0]-t[3]),o[1]=Math.min(o[1],t[1]-t[3]),o[2]=Math.min(o[2],t[2]-t[3])}function Ht(o,t){o[0]=Math.max(o[0],t[0]+t[3]),o[1]=Math.max(o[1],t[1]+t[3]),o[2]=Math.max(o[2],t[2]+t[3])}function G(o,t,e){e[0]=o[0]+t,e[1]=o[1]+t,e[2]=o[2]+t}function rt(o,t,e,n){if(t===1){const i=e(o[0]);D(i,n)}else{O[0]=1/0,O[1]=1/0,O[2]=1/0,b[0]=-1/0,b[1]=-1/0,b[2]=-1/0;for(let i=0;i<t;i++){const s=e(o[i]);I(s[3])&&(It(O,s),Ht(b,s))}Rt(_(n),O,b,.5),n[3]=Math.max(b[0]-O[0],b[1]-O[1],b[2]-O[2])/2}}function Ct(o,t,e){if(!M.length)for(let n=0;n<8;++n)M.push({index:0,distance:0});for(let n=0;n<8;++n){const i=pt[n];M.data[n].index=n,M.data[n].distance=S(o,t,i)}M.sort((n,i)=>n.distance-i.distance);for(let n=0;n<8;++n)e[n]=M.data[n].index}function V(o,t){let e,n=1/0;for(let i=0;i<8;++i){const s=S(o,t,at[i]);s<n&&(n=s,e=at[i])}return e}function S(o,t,e){return t*(o[0]*e[0]+o[1]*e[1]+o[2]*e[2])}function I(o){return!isNaN(o)&&o!==-1/0&&o!==1/0&&o>0}u._pool=new gt(u),function(o){var t;(t=o.DepthOrder||(o.DepthOrder={}))[t.FRONT_TO_BACK=1]="FRONT_TO_BACK",t[t.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(j||(j={}));const pt=[p(-1,-1,-1),p(1,-1,-1),p(-1,1,-1),p(1,1,-1),p(-1,-1,1),p(1,-1,1),p(-1,1,1),p(1,1,1)],at=[p(-1,-1,-1),p(-1,-1,1),p(-1,1,-1),p(-1,1,1),p(1,-1,-1),p(1,-1,1),p(1,1,-1),p(1,1,1)],Tt=Math.sqrt(3),W=[null];function wt(o){return W[0]=o,W}const k=B(),g=F(),O=F(),b=F(),x=new H,vt=B(),A=B(),K=B(),J=B(),w=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],M=new H,ht=[0,0,0,0,0,0,0,0],dt=j,Dt=1e3;function Gt(o,t,e){const n=B(),i=_(n);return tt(i,i,o,.5),tt(i,i,t,.5),n[3]=X(i,o),P(i,i,e),n}let U=class{constructor(){this._idToComponent=new Map,this._components=new dt(o=>o.bounds),this._edges=new dt(o=>o.bounds),this._tmpLineSegment=Ft(),this._tmpP1=F(),this._tmpP2=F(),this._tmpP3=F(),this.remoteClient=null}async fetchCandidates(o,t){await Promise.resolve(),St(t),await this._ensureEdgeLocations(o,t);const e=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(o,n,e),e.length<Dt),o.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(o,t){const e=[];if(this._components.forEachNeighbor(s=>{if(s.info==null){const{id:a,uid:h}=s;e.push({id:a,uid:h})}return!0},o.bounds),!e.length)return;const n={components:e},i=await this.remoteClient.invoke("fetchAllEdgeLocations",n,t??{});for(const s of i.components)this._setFetchEdgeLocations(s)}async add(o){const t=new $(o.id,o.bounds);return this._idToComponent.set(t.id,t),this._components.add([t]),{result:{}}}async remove(o){const t=this._idToComponent.get(o.id);if(t){const e=[];this._edges.forEachNeighbor(n=>(n.component===t&&e.push(n),!0),t.bounds),this._edges.remove(e),this._components.remove([t]),this._idToComponent.delete(t.id)}return{result:{}}}_setFetchEdgeLocations(o){const t=this._idToComponent.get(o.id);if(t==null||o.uid!==t.uid)return;const e=Mt.createView(o.locations),n=new Array(e.count),i=F(),s=F();for(let r=0;r<e.count;r++){e.position0.getVec(r,i),e.position1.getVec(r,s);const d=Gt(i,s,o.origin),m=new $t(t,r,d);n[r]=m}this._edges.add(n);const{objectIds:a,origin:h}=o;t.info={locations:e,objectIds:a,origin:h}}_addCandidates(o,t,e){const{info:n}=t.component,{origin:i,objectIds:s}=n,a=n.locations,h=a.position0.getVec(t.index,this._tmpP1),r=a.position1.getVec(t.index,this._tmpP2);P(h,h,i),P(r,r,i);const d=s[a.componentIndex.get(t.index)];this._addEdgeCandidate(o,d,h,r,e),ct(o,d,h,e),ct(o,d,r,e)}_addEdgeCandidate(o,t,e,n,i){if(!o.returnEdge)return;const s=_(o.bounds),a=Nt(e,n,this._tmpLineSegment),h=xt(a,s,this._tmpP3);lt(o.bounds,h)&&i.push({type:"edge",objectId:t,target:v(h),distance:X(s,h),start:v(e),end:v(n)})}};U=At([Et("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],U);const ae=U;function ct(o,t,e,n){if(!o.returnVertex||!lt(o.bounds,e))return;const i=_(o.bounds);n.push({type:"vertex",objectId:t,target:v(e),distance:X(i,e)})}class ${constructor(t,e){this.id=t,this.bounds=e,this.info=null,this.uid=++$.uid}}$.uid=0;class $t{constructor(t,e,n){this.component=t,this.index=e,this.bounds=n}}export{ae as default};
