import{aT as r,aa as i,eG as o,ab as a,ac as l,dW as d}from"./index.7eb0daf2.js";const s=new r({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),n=new r({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let e=class extends d{constructor(t){super(t),this.type="class-breaks-definition",this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null}set standardDeviationInterval(t){this.classificationMethod==="standard-deviation"&&this._set("standardDeviationInterval",t)}set definedInterval(t){this.classificationMethod==="defined-interval"&&this._set("definedInterval",t)}};i([o({classBreaksDef:"class-breaks-definition"})],e.prototype,"type",void 0),i([a({json:{write:!0}})],e.prototype,"breakCount",void 0),i([a({json:{write:!0}})],e.prototype,"classificationField",void 0),i([a({type:String,json:{read:s.read,write:s.write}})],e.prototype,"classificationMethod",void 0),i([a({json:{write:!0}})],e.prototype,"normalizationField",void 0),i([a({json:{read:n.read,write:n.write}})],e.prototype,"normalizationType",void 0),i([a({value:null,json:{write:!0}})],e.prototype,"standardDeviationInterval",null),i([a({value:null,json:{write:!0}})],e.prototype,"definedInterval",null),e=i([l("esri.rest.support.ClassBreaksDefinition")],e);const p=e;export{p as d};
