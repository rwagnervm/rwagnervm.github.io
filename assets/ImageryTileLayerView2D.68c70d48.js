import{r as I,M as C,c4 as fe,R as O,b2 as V,Q as ge,fW as _e,aW as ae,ge as H,aB as ne,gf as ye,aa as h,ab as d,ac as z,a9 as xe,a1 as be,dx as we,fM as J,cz as ve,b7 as Te,fK as Pe,fL as Se,g4 as Y,aj as Re,G as U,n as $,aV as Ie,a4 as L,s as Ue,d7 as $e,dH as Fe,a5 as Ce}from"./index.7eb0daf2.js";import{o as K}from"./multidimensionalUtils.4eed3513.js";import{f as ze,d as Me,a as Ve}from"./RasterVFDisplayObject.6c3c1598.js";import{a as Be,f as Le,y as ke}from"./LayerView.649e11dc.js";import{s as De,E as D,r as oe}from"./Container.461c0161.js";import{L as E,P as Ge,U as Oe,D as Ee,R as B,O as X}from"./enums.8929356b.js";import{c as Ae,f as qe,m as Z,O as R,h as w,_ as A,A as je,p as We,l as Ne,T as Qe,g as He}from"./rasterUtils.97851091.js";import{f as Je,c as Ye}from"./Texture.7423fe29.js";import{c as F}from"./definitions.a3a54ed1.js";import{d as Ke,h as ee,r as le}from"./WGLContainer.a2728de7.js";import{E as Xe}from"./Program.9a92c5ff.js";import{i as ue}from"./TileContainer.419fd15d.js";import{a as Ze,S as et}from"./dataUtils.a1eaa611.js";import{g as te,a as se,i as tt,u as st}from"./RawBlockCache.74b3fa1f.js";import{D as rt,a as it,v as at,s as re}from"./rasterProjectionHelper.dd8d9a43.js";import{i as nt}from"./timeSupport.a600eb47.js";import{p as ot}from"./popupUtils.c8d8e4fb.js";import{i as lt}from"./RefreshableLayerView.6a9401d3.js";import"./ProgramTemplate.7599c672.js";import"./VertexElementDescriptor.c76e1b24.js";import"./LabelMetric.267a8b18.js";import"./enums.abef80de.js";import"./layerViewUtils.8a0a28d0.js";import"./highlightReasons.c3e7cabb.js";import"./vec3f32.788be850.js";import"./StyleDefinition.e031dcf6.js";import"./config.8224a140.js";import"./earcut.dc9d94eb.js";import"./featureConversionUtils.c6dfa488.js";import"./OptimizedFeature.32c00f5f.js";import"./OptimizedFeatureSet.6fd3bcb1.js";const ut={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class ct extends De{constructor(e=null,t=null,r=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=r}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(I(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||ut}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?E.LINEAR:E.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=I(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){const t=e||this.projected;return[t?this.width:this.source?.width||this.width,t?this.height:this.source?.height||this.height]}getRasterCellSize(){const e=this.rawPixelData?.srcPixelSize,{projected:t,resolution:r}=this;return e&&!t?[e.x,e.y]:[r,r]}_createTransforms(){return{displayViewScreenMat3:C()}}setTransform(e){const t=fe(this.transforms.displayViewScreenMat3),[r,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,n=a*this.width,o=a*this.height,l=Math.PI*this.rotation/180;O(t,t,V(r,i)),O(t,t,V(n/2,o/2)),ge(t,t,-l),O(t,t,V(-n/2,-o/2)),_e(t,t,V(n,o)),ae(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const r=t?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return r?(this._transformGridTexture&&!this.projected&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),t?(a.push(r),i.push("u_image"),this._colormapTexture&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):(a.push(r),i.push("u_image"),this._colormapTexture&&!e&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a})):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Ae(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(t=>t?.dispose()),e.length=0)}_createOrDestroyRasterTexture(e){const t=this.source?.extractBands(this.bandIds);if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const r=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(r)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource;this._rasterTexture=qe(e,t,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const t=this._rasterTextureBandIds;return!(t==null&&e==null||t&&e&&t.join("")===e.join(""))}_isValidSource(e){return e!=null&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:t}=this.symbolizerParameters,r=t==="lut"||t==="hillshade"||t==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||r||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,r=this.symbolizerParameters.colormap;return r?t?r.length!==t.length||r.some((i,a)=>i!==t[a])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=Z(e,r),void(this._colormap=r)):void 0:(this._colormapTexture=Z(e,r),void(this._colormap=r)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){!this._transformGridTexture||e&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function ht(s){return s.source!=null}function q(s){const e=[];return s&&(e.push("applyProjection"),s.spacing[0]===1&&e.push("lookupProjection")),e}function ce(s,e,t){const r=!t.capabilities.textureFloatLinear,i=[];return s==="cubic"?i.push("bicubic"):s==="bilinear"&&(e?(i.push("bilinear"),i.push("nnedge")):r&&i.push("bilinear")),i}const dt={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function mt(s,e,t){const r=t?[]:q(e.transformGrid);return{defines:r,program:s.painter.materialManager.getProgram(dt,r)}}function pt(s,e,t,r,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});R(s.context,e,a,n),w(e,r,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:l}=t.symbolizerParameters,c=A(o,l);w(e,r,c)}const ft={createProgram:mt,bindTextureAndUniforms:pt},gt={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function _t(s,e,t){const{colormap:r}=e.symbolizerParameters,i=[...t?[]:q(e.transformGrid),...ce(e.interpolation,!0,s.context)];return r!=null&&i.push("applyColormap"),{defines:i,program:s.painter.materialManager.getProgram(gt,i)}}function yt(s,e,t,r,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});R(s.context,e,a,n),w(e,r,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=A(l,c);w(e,r,u)}const p=je(o);w(e,r,p)}const xt={createProgram:_t,bindTextureAndUniforms:yt},bt={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function wt(s,e,t){const{colormap:r,bandCount:i}=e.symbolizerParameters,a=[...t?[]:q(e.transformGrid),...ce(e.interpolation,i===1,s.context)];return e.isRendereredSource&&!t?a.push("noop"):r!=null&&a.push("applyColormap"),{defines:a,program:s.painter.materialManager.getProgram(bt,a)}}function vt(s,e,t,r,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});R(s.context,e,a,n),w(e,r,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=A(l,c);w(e,r,u)}const p=We(o);w(e,r,p)}const Tt={createProgram:wt,bindTextureAndUniforms:vt},k=new Map;function Pt(s){return k.get(s)}k.set("lut",ft),k.set("hillshade",xt),k.set("stretch",Tt);const St=[1,1],Rt=[2,0,0,0,2,0,-1,-1,0];function b(s,e,t){const{context:r,rasterFunction:i,hasBranches:a}=s,{raster:n}=i.parameters,o=a?n?.id??-1:0,l=t.functionTextures[o]??t.rasterTexture;R(r,e,["u_image"],[l])}function j(s,e,t){const{rasters:r}=s.rasterFunction.parameters;if(!r)return;if(r.length<2)return b(s,e,t);const i=r.filter(a=>a.name!=="Constant").map(a=>a.id!=null&&a.name!=="Identity"?t.functionTextures[a.id]:t.rasterTexture);if(R(s.context,e,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==r.length){if(r.length===2){const a=r.findIndex(l=>l.name==="Constant"),n=a===0?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:o}=r[a].parameters;e.setUniform1f("u_image1Const",o),e.setUniformMatrix3fv("u_imageSwap",n)}else if(r.length===3){const a=[];if(r.forEach((n,o)=>n.name==="Constant"&&a.push(o)),a.length===1){const{value:n}=r[a[0]].parameters;e.setUniform1f("u_image1Const",n);const o=a[0]===0?[0,1,0,0,0,1,1,0,0]:a[0]===1?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];e.setUniformMatrix3fv("u_imageSwap",o)}else if(a.length===2){const{value:n}=r[a[0]].parameters;e.setUniform1f("u_image1Const",n);const{value:o}=r[a[1]].parameters;e.setUniform1f("u_image2Const",o);const l=r.findIndex(p=>p.name!=="Constant"),c=l===0?[1,0,0,0,1,0,0,0,1]:l===1?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];e.setUniformMatrix3fv("u_imageSwap",c)}}}}function y(s){s.setUniform2fv("u_coordScale",St),s.setUniformMatrix3fv("u_dvsMat3",Rt)}const It={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ut(s,e){return s.painter.materialManager.getProgram(It,[])}function $t(s,e,t){b(s,e,t),y(e);const r=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",r);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i)}const Ft={createProgram:Ut,bindTextureAndUniforms:$t},Ct={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function zt(s,e){const{painter:t,rasterFunction:r}=s,{indexType:i}=r.parameters;return t.materialManager.getProgram(Ct,[i])}function Mt(s,e,t){b(s,e,t),y(e);const{bandIndexMat3:r}=s.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",r)}const Vt={createProgram:zt,bindTextureAndUniforms:Mt},Bt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Lt(s,e){const t=s.rasterFunction.parameters.rasters.filter(i=>i.name==="Constant"),r=[];return t.length&&(r.push("oneConstant"),t.length===2&&r.push("twoConstant")),s.painter.materialManager.getProgram(Bt,r)}function kt(s,e,t){j(s,e,t),y(e)}const Dt={createProgram:Lt,bindTextureAndUniforms:kt},Gt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/computechange",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ot(s){const{painter:e,rasterFunction:t}=s,{method:r,rasters:i,isOutputRounded:a}=t.parameters,n=[r.includes("-")?r.slice(0,r.indexOf("-")):r];return i.filter(o=>o.name==="Constant").length&&n.push("oneConstant"),a&&n.push("roundOutput"),e.materialManager.getProgram(Gt,n)}function Et(s,e,t){j(s,e,t),y(e);const{domainRange:r}=s.rasterFunction.parameters;e.setUniform2fv("u_domainRange",r)}const At={createProgram:Ot,bindTextureAndUniforms:Et},qt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])};function jt(s,e){return s.painter.materialManager.getProgram(qt,[])}function Wt(s,e,t){b(s,e,t),y(e);const{contrastOffset:r,brightnessOffset:i}=s.rasterFunction.parameters;e.setUniform1f("u_contrastOffset",r),e.setUniform1f("u_brightnessOffset",i)}const Nt={createProgram:jt,bindTextureAndUniforms:Wt},Qt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ht(s,e){const{painter:t,rasterFunction:r}=s,{kernelRows:i,kernelCols:a}=r.parameters,n=[{name:"rows",value:i},{name:"cols",value:a}];return t.materialManager.getProgram(Qt,n)}function Jt(s,e,t){b(s,e,t),y(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{kernel:r,clampRange:i}=s.rasterFunction.parameters;e.setUniform1fv("u_kernel",r),e.setUniform2fv("u_clampRange",i)}const Yt={createProgram:Ht,bindTextureAndUniforms:Jt},Kt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Xt(s,e){const{painter:t,rasterFunction:r}=s,{curvatureType:i}=r.parameters,a=[i];return t.materialManager.getProgram(Kt,a)}function Zt(s,e,t){b(s,e,t),y(e);const r=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",r);const{zFactor:i}=s.rasterFunction.parameters,a=t.getRasterCellSize();e.setUniform1f("u_zlFactor",200*i/a[0]/a[1])}const es={createProgram:Xt,bindTextureAndUniforms:Zt},ts={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ss(s,e){return s.painter.materialManager.getProgram(ts,[])}function rs(s,e,t){b(s,e,t),y(e);const{bandIndexMat3:r}=s.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",r)}const is={createProgram:ss,bindTextureAndUniforms:rs},as={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ns(s,e){const{painter:t,rasterFunction:r}=s,{kernelRows:i,kernelCols:a,fillNoDataOnly:n,statisticsType:o}=r.parameters,l=[{name:"rows",value:i},{name:"cols",value:a},o];return n&&l.push("fill"),t.materialManager.getProgram(as,l)}function os(s,e,t){b(s,e,t),y(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{clampRange:r}=s.rasterFunction.parameters;e.setUniform2fv("u_clampRange",r)}const ls={createProgram:ns,bindTextureAndUniforms:os},us={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])};function cs(s,e){return s.painter.materialManager.getProgram(us,[])}function hs(s,e,t){b(s,e,t),y(e);const{weights:r}=s.rasterFunction.parameters;e.setUniform3fv("u_weights",r)}const ds={createProgram:cs,bindTextureAndUniforms:hs},ms={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ps(s){const{painter:e,rasterFunction:t}=s,{imageCount:r,operationName:i,rasters:a,isOutputRounded:n}=t.parameters,o=[i.toLowerCase()];r===2&&o.push("twoImages");const l=a.filter(c=>c.name==="Constant");return l.length&&(o.push("oneConstant"),l.length===2&&o.push("twoConstant")),n&&o.push("roundOutput"),e.materialManager.getProgram(ms,o)}function fs(s,e,t){j(s,e,t),y(e);const{domainRange:r}=s.rasterFunction.parameters;e.setUniform2fv("u_domainRange",r)}const ie={createProgram:ps,bindTextureAndUniforms:fs},gs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function _s(s,e){const{painter:t,rasterFunction:r}=s,i=r.parameters.bandCount>1?["multiBand"]:[];return t.materialManager.getProgram(gs,i)}function ys(s,e,t){b(s,e,t),y(e);const{includedRanges:r,noDataValues:i}=s.rasterFunction.parameters;e.setUniform1fv("u_includedRanges",r),e.setUniform1fv("u_noDataValues",i)}const xs={createProgram:_s,bindTextureAndUniforms:ys},bs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ws(s,e){const{painter:t,rasterFunction:r}=s,i=r.parameters.scaled?["scaled"]:[];return t.materialManager.getProgram(bs,i)}function vs(s,e,t){b(s,e,t),y(e);const{bandIndexMat3:r}=s.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",r)}const Ts={createProgram:ws,bindTextureAndUniforms:vs},Ps={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ss(s,e){return s.painter.materialManager.getProgram(Ps,[])}function Rs(s,e,t){b(s,e,t),y(e);const{noDataRanges:r,rangeMaps:i,allowUnmatched:a,clampRange:n}=s.rasterFunction.parameters;e.setUniform1fv("u_noDataRanges",r),e.setUniform1fv("u_rangeMaps",i),e.setUniform1f("u_unmatchMask",a?1:0),e.setUniform2fv("u_clampRange",n)}const Is={createProgram:Ss,bindTextureAndUniforms:Rs},Us={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function $s(s,e){const{painter:t}=s,r=[],{interpolation:i,transformGrid:a}=e,n=s.rasterFunction?.parameters;return i==="cubic"?r.push("bicubic"):i==="bilinear"&&(r.push("bilinear"),n?.requireNNEdge&&r.push("nnedge")),a&&(r.push("applyProjection"),a.spacing[0]===1&&r.push("lookupProjection")),t.materialManager.getProgram(Us,r)}function Fs(s,e,t){const{names:r,textures:i}=t.getTextures({forProcessing:!0});R(s.context,e,r,i),e.setUniform1f("u_scale",1),e.setUniform2fv("u_offset",[0,0]),e.setUniform2fv("u_coordScale",[1,1]),e.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),e.setUniform1i("u_flipY",0),e.setUniform1f("u_opacity",1);const{width:a,height:n,source:o,transformGrid:l}=t;e.setUniform2fv("u_srcImageSize",[o.width,o.height]),e.setUniform2fv("u_targetImageSize",[a,n]),e.setUniform2fv("u_transformSpacing",l?l.spacing:H),e.setUniform2fv("u_transformGridSize",l?l.size:H)}const Cs={createProgram:$s,bindTextureAndUniforms:Fs},zs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ms(s,e){const{painter:t,rasterFunction:r}=s,{slopeType:i}=r.parameters,a=i==="percent-rise"?["percentRise"]:[];return t.materialManager.getProgram(zs,a)}function Vs(s,e,t){b(s,e,t),y(e);const r=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",r);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i);const{zFactor:a,slopeType:n,pixelSizePower:o,pixelSizeFactor:l}=s.rasterFunction.parameters;e.setUniform1f("u_zFactor",a),e.setUniform1f("u_pixelSizePower",n==="adjusted"?o:0),e.setUniform1f("u_pixelSizeFactor",n==="adjusted"?l:0)}const Bs={createProgram:Ms,bindTextureAndUniforms:Vs},Ls={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ks(s,e){const{useGamma:t,bandCount:r,isOutputRounded:i}=s.rasterFunction.parameters,a=[];return t&&a.push("useGamma"),r>1&&a.push("multiBand"),i&&a.push("roundOutput"),s.painter.materialManager.getProgram(Ls,a)}function Ds(s,e,t){b(s,e,t),y(e);const{width:r,height:i}=t,a=s.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[r,i]),e.setUniform1f("u_minOutput",a.outMin),e.setUniform1f("u_maxOutput",a.outMax),e.setUniform1fv("u_factor",a.factor),e.setUniform1fv("u_minCutOff",a.minCutOff),e.setUniform1fv("u_maxCutOff",a.maxCutOff),e.setUniform1fv("u_gamma",a.gamma),e.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}const Gs={createProgram:ks,bindTextureAndUniforms:Ds},g=new Map;function he(s,e){const t=new Je;return t.width=s,t.height=e,t.internalFormat=Ge.RGBA32F,t.samplingMode=E.NEAREST,t.dataType=Oe.FLOAT,t.isImmutable=!0,t.wrapMode=Ee.CLAMP_TO_EDGE,t}function Os(s,e,t,r){const{context:i,requestRender:a,allowDelayedRender:n}=s,o=r.createProgram(s,t);return n&&a!=null&&!o.compiled?(a(),null):(i.bindFramebuffer(e),i.setViewport(0,0,e.width,e.height),i.useProgram(o),o)}function Es(s){return g.get(s.toLowerCase())}function As(s,e,t,r){const i=s.rasterFunction.name.toLowerCase(),a=i==="reproject"?Cs:Es(i);if(a==null)return;const n=Os(s,t,r,a);if(!n)return;a.bindTextureAndUniforms(s,n,r);const{interpolation:o}=r;i==="reproject"&&(r.interpolation="nearest"),e.draw();const[l,c]=r.getRasterTextureSize(i==="reproject"),p=he(l,c),u=new Ye(s.context,p);if(t.copyToTexture(0,0,l,c,0,0,u),i==="reproject")r.rasterTexture=u,r.projected=!0,r.interpolation=o;else{const m=s.hasBranches?s.rasterFunction.id:0;r.functionTextures[m]=u}}g.set("arithmetic",ie),g.set("aspect",Ft),g.set("bandarithmetic",Vt),g.set("computechange",At),g.set("compositeband",Dt),g.set("convolution",Yt),g.set("contrastbrightness",Nt),g.set("curvature",es),g.set("extractband",is),g.set("statistics",ls),g.set("grayscale",ds),g.set("local",ie),g.set("mask",xs),g.set("ndvi",Ts),g.set("remap",Is),g.set("slope",Bs),g.set("stretch",Gs);class qs extends Ke{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){I(this._quad),I(this._fbo)}prepareState(e){const{context:t,renderPass:r}=e,i=r==="raster";t.setBlendingEnabled(!i),t.setBlendFunctionSeparate(B.ONE,B.ONE_MINUS_SRC_ALPHA,B.ONE,B.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!i)}draw(e,t){if(!ht(t)||t.suspended)return;const{renderPass:r}=e;if(r!=="raster-bitmap")return r==="raster"?this._process(e,t):void this._drawBitmap(e,t,!0);this._drawBitmap(e,t)}_process(e,t){const{rasterFunction:r}=e,i=r.name==="Reproject";if(!(i?!(t.rasterTexture&&t.projected):!t.processed))return;const{timeline:a,context:n}=e;a.begin(this.name);const o=n.getBoundFramebufferObject(),l=n.getViewport();i||(t.processedTexture=I(t.processedTexture)),n.setStencilFunction(X.EQUAL,t.stencilRef,255),t.updateTexture(e),this._initQuad(n);const[c,p]=t.getRasterTextureSize(i),{isStandardRasterTileSize:u,fbo:m}=this._getRasterFBO(n,c,p);As(e,this._quad,m,t),u||m.dispose(),n.bindFramebuffer(o),n.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,t,r=!1){const{timeline:i,context:a}=e;if(i.begin(this.name),a.setStencilFunction(X.EQUAL,t.stencilRef,255),t.updateTexture(e),r&&!t.processedTexture){if(t.updateProcessedTexture(),!t.processedTexture)return void i.end(this.name);t.processed=!0}this._initBitmapCommonUniforms(t);const n=t.symbolizerParameters.type,o=Pt(n),{requestRender:l,allowDelayedRender:c}=e,{defines:p,program:u}=o.createProgram(e,t,t.projected&&r);if(c&&l!=null&&!u.compiled)return void l();a.useProgram(u);const m=this._getUniformInfos(n,a,u,p);this._quad||(this._quad=new ee(a,[0,0,1,0,0,1,1,1])),o.bindTextureAndUniforms(e,u,t,m,r),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const t=He(1,[0,0]),{transformGrid:r,width:i,height:a}=e,n=Ne(r,[i,a],[e.source.width,e.source.height],1,!1);e.commonUniforms={...t,...n,u_coordScale:e.coordScale}}}_getRasterFBO(e,t,r){const i=t===F&&r===F;return i?(this._fbo||(this._fbo=this._createNewFBO(e,t,r)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(e,t,r)}}_createNewFBO(e,t,r){const i=he(t,r);return new Xe(e,i)}_initQuad(e){this._quad||(this._quad=new ee(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,t,r,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const n=Qe(t,r);return this._rendererUniformInfos.set(a,n),n}}class js extends le{constructor(e,t,r,i,a,n,o=null){super(e,t,r,i,a,n),this.bitmap=null,this.bitmap=new ct(o,null,null),this.bitmap.coordScale=[a,n],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:C(),tileMat3:C()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}class Ws extends ue{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[r,i]=this._tileInfoView.tileInfo.size,a=this._tileInfoView.getTileResolution(e.level);return new js(e,a,t[0],t[3],r,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[qs],target:()=>this.children.map(r=>r.bitmap),drawPhase:D.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){if(!this.visible||e.drawPhase!==D.MAP)return;const{rasterFunctionChain:t}=this;if(!t)return e.renderPass="raster-bitmap",void super.doRender(e);if(!t.hasFocalFunction){const[r,i]=this._tileInfoView.tileInfo.size;e.renderPass="raster",e.rasterFunction={name:"Reproject",parameters:{targetImageSize:[r,i],requireNNEdge:t.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(e)}if(t?.functions.length){const{functions:r,hasBranches:i}=t;for(let a=0;a<r.length;a++){const n=r[a];n.name!=="Constant"&&n.name!=="Identity"&&(e.renderPass="raster",e.rasterFunction=n,e.hasBranches=i,super.doRender(e))}}e.rasterFunction=null,e.renderPass="bitmap",super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(ne(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:r}=this._tileInfoView,i=ye(r.spatialReference);if(i){const a=r.lodAt(e.level);if(!a)return t;const{resolution:n}=a,o=i/n%r.size[0],l=o?(r.size[0]-o)*n:0;t[0]-=l*e.world,t[2]-=l*e.world}}return t}}const Ns=[0,0];let x=class extends xe{constructor(){super(...arguments),this._updatingHandles=new be,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=we(async(s={})=>{const e=this._rasterFunctionState;if(s.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const t=this._rasterFunctionState,{type:r}=this;return s.refetch||r!=="raster"&&!!s.reprocess||t==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(s.signal))})}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(s){this._set("useWebGLForProcessing",s)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(s){if(this._tileStrategy&&this.useProgressiveUpdate!==s){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(s);this._tileStrategy=new J({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",s),this.layerView.requestUpdate()}}update(s){this._fetchQueue.pause(),this._fetchQueue.state=s.state,this._tileStrategy.update(s),this._fetchQueue.resume();const{extent:e,resolution:t,scale:r}=s.state,i=this._tileInfoView.getClosestInfoForScale(r);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const a=this._srcResolutions[i.level],n=e.toJSON?e:ve.fromJSON(e);te(this._blockCacheRegistryUrl,this._blockCacheRegistryId,n,t,a,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==i.level&&(this.previousLOD=i,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(s),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const s=Te();this._maxIndexedColormapSize=4*(s.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new Pe(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new Se({tileInfoView:this._tileInfoView,concurrency:e,process:(r,i)=>this._fetchTile(r,i)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new J({cachePolicy:"purge",acquireTile:r=>this.acquireTile(r),releaseTile:r=>this.releaseTile(r),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,se(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(s){const e=this.container.createTile(s);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(s){this._fetchQueue.abort(s.key.id),this.container.removeChild(s),s.once("detach",()=>{s.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(s=null){const e=s==null||s.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;s=s||this._tileInfoView.tileInfo.size;const[t,r]=s,i=new Ze({width:t,height:r,pixels:[new Uint8Array(t*r)],mask:new Uint8Array(t*r),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:s,raster:e}=this.layer,t="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return s?.length&&t?.length&&e.rasterInfo.bandCount!==1?s.map(r=>t[Math.min(r,t.length-1)]):s||t}updateRasterFunctionParameters(){}_fetchTile(s,e){const t=this._getFetchOptions(s.level,e.signal);return this.fetchTile(s,t)}_getFetchOptions(s,e){const t=this.canUseWebGLForProcessing(),{layerView:r}=this,{tileInfo:i}=r,a=!i.isWrappable&&rt(r.view.spatialReference)!=null,n=t&&this.layer.raster.hasUniqueSourceStorageInfo;return{allowPartialFill:!0,datumTransformation:r.datumTransformation,interpolation:t?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:n,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[s],timeExtent:r.timeExtent,tileInfo:i,disableWrapAround:a}}_getCacheSize(s){return s?40:0}_initializeTileInfo(){const{layerView:s}=this,e=s.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:p}=this.layer.tileInfo,u=p.map(({scale:f})=>f),m=Y.create({spatialReference:e,size:F,scales:u,origin:c});return s.set("tileInfo",m),void(this._srcResolutions=p.map(({resolution:f})=>({x:f,y:f})))}const{scales:t,srcResolutions:r,isCustomTilingScheme:i}=it(this.layer.serviceRasterInfo,e,{tileSize:F,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),a=Y.create({spatialReference:e,size:F,scales:t}),n=a.origin.x===0,{xmin:o,ymax:l}=s.fullExtent;(n||i&&a.origin.x>o)&&(a.origin=new Re({x:o,y:l,spatialReference:e})),this._isCustomTilingScheme=i,s.set("tileInfo",a),this._srcResolutions=r??[]}_canUseLayerLODs(){const{layer:s,layerView:e}=this;if(s.raster.tileType!=="Map")return!1;const{lods:t}=s.tileInfo,r=e.view.constraints?.effectiveLODs;return r?.length===t.length&&r.every(({scale:i},a)=>Math.abs(i-t[a].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:s}=this.layer.serviceRasterInfo.storageInfo,e=s[s.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(s,e){if(!this._fetchQueue.has(s.key.id)){try{const t=await this._fetchQueue.push(s.key),r=this._getBandIds();let i=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){i=!1;try{await this._redrawImage(this._abortController?.signal)}catch(o){U(o)&&$.getLogger(this).error(o)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(Ns,s.key),n=this._tileInfoView.getTileResolution(s.key);await this.updateTileSource(s,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:i,bandIds:r,coords:a,resolution:n}),s.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(s)}catch(t){U(t)||$.getLogger(this).error(t)}this.layerView.requestUpdate()}}async _redrawImage(s){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(s):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async t=>this.updateTileSymbolizerParameters(t,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(s){const e=this._getFetchOptions(this.previousLOD.level,s),t=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!t?.pixelBlock)return;const{resolution:r}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:t.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:i});!this.canUseWebGLForProcessing()&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(n=>255*n),a.outMin=Math.round(255*a.outMin),a.outMax=Math.round(255*a.outMax)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:s}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:s,y:s},bandIds:e})}_updateBlockCacheRegistry(s=!1){const{layer:e,layerView:t}=this,{raster:r}=e,{multidimensionalDefinition:i}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:t.timeExtent}),a=r.rasterInfo.multidimensionalInfo?r.getSliceIndex(i):null,n=tt(r.rasterId,a);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&se(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=st(n,r.rasterInfo),s){const{view:o}=t,l=this._tileInfoView.getClosestInfoForScale(o.scale),c=this._srcResolutions[l.level];te(n,this._blockCacheRegistryId,o.extent,o.resolution,c,r.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const s=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>s.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(s))}};h([d()],x.prototype,"_globalUpdateRequested",void 0),h([d()],x.prototype,"attached",void 0),h([d()],x.prototype,"container",void 0),h([d()],x.prototype,"layer",void 0),h([d()],x.prototype,"layerView",void 0),h([d()],x.prototype,"type",void 0),h([d()],x.prototype,"useWebGLForProcessing",null),h([d()],x.prototype,"useProgressiveUpdate",null),h([d()],x.prototype,"timeExtent",void 0),h([d()],x.prototype,"updating",null),x=h([z("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],x);let P=class extends x{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new Ws(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){const{symbolizer:s}=this.layer,e=s.lookup?.colormapLut?.indexedColormap,t=e&&e.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&s.canRenderInWebGL&&!t&&!(this.layer.interpolation==="majority"&&oe(this.layer))}fetchTile(s,e){return this.layer.fetchTile(s.level,s.row,s.col,e)}updateRasterFunctionParameters(){const{clips:s,view:e}=this.layerView;this._geometry!=null&&s.remove(this._geometry);const{raster:t,type:r}=this.layer;if(t.datasetFormat==="Function"){const f=t.getClippingGeometry(e.spatialReference);if(f){const _=new Be({geometry:f});s.add(_),this._geometry=_}}const{container:i}=this;if(t.datasetFormat!=="Function"||r==="wcs")return i.rasterFunctionChain=null,i.children.forEach(f=>{const{bitmap:_}=f;_&&(_.suspended=!0,_.processed=!1,_.projected&&(_.invalidateTexture(),_.rasterTexture=null))}),void(this._rasterFunctionState="na");const a=this._rasterFunctionState,{rasterFunction:n,primaryRasters:o}=t,l=n.supportsGPU&&(!o||o.rasters.length<=1),c=l?n.flatWebGLFunctionChain:null,{renderer:p}=this.layer,u=!l||!c?.functions.length||p?.type==="raster-stretch"&&p.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();i.rasterFunctionChain=u?null:c;const m=n==null?"na":i.rasterFunctionChain?"gpu":"cpu";i.children.forEach(f=>{const{bitmap:_}=f;_&&(_.suspended=a!==m,_.processed=!1,_.processedTexture=null)}),this._rasterFunctionState=m}async updateTileSource(s,e){const t=this._getBandIds(),r=this._getLayerInterpolation(),i=this.canUseWebGLForProcessing(),{source:a,globalSymbolizerParams:n,suspended:o,coords:l,resolution:c}=e,p=this.layerView.hasTilingEffects?n:e.symbolizerParams,{bitmap:u}=s;if([u.x,u.y]=l,u.resolution=c,a?.pixelBlock!=null){const m={extent:a.extent,pixelBlock:a.pixelBlock,srcPixelSize:a.srcTilePixelSize};if(u.rawPixelData=m,i)u.source=a.pixelBlock,u.isRendereredSource=!1;else{const f=await this.layer.applyRenderer(m,n?.type==="stretch"?n:void 0);u.source=f,u.isRendereredSource=!0}u.symbolizerParameters=i?p:null,u.transformGrid=i?a.transformGrid:null}else{const m=this.createEmptyTilePixelBlock();u.source=m,u.symbolizerParameters=i?p:null,u.transformGrid=null}u.bandIds=i?t:null,u.width=this._tileInfoView.tileInfo.size[0],u.height=this._tileInfoView.tileInfo.size[1],u.interpolation=r,u.suspended=o,u.invalidateTexture()}async updateTileSymbolizerParameters(s,e){const{local:t,global:r}=e,i=this._getBandIds(),a=this._getLayerInterpolation(),n=this.canUseWebGLForProcessing(),{bitmap:o}=s,{rawPixelData:l}=o;n||l==null?(o.isRendereredSource&&l!=null&&(o.source=l.pixelBlock),o.isRendereredSource=!1):(o.source=await this.layer.applyRenderer(l,r?.type==="stretch"?r:void 0),o.isRendereredSource=!0),o.symbolizerParameters=n?this.layerView.hasTilingEffects?r:t:null,o.bandIds=n?i:null,o.interpolation=a,o.suspended=!1}_getLayerInterpolation(){const{interpolation:s,renderer:e}=this.layer;if(!e)return s;const t=e.type;return t==="raster-colormap"||t==="unique-value"||t==="class-breaks"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?s==="bilinear"||s==="cubic"?"bilinear":"nearest":s}};h([d()],P.prototype,"container",void 0),h([d()],P.prototype,"layer",void 0),h([d()],P.prototype,"type",void 0),P=h([z("esri.views.2d.layers.imagery.ImageryTileView2D")],P);const Qs=P;class Hs extends le{constructor(e,t,r,i,a,n,o=null){super(e,t,r,i,a,n),this.tileData=new ze(o),this.tileData.coordScale=[a,n],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:C(),tileMat3:C()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[i,a]=this.tileData.offset,n=[this.x+i*this.resolution,this.y-a*this.resolution],[o,l]=e.toScreenNoRotation([0,0],n),{symbolTileSize:c}=this.tileData.symbolizerParameters,p=Math.round((this.width-this.tileData.offset[0])/c)*c,u=Math.round((this.height-this.tileData.offset[1])/c)*c,m=p/this.rangeX*t,f=u/this.rangeY*t;Ie(r,m,0,0,0,f,0,o,l,1),ae(this.transforms.displayViewScreenMat3,e.displayViewMat3,r),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Js extends ue{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(ne(),e),[r,i]=this._tileInfoView.tileInfo.size,a=this._tileInfoView.getTileResolution(e.level);return new Hs(e,a,t[0],t[3],r,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Me],target:()=>this.children.map(r=>r.tileData),drawPhase:D.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===D.MAP&&this.symbolTypes.forEach(t=>{e.renderPass=t,super.doRender(e)})}}let S=class extends x{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(s,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const t=await this.layer.fetchTile(s.level,s.row,s.col,e);return this.layer.serviceRasterInfo?.dataType==="vector-magdir"&&t?.pixelBlock&&(t.pixelBlock=await this.layer.convertVectorFieldData(t.pixelBlock,e)),t}updateTileSource(s,e){const t=e.symbolizerParams,{tileData:r}=s;r.key=s.key,r.width=this._tileInfoView.tileInfo.size[0],r.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=t,{source:a}=e;if(r.offset=this._getTileSymbolOffset(r.key,i),a?.pixelBlock!=null){const n={extent:a.extent,pixelBlock:a.pixelBlock};r.rawPixelData=n,r.symbolizerParameters=t,r.source=this._sampleVectorFieldData(a.pixelBlock,t,r.offset)}else{const n=[Math.round((this._tileInfoView.tileInfo.size[0]-r.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-r.offset[1])/i)],o=this.createEmptyTilePixelBlock(n);r.source=o,r.symbolizerParameters=t}return r.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(s,e){const t=e.local,{symbolTileSize:r}=t,{tileData:i}=s;i.offset=this._getTileSymbolOffset(i.key,r);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=t;const n=i.rawPixelData?.pixelBlock;return n!=null&&a!==r&&(i.source=this._sampleVectorFieldData(n,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new Js(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=L(()=>this.layer.renderer,s=>this._updateSymbolType(s))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(s,e){const t=s.col*this._tileInfoView.tileInfo.size[0]%e,r=s.row*this._tileInfoView.tileInfo.size[1]%e;return[t>e/2?e-t:-t,r>e/2?e-r:-r]}_sampleVectorFieldData(s,e,t){const{symbolTileSize:r}=e;return et(s,"vector-uv",r,t)}_updateSymbolType(s){s.type==="vector-field"&&(this.container.symbolTypes=s.style==="wind-barb"?["scalar","triangle"]:s.style==="simple-scalar"?["scalar"]:["triangle"])}};h([d()],S.prototype,"container",void 0),h([d()],S.prototype,"layer",void 0),h([d()],S.prototype,"type",void 0),S=h([z("esri.views.2d.layers.imagery.VectorFieldTileView2D")],S);const Ys=S,Ks=s=>{let e=class extends s{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}get timeExtent(){return nt(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return at(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(t){return!!re(this.layer.serviceRasterInfo,t)}async fetchPopupFeaturesAtLocation(t,r){const{layer:i}=this;if(!t)throw new Ue("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:a}=i,n=ot(i,r);if(!a||n==null)return[];const o=[],{value:l,magdirValue:c,processedValue:p}=await i.identify(t,{timeExtent:this.timeExtent,signal:r?.signal});let u="";if(l?.length){u=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(G=>i.getStandardTimeValue(G)).join(", "):l.join(", ");const m={ObjectId:0},f="Raster.ServicePixelValue";m[f]=i.type==="imagery-tile"&&i.raster.datasetFormat==="Function"?p?.join(", "):u,m[f+".Raw"]=u;const _=i.raster?.rasterInfo??i.serviceRasterInfo,W=_?.attributeTable;if(W!=null){const{fields:G,features:me}=W,Q=G.find(({name:v})=>v.toLowerCase()==="value"),pe=m[f],M=Q?me.find(v=>String(v.attributes[Q.name])===pe):null;if(M)for(const v in M.attributes)M.attributes.hasOwnProperty(v)&&(m[this._rasterFieldPrefix+v]=M.attributes[v])}const N=_?.dataType;N!=="vector-magdir"&&N!=="vector-uv"||(m["Raster.Magnitude"]=c?.[0],m["Raster.Direction"]=c?.[1]);const de=new $e({geometry:this.fullExtent.clone(),attributes:m,layer:i,sourceLayer:i});o.push(de)}return o}_getfullExtent(){return re(this.layer.serviceRasterInfo,this.view.spatialReference)}};return h([d()],e.prototype,"fullExtent",null),h([d()],e.prototype,"layer",void 0),h([d({readOnly:!0})],e.prototype,"timeExtent",null),h([d()],e.prototype,"view",void 0),h([d()],e.prototype,"tileInfo",void 0),h([d({readOnly:!0})],e.prototype,"hasTilingEffects",null),h([d()],e.prototype,"datumTransformation",null),e=h([z("esri.views.layers.ImageryTileLayerView")],e),e};let T=class extends Ks(lt(Le(ke))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(s){this._useWebGLForProcessing=s,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=s)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(s){this._useProgressiveUpdate=s,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=s)}get displayParameters(){const{layer:s}=this,e=this._get("displayParameters");return s.renderer?{bandIds:s.bandIds,renderer:s.renderer,interpolation:s.interpolation,multidimensionalDefinition:s.multidimensionalDefinition,rasterFunction:s.type==="imagery-tile"?s.rasterFunction:null}:e}update(s){this.subview?.update(s),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([L(()=>this.displayParameters,(s,e)=>{const t=s.interpolation!==e?.interpolation&&(s.interpolation==="majority"||e?.interpolation==="majority")&&oe(this.layer),r=s.renderer!==e?.renderer&&this._getSubviewType(e?.renderer)!==this._getSubviewType(s.renderer);r&&this._updateSubview();const i=s.multidimensionalDefinition!==e?.multidimensionalDefinition,a=s.rasterFunction!==e?.rasterFunction,n=a&&!this._useWebGLForProcessing,o=i||t||r||n;this.subview.redrawOrRefetch({refetch:o,reprocess:a}).catch(l=>{U(l)||$.getLogger(this).error(l)}),this.notifyChange("updating")}),L(()=>this.layer.multidimensionalSubset??null,(s,e)=>{const{multidimensionalDefinition:t}=this.layer;t!=null&&K(t,s)!==K(t,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(r=>{U(r)||$.getLogger(this).error(r)}),this.notifyChange("updating"))},Fe),L(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(s=>{U(s)||$.getLogger(this).error(s)})},Ce)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:s}=this.layer;if(!s)return;const e=this._getSubviewType(s);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:t}=this;let r;if(r=e==="rasterVF"?new Ys({layer:t,layerView:this}):e==="flow"?new Ve({layer:t,layerView:this}):new Qs({layer:t,layerView:this}),"useWebGLForProcessing"in r&&(r.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in r&&(r.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in r){const{subview:i}=this;r.previousLOD=i&&"previousLOD"in i?i.previousLOD:null}this._attachSubview(r),this.subview=r,this.requestUpdate()}_attachSubview(s){s&&!s.attached&&(s.attach(),s.attached=!0,this.container.addChildAt(s.container,0))}_detachSubview(s){s?.attached&&(this.container.removeChild(s.container),s.detach(),s.attached=!1)}_getSubviewType(s){const e=s?.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};h([d()],T.prototype,"subview",void 0),h([d()],T.prototype,"useWebGLForProcessing",null),h([d()],T.prototype,"useProgressiveUpdate",null),h([d({readOnly:!0})],T.prototype,"displayParameters",null),T=h([z("esri.views.2d.layers.ImageryTileLayerView2D")],T);const $r=T;export{$r as default};
